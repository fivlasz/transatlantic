// $ANTLR 3.5 CIL.g 2013-02-17 11:37:14
package parsing.cil.antlr3;

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;


@SuppressWarnings("all")
public class CILParser extends Parser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ADD", "ADD_OVF", "ADD_OVF_UN", 
		"AND", "ARGLIST", "BEQ", "BEQ_S", "BGE", "BGE_S", "BGE_UN", "BGE_UN_S", 
		"BGT", "BGT_S", "BGT_UN", "BGT_UN_S", "BLE", "BLE_S", "BLE_UN", "BLE_UN_S", 
		"BLOB", "BLOB_OBJECT", "BLT", "BLT_S", "BLT_UN", "BLT_UN_S", "BNE_UN", 
		"BNE_UN_S", "BOX", "BR", "BREAK", "BRFALSE", "BRFALSE_S", "BRINST", "BRINST_S", 
		"BRNULL", "BRNULL_S", "BRTRUE", "BRTRUE_S", "BRZERO", "BRZERO_S", "BR_S", 
		"BSTR", "BYTEARRAY", "BYVALSTR", "CALL", "CALLI", "CALLMOSTDERIVED", "CALLVIRT", 
		"CARRAY", "CASTCLASS", "CATCH", "CDECL", "CEQ", "CF", "CGT", "CGT_UN", 
		"CHAR", "CIL", "CKFINITE", "CLASS", "CLSID", "CLT", "CLT_UN", "CONST", 
		"CONV_I", "CONV_I1", "CONV_I2", "CONV_I4", "CONV_I8", "CONV_OVF_I", "CONV_OVF_I1", 
		"CONV_OVF_I1_UN", "CONV_OVF_I2", "CONV_OVF_I2_UN", "CONV_OVF_I4", "CONV_OVF_I4_UN", 
		"CONV_OVF_I8", "CONV_OVF_I8_UN", "CONV_OVF_I_UN", "CONV_OVF_U", "CONV_OVF_U1", 
		"CONV_OVF_U1_UN", "CONV_OVF_U2", "CONV_OVF_U2_UN", "CONV_OVF_U4", "CONV_OVF_U4_UN", 
		"CONV_OVF_U8", "CONV_OVF_U8_UN", "CONV_OVF_U_UN", "CONV_R4", "CONV_R8", 
		"CONV_R_UN", "CONV_U", "CONV_U1", "CONV_U2", "CONV_U4", "CONV_U8", "CPBLK", 
		"CPOBJ", "DIGIT", "DIV", "DIV_UN", "DOT", "DOTTEDNAME", "DUP", "ENDFAULT", 
		"ENDFILTER", "ENDFINALLY", "ESC", "EXPONENT", "FLOAT64", "HEXBYTE", "HEX_DIGIT", 
		"ID", "INITBLK", "INITOBJ", "INT32", "ISINST", "JMP", "LDARG", "LDARGA", 
		"LDARGA_S", "LDARG_0", "LDARG_1", "LDARG_2", "LDARG_3", "LDARG_S", "LDC_I4", 
		"LDC_I4_0", "LDC_I4_1", "LDC_I4_2", "LDC_I4_3", "LDC_I4_4", "LDC_I4_5", 
		"LDC_I4_6", "LDC_I4_7", "LDC_I4_8", "LDC_I4_M1", "LDC_I4_S", "LDC_I8", 
		"LDC_R4", "LDC_R8", "LDELEMA", "LDELEM_I", "LDELEM_I1", "LDELEM_I2", "LDELEM_I4", 
		"LDELEM_I8", "LDELEM_R4", "LDELEM_R8", "LDELEM_REF", "LDELEM_U1", "LDELEM_U2", 
		"LDELEM_U4", "LDELEM_U8", "LDFLD", "LDFLDA", "LDFTN", "LDIND_I", "LDIND_I1", 
		"LDIND_I2", "LDIND_I4", "LDIND_I8", "LDIND_R4", "LDIND_R8", "LDIND_REF", 
		"LDIND_U1", "LDIND_U2", "LDIND_U4", "LDIND_U8", "LDLEN", "LDLOC", "LDLOCA", 
		"LDLOCA_S", "LDLOC_0", "LDLOC_1", "LDLOC_2", "LDLOC_3", "LDLOC_S", "LDNULL", 
		"LDOBJ", "LDSFLD", "LDSFLDA", "LDSTR", "LDTOKEN", "LDVIRTFTN", "LEAVE", 
		"LEAVE_S", "LETTER", "LOCALLOC", "MKREFANY", "MUL", "MUL_OVF", "MUL_OVF_UN", 
		"NEG", "NEWARR", "NEWOBJ", "NOP", "NOT", "OR", "POP", "QSTRING", "REFANYTYPE", 
		"REFANYVAL", "REM", "REM_UN", "REQUEST", "RET", "RETHROW", "SHL", "SHR", 
		"SHR_UN", "SIZEOF", "SQSTRING", "STARG", "STARG_S", "STELEM_I", "STELEM_I1", 
		"STELEM_I2", "STELEM_I4", "STELEM_I8", "STELEM_R4", "STELEM_R8", "STELEM_REF", 
		"STFLD", "STIND_I", "STIND_I1", "STIND_I2", "STIND_I4", "STIND_I8", "STIND_R4", 
		"STIND_R8", "STIND_REF", "STLOC", "STLOC_0", "STLOC_1", "STLOC_2", "STLOC_3", 
		"STLOC_S", "STOBJ", "STSFLD", "SUB", "SUB_OVF", "SUB_OVF_UN", "SWITCH", 
		"TAIL_", "THROW", "UNALIGNED_", "UNBOX", "VOLATILE_", "WS", "XOR", "'!'", 
		"'&'", "'('", "')'", "'*'", "'+'", "','", "'-'", "'...'", "'.addon'", 
		"'.assembly'", "'.base'", "'.cctor'", "'.class'", "'.corflags'", "'.ctor'", 
		"'.custom'", "'.data'", "'.emitbyte'", "'.entrypoint'", "'.event'", "'.export'", 
		"'.field'", "'.file'", "'.fire'", "'.get'", "'.hash'", "'.imagebase'", 
		"'.language'", "'.line'", "'.locale'", "'.locals'", "'.maxstack'", "'.method'", 
		"'.module'", "'.mresource'", "'.mscorlib'", "'.namespace'", "'.nester'", 
		"'.other'", "'.override'", "'.pack'", "'.permission'", "'.permissionset'", 
		"'.property'", "'.publickey'", "'.publickeytoken'", "'.removeon'", "'.set'", 
		"'.size'", "'.stackreserve'", "'.subsystem'", "'.this'", "'.try'", "'.typedef'", 
		"'.typelist'", "'.ver'", "'.vtable'", "'.vtentry'", "'.vtfixup'", "'.zeroinit'", 
		"'/'", "':'", "'::'", "'<'", "'='", "'>'", "'['", "']'", "'abstract'", 
		"'algorithm'", "'alignment'", "'amd64'", "'ansi'", "'any'", "'array'", 
		"'as'", "'assembly'", "'assert'", "'at'", "'auto'", "'autochar'", "'beforefieldinit'", 
		"'bestfit'", "'bool'", "'callconv'", "'charmaperror'", "'currency'", "'custom'", 
		"'date'", "'decimal'", "'default'", "'demand'", "'deny'", "'enum'", "'error'", 
		"'explicit'", "'extends'", "'extern'", "'false'", "'famandassem'", "'family'", 
		"'famorassem'", "'fastcall'", "'fault'", "'field'", "'filetime'", "'filter'", 
		"'final'", "'finally'", "'fixed'", "'flags'", "'float'", "'float32'", 
		"'float64'", "'forwarder'", "'forwardref'", "'fromunmanaged'", "'handler'", 
		"'hidebysig'", "'hresult'", "'ia64'", "'idispatch'", "'iidparam'", "'implements'", 
		"'import'", "'in'", "'inheritcheck'", "'init'", "'initonly'", "'instance'", 
		"'int'", "'int16'", "'int32'", "'int64'", "'int8'", "'interface'", "'internalcall'", 
		"'iunknown'", "'lasterr'", "'legacy'", "'library'", "'linkcheck'", "'literal'", 
		"'lpstr'", "'lpstruct'", "'lptstr'", "'lpwstr'", "'managed'", "'marshal'", 
		"'mdtoken'", "'method'", "'modopt'", "'modreq'", "'native'", "'nested'", 
		"'newslot'", "'noinlining'", "'nomangle'", "'nometadata'", "'noncasdemand'", 
		"'noncasinheritance'", "'noncaslinkdemand'", "'nooptimization'", "'notserialized'", 
		"'null'", "'nullref'", "'object'", "'objectref'", "'off'", "'on'", "'opt'", 
		"'optil'", "'out'", "'param'", "'permitonly'", "'pinned'", "'pinvokeimpl'", 
		"'prejitdeny'", "'prejitgrant'", "'preservesig'", "'private'", "'privatescope'", 
		"'property'", "'public'", "'record'", "'reqmin'", "'reqopt'", "'reqrefuse'", 
		"'reqsecobj'", "'retainappdomain'", "'retargetable'", "'rtspecialname'", 
		"'runtime'", "'safearray'", "'sealed'", "'sequential'", "'serializable'", 
		"'specialname'", "'static'", "'stdcall'", "'storage'", "'stored_object'", 
		"'stream'", "'streamed_object'", "'strict'", "'string'", "'struct'", "'synchronized'", 
		"'syschar'", "'sysstring'", "'tbstr'", "'thiscall'", "'tls'", "'to'", 
		"'true'", "'type'", "'typedref'", "'uint'", "'uint16'", "'uint32'", "'uint64'", 
		"'uint8'", "'unicode'", "'unmanaged'", "'unmanagedexp'", "'unsigned'", 
		"'userdefined'", "'value'", "'valuetype'", "'vararg'", "'variant'", "'vector'", 
		"'virtual'", "'void'", "'winapi'", "'with'", "'x86'", "'{'", "'}'"
	};
	public static final int EOF=-1;
	public static final int T__256=256;
	public static final int T__257=257;
	public static final int T__258=258;
	public static final int T__259=259;
	public static final int T__260=260;
	public static final int T__261=261;
	public static final int T__262=262;
	public static final int T__263=263;
	public static final int T__264=264;
	public static final int T__265=265;
	public static final int T__266=266;
	public static final int T__267=267;
	public static final int T__268=268;
	public static final int T__269=269;
	public static final int T__270=270;
	public static final int T__271=271;
	public static final int T__272=272;
	public static final int T__273=273;
	public static final int T__274=274;
	public static final int T__275=275;
	public static final int T__276=276;
	public static final int T__277=277;
	public static final int T__278=278;
	public static final int T__279=279;
	public static final int T__280=280;
	public static final int T__281=281;
	public static final int T__282=282;
	public static final int T__283=283;
	public static final int T__284=284;
	public static final int T__285=285;
	public static final int T__286=286;
	public static final int T__287=287;
	public static final int T__288=288;
	public static final int T__289=289;
	public static final int T__290=290;
	public static final int T__291=291;
	public static final int T__292=292;
	public static final int T__293=293;
	public static final int T__294=294;
	public static final int T__295=295;
	public static final int T__296=296;
	public static final int T__297=297;
	public static final int T__298=298;
	public static final int T__299=299;
	public static final int T__300=300;
	public static final int T__301=301;
	public static final int T__302=302;
	public static final int T__303=303;
	public static final int T__304=304;
	public static final int T__305=305;
	public static final int T__306=306;
	public static final int T__307=307;
	public static final int T__308=308;
	public static final int T__309=309;
	public static final int T__310=310;
	public static final int T__311=311;
	public static final int T__312=312;
	public static final int T__313=313;
	public static final int T__314=314;
	public static final int T__315=315;
	public static final int T__316=316;
	public static final int T__317=317;
	public static final int T__318=318;
	public static final int T__319=319;
	public static final int T__320=320;
	public static final int T__321=321;
	public static final int T__322=322;
	public static final int T__323=323;
	public static final int T__324=324;
	public static final int T__325=325;
	public static final int T__326=326;
	public static final int T__327=327;
	public static final int T__328=328;
	public static final int T__329=329;
	public static final int T__330=330;
	public static final int T__331=331;
	public static final int T__332=332;
	public static final int T__333=333;
	public static final int T__334=334;
	public static final int T__335=335;
	public static final int T__336=336;
	public static final int T__337=337;
	public static final int T__338=338;
	public static final int T__339=339;
	public static final int T__340=340;
	public static final int T__341=341;
	public static final int T__342=342;
	public static final int T__343=343;
	public static final int T__344=344;
	public static final int T__345=345;
	public static final int T__346=346;
	public static final int T__347=347;
	public static final int T__348=348;
	public static final int T__349=349;
	public static final int T__350=350;
	public static final int T__351=351;
	public static final int T__352=352;
	public static final int T__353=353;
	public static final int T__354=354;
	public static final int T__355=355;
	public static final int T__356=356;
	public static final int T__357=357;
	public static final int T__358=358;
	public static final int T__359=359;
	public static final int T__360=360;
	public static final int T__361=361;
	public static final int T__362=362;
	public static final int T__363=363;
	public static final int T__364=364;
	public static final int T__365=365;
	public static final int T__366=366;
	public static final int T__367=367;
	public static final int T__368=368;
	public static final int T__369=369;
	public static final int T__370=370;
	public static final int T__371=371;
	public static final int T__372=372;
	public static final int T__373=373;
	public static final int T__374=374;
	public static final int T__375=375;
	public static final int T__376=376;
	public static final int T__377=377;
	public static final int T__378=378;
	public static final int T__379=379;
	public static final int T__380=380;
	public static final int T__381=381;
	public static final int T__382=382;
	public static final int T__383=383;
	public static final int T__384=384;
	public static final int T__385=385;
	public static final int T__386=386;
	public static final int T__387=387;
	public static final int T__388=388;
	public static final int T__389=389;
	public static final int T__390=390;
	public static final int T__391=391;
	public static final int T__392=392;
	public static final int T__393=393;
	public static final int T__394=394;
	public static final int T__395=395;
	public static final int T__396=396;
	public static final int T__397=397;
	public static final int T__398=398;
	public static final int T__399=399;
	public static final int T__400=400;
	public static final int T__401=401;
	public static final int T__402=402;
	public static final int T__403=403;
	public static final int T__404=404;
	public static final int T__405=405;
	public static final int T__406=406;
	public static final int T__407=407;
	public static final int T__408=408;
	public static final int T__409=409;
	public static final int T__410=410;
	public static final int T__411=411;
	public static final int T__412=412;
	public static final int T__413=413;
	public static final int T__414=414;
	public static final int T__415=415;
	public static final int T__416=416;
	public static final int T__417=417;
	public static final int T__418=418;
	public static final int T__419=419;
	public static final int T__420=420;
	public static final int T__421=421;
	public static final int T__422=422;
	public static final int T__423=423;
	public static final int T__424=424;
	public static final int T__425=425;
	public static final int T__426=426;
	public static final int T__427=427;
	public static final int T__428=428;
	public static final int T__429=429;
	public static final int T__430=430;
	public static final int T__431=431;
	public static final int T__432=432;
	public static final int T__433=433;
	public static final int T__434=434;
	public static final int T__435=435;
	public static final int T__436=436;
	public static final int T__437=437;
	public static final int T__438=438;
	public static final int T__439=439;
	public static final int T__440=440;
	public static final int T__441=441;
	public static final int T__442=442;
	public static final int T__443=443;
	public static final int T__444=444;
	public static final int T__445=445;
	public static final int T__446=446;
	public static final int T__447=447;
	public static final int T__448=448;
	public static final int T__449=449;
	public static final int T__450=450;
	public static final int T__451=451;
	public static final int T__452=452;
	public static final int T__453=453;
	public static final int T__454=454;
	public static final int T__455=455;
	public static final int T__456=456;
	public static final int T__457=457;
	public static final int T__458=458;
	public static final int T__459=459;
	public static final int T__460=460;
	public static final int T__461=461;
	public static final int T__462=462;
	public static final int T__463=463;
	public static final int T__464=464;
	public static final int T__465=465;
	public static final int T__466=466;
	public static final int T__467=467;
	public static final int T__468=468;
	public static final int T__469=469;
	public static final int T__470=470;
	public static final int T__471=471;
	public static final int T__472=472;
	public static final int T__473=473;
	public static final int T__474=474;
	public static final int T__475=475;
	public static final int T__476=476;
	public static final int T__477=477;
	public static final int T__478=478;
	public static final int T__479=479;
	public static final int T__480=480;
	public static final int T__481=481;
	public static final int T__482=482;
	public static final int T__483=483;
	public static final int T__484=484;
	public static final int T__485=485;
	public static final int T__486=486;
	public static final int T__487=487;
	public static final int T__488=488;
	public static final int T__489=489;
	public static final int T__490=490;
	public static final int T__491=491;
	public static final int T__492=492;
	public static final int T__493=493;
	public static final int T__494=494;
	public static final int T__495=495;
	public static final int ADD=4;
	public static final int ADD_OVF=5;
	public static final int ADD_OVF_UN=6;
	public static final int AND=7;
	public static final int ARGLIST=8;
	public static final int BEQ=9;
	public static final int BEQ_S=10;
	public static final int BGE=11;
	public static final int BGE_S=12;
	public static final int BGE_UN=13;
	public static final int BGE_UN_S=14;
	public static final int BGT=15;
	public static final int BGT_S=16;
	public static final int BGT_UN=17;
	public static final int BGT_UN_S=18;
	public static final int BLE=19;
	public static final int BLE_S=20;
	public static final int BLE_UN=21;
	public static final int BLE_UN_S=22;
	public static final int BLOB=23;
	public static final int BLOB_OBJECT=24;
	public static final int BLT=25;
	public static final int BLT_S=26;
	public static final int BLT_UN=27;
	public static final int BLT_UN_S=28;
	public static final int BNE_UN=29;
	public static final int BNE_UN_S=30;
	public static final int BOX=31;
	public static final int BR=32;
	public static final int BREAK=33;
	public static final int BRFALSE=34;
	public static final int BRFALSE_S=35;
	public static final int BRINST=36;
	public static final int BRINST_S=37;
	public static final int BRNULL=38;
	public static final int BRNULL_S=39;
	public static final int BRTRUE=40;
	public static final int BRTRUE_S=41;
	public static final int BRZERO=42;
	public static final int BRZERO_S=43;
	public static final int BR_S=44;
	public static final int BSTR=45;
	public static final int BYTEARRAY=46;
	public static final int BYVALSTR=47;
	public static final int CALL=48;
	public static final int CALLI=49;
	public static final int CALLMOSTDERIVED=50;
	public static final int CALLVIRT=51;
	public static final int CARRAY=52;
	public static final int CASTCLASS=53;
	public static final int CATCH=54;
	public static final int CDECL=55;
	public static final int CEQ=56;
	public static final int CF=57;
	public static final int CGT=58;
	public static final int CGT_UN=59;
	public static final int CHAR=60;
	public static final int CIL=61;
	public static final int CKFINITE=62;
	public static final int CLASS=63;
	public static final int CLSID=64;
	public static final int CLT=65;
	public static final int CLT_UN=66;
	public static final int CONST=67;
	public static final int CONV_I=68;
	public static final int CONV_I1=69;
	public static final int CONV_I2=70;
	public static final int CONV_I4=71;
	public static final int CONV_I8=72;
	public static final int CONV_OVF_I=73;
	public static final int CONV_OVF_I1=74;
	public static final int CONV_OVF_I1_UN=75;
	public static final int CONV_OVF_I2=76;
	public static final int CONV_OVF_I2_UN=77;
	public static final int CONV_OVF_I4=78;
	public static final int CONV_OVF_I4_UN=79;
	public static final int CONV_OVF_I8=80;
	public static final int CONV_OVF_I8_UN=81;
	public static final int CONV_OVF_I_UN=82;
	public static final int CONV_OVF_U=83;
	public static final int CONV_OVF_U1=84;
	public static final int CONV_OVF_U1_UN=85;
	public static final int CONV_OVF_U2=86;
	public static final int CONV_OVF_U2_UN=87;
	public static final int CONV_OVF_U4=88;
	public static final int CONV_OVF_U4_UN=89;
	public static final int CONV_OVF_U8=90;
	public static final int CONV_OVF_U8_UN=91;
	public static final int CONV_OVF_U_UN=92;
	public static final int CONV_R4=93;
	public static final int CONV_R8=94;
	public static final int CONV_R_UN=95;
	public static final int CONV_U=96;
	public static final int CONV_U1=97;
	public static final int CONV_U2=98;
	public static final int CONV_U4=99;
	public static final int CONV_U8=100;
	public static final int CPBLK=101;
	public static final int CPOBJ=102;
	public static final int DIGIT=103;
	public static final int DIV=104;
	public static final int DIV_UN=105;
	public static final int DOT=106;
	public static final int DOTTEDNAME=107;
	public static final int DUP=108;
	public static final int ENDFAULT=109;
	public static final int ENDFILTER=110;
	public static final int ENDFINALLY=111;
	public static final int ESC=112;
	public static final int EXPONENT=113;
	public static final int FLOAT64=114;
	public static final int HEXBYTE=115;
	public static final int HEX_DIGIT=116;
	public static final int ID=117;
	public static final int INITBLK=118;
	public static final int INITOBJ=119;
	public static final int INT32=120;
	public static final int ISINST=121;
	public static final int JMP=122;
	public static final int LDARG=123;
	public static final int LDARGA=124;
	public static final int LDARGA_S=125;
	public static final int LDARG_0=126;
	public static final int LDARG_1=127;
	public static final int LDARG_2=128;
	public static final int LDARG_3=129;
	public static final int LDARG_S=130;
	public static final int LDC_I4=131;
	public static final int LDC_I4_0=132;
	public static final int LDC_I4_1=133;
	public static final int LDC_I4_2=134;
	public static final int LDC_I4_3=135;
	public static final int LDC_I4_4=136;
	public static final int LDC_I4_5=137;
	public static final int LDC_I4_6=138;
	public static final int LDC_I4_7=139;
	public static final int LDC_I4_8=140;
	public static final int LDC_I4_M1=141;
	public static final int LDC_I4_S=142;
	public static final int LDC_I8=143;
	public static final int LDC_R4=144;
	public static final int LDC_R8=145;
	public static final int LDELEMA=146;
	public static final int LDELEM_I=147;
	public static final int LDELEM_I1=148;
	public static final int LDELEM_I2=149;
	public static final int LDELEM_I4=150;
	public static final int LDELEM_I8=151;
	public static final int LDELEM_R4=152;
	public static final int LDELEM_R8=153;
	public static final int LDELEM_REF=154;
	public static final int LDELEM_U1=155;
	public static final int LDELEM_U2=156;
	public static final int LDELEM_U4=157;
	public static final int LDELEM_U8=158;
	public static final int LDFLD=159;
	public static final int LDFLDA=160;
	public static final int LDFTN=161;
	public static final int LDIND_I=162;
	public static final int LDIND_I1=163;
	public static final int LDIND_I2=164;
	public static final int LDIND_I4=165;
	public static final int LDIND_I8=166;
	public static final int LDIND_R4=167;
	public static final int LDIND_R8=168;
	public static final int LDIND_REF=169;
	public static final int LDIND_U1=170;
	public static final int LDIND_U2=171;
	public static final int LDIND_U4=172;
	public static final int LDIND_U8=173;
	public static final int LDLEN=174;
	public static final int LDLOC=175;
	public static final int LDLOCA=176;
	public static final int LDLOCA_S=177;
	public static final int LDLOC_0=178;
	public static final int LDLOC_1=179;
	public static final int LDLOC_2=180;
	public static final int LDLOC_3=181;
	public static final int LDLOC_S=182;
	public static final int LDNULL=183;
	public static final int LDOBJ=184;
	public static final int LDSFLD=185;
	public static final int LDSFLDA=186;
	public static final int LDSTR=187;
	public static final int LDTOKEN=188;
	public static final int LDVIRTFTN=189;
	public static final int LEAVE=190;
	public static final int LEAVE_S=191;
	public static final int LETTER=192;
	public static final int LOCALLOC=193;
	public static final int MKREFANY=194;
	public static final int MUL=195;
	public static final int MUL_OVF=196;
	public static final int MUL_OVF_UN=197;
	public static final int NEG=198;
	public static final int NEWARR=199;
	public static final int NEWOBJ=200;
	public static final int NOP=201;
	public static final int NOT=202;
	public static final int OR=203;
	public static final int POP=204;
	public static final int QSTRING=205;
	public static final int REFANYTYPE=206;
	public static final int REFANYVAL=207;
	public static final int REM=208;
	public static final int REM_UN=209;
	public static final int REQUEST=210;
	public static final int RET=211;
	public static final int RETHROW=212;
	public static final int SHL=213;
	public static final int SHR=214;
	public static final int SHR_UN=215;
	public static final int SIZEOF=216;
	public static final int SQSTRING=217;
	public static final int STARG=218;
	public static final int STARG_S=219;
	public static final int STELEM_I=220;
	public static final int STELEM_I1=221;
	public static final int STELEM_I2=222;
	public static final int STELEM_I4=223;
	public static final int STELEM_I8=224;
	public static final int STELEM_R4=225;
	public static final int STELEM_R8=226;
	public static final int STELEM_REF=227;
	public static final int STFLD=228;
	public static final int STIND_I=229;
	public static final int STIND_I1=230;
	public static final int STIND_I2=231;
	public static final int STIND_I4=232;
	public static final int STIND_I8=233;
	public static final int STIND_R4=234;
	public static final int STIND_R8=235;
	public static final int STIND_REF=236;
	public static final int STLOC=237;
	public static final int STLOC_0=238;
	public static final int STLOC_1=239;
	public static final int STLOC_2=240;
	public static final int STLOC_3=241;
	public static final int STLOC_S=242;
	public static final int STOBJ=243;
	public static final int STSFLD=244;
	public static final int SUB=245;
	public static final int SUB_OVF=246;
	public static final int SUB_OVF_UN=247;
	public static final int SWITCH=248;
	public static final int TAIL_=249;
	public static final int THROW=250;
	public static final int UNALIGNED_=251;
	public static final int UNBOX=252;
	public static final int VOLATILE_=253;
	public static final int WS=254;
	public static final int XOR=255;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public CILParser(TokenStream input) {
		this(input, new RecognizerSharedState());
	}
	public CILParser(TokenStream input, RecognizerSharedState state) {
		super(input, state);
	}

	protected TreeAdaptor adaptor = new CommonTreeAdaptor();

	public void setTreeAdaptor(TreeAdaptor adaptor) {
		this.adaptor = adaptor;
	}
	public TreeAdaptor getTreeAdaptor() {
		return adaptor;
	}
	@Override public String[] getTokenNames() { return CILParser.tokenNames; }
	@Override public String getGrammarFileName() { return "CIL.g"; }


	public static class start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "start"
	// CIL.g:316:1: start : decls ;
	public final CILParser.start_return start() throws RecognitionException {
		CILParser.start_return retval = new CILParser.start_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope decls1 =null;


		try {
			// CIL.g:316:17: ( decls )
			// CIL.g:316:19: decls
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_decls_in_start5912);
			decls1=decls();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, decls1.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "start"


	public static class decls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "decls"
	// CIL.g:319:1: decls : () ( decl )* ;
	public final CILParser.decls_return decls() throws RecognitionException {
		CILParser.decls_return retval = new CILParser.decls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope decl2 =null;


		try {
			// CIL.g:319:25: ( () ( decl )* )
			// CIL.g:319:27: () ( decl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:319:27: ()
			// CIL.g:319:39: 
			{
			}

			// CIL.g:319:41: ( decl )*
			loop1:
			while (true) {
				int alt1=2;
				int LA1_0 = input.LA(1);
				if ( (LA1_0==266||(LA1_0 >= 269 && LA1_0 <= 270)||(LA1_0 >= 272 && LA1_0 <= 273)||(LA1_0 >= 278 && LA1_0 <= 279)||(LA1_0 >= 283 && LA1_0 <= 285)||(LA1_0 >= 289 && LA1_0 <= 293)||(LA1_0 >= 298 && LA1_0 <= 299)||(LA1_0 >= 306 && LA1_0 <= 307)||(LA1_0 >= 310 && LA1_0 <= 311)||LA1_0==313||LA1_0==315) ) {
					alt1=1;
				}

				switch (alt1) {
				case 1 :
					// CIL.g:319:42: decl
					{
					pushFollow(FOLLOW_decl_in_decls5966);
					decl2=decl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, decl2.getTree());

					}
					break;

				default :
					break loop1;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "decls"


	public static class decl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "decl"
	// CIL.g:322:1: decl : ( classHead '{' classDecls '}' | nameSpaceHead '{' decls '}' | methodHead methodDecls '}' | fieldDecl | dataDecl | vtableDecl | vtfixupDecl | extSourceSpec | fileDecl | assemblyHead '{' assemblyDecls '}' | assemblyRefHead '{' assemblyRefDecls '}' | exptypeHead '{' exptypeDecls '}' | manifestResHead '{' manifestResDecls '}' | moduleHead | secDecl | customAttrDecl | '.subsystem' int32 | '.corflags' int32 | '.file' 'alignment' int32 | '.imagebase' int64 | '.stackreserve' int64 | languageDecl | typedefDecl | '.typelist' '{' classNameSeq '}' | '.mscorlib' );
	public final CILParser.decl_return decl() throws RecognitionException {
		CILParser.decl_return retval = new CILParser.decl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal4=null;
		Token char_literal6=null;
		Token char_literal8=null;
		Token char_literal10=null;
		Token char_literal13=null;
		Token char_literal21=null;
		Token char_literal23=null;
		Token char_literal25=null;
		Token char_literal27=null;
		Token char_literal29=null;
		Token char_literal31=null;
		Token char_literal33=null;
		Token char_literal35=null;
		Token string_literal39=null;
		Token string_literal41=null;
		Token string_literal43=null;
		Token string_literal44=null;
		Token string_literal46=null;
		Token string_literal48=null;
		Token string_literal52=null;
		Token char_literal53=null;
		Token char_literal55=null;
		Token string_literal56=null;
		ParserRuleReturnScope classHead3 =null;
		ParserRuleReturnScope classDecls5 =null;
		ParserRuleReturnScope nameSpaceHead7 =null;
		ParserRuleReturnScope decls9 =null;
		ParserRuleReturnScope methodHead11 =null;
		ParserRuleReturnScope methodDecls12 =null;
		ParserRuleReturnScope fieldDecl14 =null;
		ParserRuleReturnScope dataDecl15 =null;
		ParserRuleReturnScope vtableDecl16 =null;
		ParserRuleReturnScope vtfixupDecl17 =null;
		ParserRuleReturnScope extSourceSpec18 =null;
		ParserRuleReturnScope fileDecl19 =null;
		ParserRuleReturnScope assemblyHead20 =null;
		ParserRuleReturnScope assemblyDecls22 =null;
		ParserRuleReturnScope assemblyRefHead24 =null;
		ParserRuleReturnScope assemblyRefDecls26 =null;
		ParserRuleReturnScope exptypeHead28 =null;
		ParserRuleReturnScope exptypeDecls30 =null;
		ParserRuleReturnScope manifestResHead32 =null;
		ParserRuleReturnScope manifestResDecls34 =null;
		ParserRuleReturnScope moduleHead36 =null;
		ParserRuleReturnScope secDecl37 =null;
		ParserRuleReturnScope customAttrDecl38 =null;
		ParserRuleReturnScope int3240 =null;
		ParserRuleReturnScope int3242 =null;
		ParserRuleReturnScope int3245 =null;
		ParserRuleReturnScope int6447 =null;
		ParserRuleReturnScope int6449 =null;
		ParserRuleReturnScope languageDecl50 =null;
		ParserRuleReturnScope typedefDecl51 =null;
		ParserRuleReturnScope classNameSeq54 =null;

		CommonTree char_literal4_tree=null;
		CommonTree char_literal6_tree=null;
		CommonTree char_literal8_tree=null;
		CommonTree char_literal10_tree=null;
		CommonTree char_literal13_tree=null;
		CommonTree char_literal21_tree=null;
		CommonTree char_literal23_tree=null;
		CommonTree char_literal25_tree=null;
		CommonTree char_literal27_tree=null;
		CommonTree char_literal29_tree=null;
		CommonTree char_literal31_tree=null;
		CommonTree char_literal33_tree=null;
		CommonTree char_literal35_tree=null;
		CommonTree string_literal39_tree=null;
		CommonTree string_literal41_tree=null;
		CommonTree string_literal43_tree=null;
		CommonTree string_literal44_tree=null;
		CommonTree string_literal46_tree=null;
		CommonTree string_literal48_tree=null;
		CommonTree string_literal52_tree=null;
		CommonTree char_literal53_tree=null;
		CommonTree char_literal55_tree=null;
		CommonTree string_literal56_tree=null;

		try {
			// CIL.g:322:25: ( classHead '{' classDecls '}' | nameSpaceHead '{' decls '}' | methodHead methodDecls '}' | fieldDecl | dataDecl | vtableDecl | vtfixupDecl | extSourceSpec | fileDecl | assemblyHead '{' assemblyDecls '}' | assemblyRefHead '{' assemblyRefDecls '}' | exptypeHead '{' exptypeDecls '}' | manifestResHead '{' manifestResDecls '}' | moduleHead | secDecl | customAttrDecl | '.subsystem' int32 | '.corflags' int32 | '.file' 'alignment' int32 | '.imagebase' int64 | '.stackreserve' int64 | languageDecl | typedefDecl | '.typelist' '{' classNameSeq '}' | '.mscorlib' )
			int alt2=25;
			switch ( input.LA(1) ) {
			case 269:
				{
				int LA2_1 = input.LA(2);
				if ( (synpred2_CIL()) ) {
					alt2=1;
				}
				else if ( (synpred13_CIL()) ) {
					alt2=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 2, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 293:
				{
				alt2=2;
				}
				break;
			case 289:
				{
				alt2=3;
				}
				break;
			case 278:
				{
				alt2=4;
				}
				break;
			case 273:
				{
				alt2=5;
				}
				break;
			case 313:
				{
				alt2=6;
				}
				break;
			case 315:
				{
				alt2=7;
				}
				break;
			case 285:
				{
				alt2=8;
				}
				break;
			case 279:
				{
				int LA2_9 = input.LA(2);
				if ( (synpred10_CIL()) ) {
					alt2=9;
				}
				else if ( (synpred20_CIL()) ) {
					alt2=19;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 2, 9, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 266:
				{
				int LA2_10 = input.LA(2);
				if ( (synpred11_CIL()) ) {
					alt2=10;
				}
				else if ( (synpred12_CIL()) ) {
					alt2=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 2, 10, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 291:
				{
				alt2=13;
				}
				break;
			case 290:
				{
				alt2=14;
				}
				break;
			case 298:
			case 299:
				{
				alt2=15;
				}
				break;
			case 272:
				{
				alt2=16;
				}
				break;
			case 310:
				{
				int LA2_16 = input.LA(2);
				if ( (synpred17_CIL()) ) {
					alt2=16;
				}
				else if ( (synpred24_CIL()) ) {
					alt2=23;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 2, 16, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 307:
				{
				alt2=17;
				}
				break;
			case 270:
				{
				alt2=18;
				}
				break;
			case 283:
				{
				alt2=20;
				}
				break;
			case 306:
				{
				alt2=21;
				}
				break;
			case 284:
				{
				alt2=22;
				}
				break;
			case 311:
				{
				alt2=24;
				}
				break;
			case 292:
				{
				alt2=25;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 2, 0, input);
				throw nvae;
			}
			switch (alt2) {
				case 1 :
					// CIL.g:322:27: classHead '{' classDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_classHead_in_decl6025);
					classHead3=classHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, classHead3.getTree());

					char_literal4=(Token)match(input,494,FOLLOW_494_in_decl6027); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal4_tree = (CommonTree)adaptor.create(char_literal4);
					adaptor.addChild(root_0, char_literal4_tree);
					}

					pushFollow(FOLLOW_classDecls_in_decl6029);
					classDecls5=classDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, classDecls5.getTree());

					char_literal6=(Token)match(input,495,FOLLOW_495_in_decl6031); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal6_tree = (CommonTree)adaptor.create(char_literal6);
					adaptor.addChild(root_0, char_literal6_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:323:27: nameSpaceHead '{' decls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_nameSpaceHead_in_decl6060);
					nameSpaceHead7=nameSpaceHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, nameSpaceHead7.getTree());

					char_literal8=(Token)match(input,494,FOLLOW_494_in_decl6062); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal8_tree = (CommonTree)adaptor.create(char_literal8);
					adaptor.addChild(root_0, char_literal8_tree);
					}

					pushFollow(FOLLOW_decls_in_decl6064);
					decls9=decls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, decls9.getTree());

					char_literal10=(Token)match(input,495,FOLLOW_495_in_decl6066); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal10_tree = (CommonTree)adaptor.create(char_literal10);
					adaptor.addChild(root_0, char_literal10_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:324:27: methodHead methodDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_methodHead_in_decl6095);
					methodHead11=methodHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodHead11.getTree());

					pushFollow(FOLLOW_methodDecls_in_decl6098);
					methodDecls12=methodDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodDecls12.getTree());

					char_literal13=(Token)match(input,495,FOLLOW_495_in_decl6100); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal13_tree = (CommonTree)adaptor.create(char_literal13);
					adaptor.addChild(root_0, char_literal13_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:325:27: fieldDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_fieldDecl_in_decl6129);
					fieldDecl14=fieldDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fieldDecl14.getTree());

					}
					break;
				case 5 :
					// CIL.g:326:27: dataDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_dataDecl_in_decl6157);
					dataDecl15=dataDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dataDecl15.getTree());

					}
					break;
				case 6 :
					// CIL.g:327:27: vtableDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_vtableDecl_in_decl6185);
					vtableDecl16=vtableDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, vtableDecl16.getTree());

					}
					break;
				case 7 :
					// CIL.g:328:27: vtfixupDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_vtfixupDecl_in_decl6213);
					vtfixupDecl17=vtfixupDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, vtfixupDecl17.getTree());

					}
					break;
				case 8 :
					// CIL.g:329:27: extSourceSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_extSourceSpec_in_decl6241);
					extSourceSpec18=extSourceSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, extSourceSpec18.getTree());

					}
					break;
				case 9 :
					// CIL.g:330:27: fileDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_fileDecl_in_decl6269);
					fileDecl19=fileDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fileDecl19.getTree());

					}
					break;
				case 10 :
					// CIL.g:331:27: assemblyHead '{' assemblyDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_assemblyHead_in_decl6297);
					assemblyHead20=assemblyHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assemblyHead20.getTree());

					char_literal21=(Token)match(input,494,FOLLOW_494_in_decl6299); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal21_tree = (CommonTree)adaptor.create(char_literal21);
					adaptor.addChild(root_0, char_literal21_tree);
					}

					pushFollow(FOLLOW_assemblyDecls_in_decl6301);
					assemblyDecls22=assemblyDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assemblyDecls22.getTree());

					char_literal23=(Token)match(input,495,FOLLOW_495_in_decl6303); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal23_tree = (CommonTree)adaptor.create(char_literal23);
					adaptor.addChild(root_0, char_literal23_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:332:27: assemblyRefHead '{' assemblyRefDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_assemblyRefHead_in_decl6332);
					assemblyRefHead24=assemblyRefHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assemblyRefHead24.getTree());

					char_literal25=(Token)match(input,494,FOLLOW_494_in_decl6334); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal25_tree = (CommonTree)adaptor.create(char_literal25);
					adaptor.addChild(root_0, char_literal25_tree);
					}

					pushFollow(FOLLOW_assemblyRefDecls_in_decl6336);
					assemblyRefDecls26=assemblyRefDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assemblyRefDecls26.getTree());

					char_literal27=(Token)match(input,495,FOLLOW_495_in_decl6338); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal27_tree = (CommonTree)adaptor.create(char_literal27);
					adaptor.addChild(root_0, char_literal27_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:333:27: exptypeHead '{' exptypeDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_exptypeHead_in_decl6367);
					exptypeHead28=exptypeHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exptypeHead28.getTree());

					char_literal29=(Token)match(input,494,FOLLOW_494_in_decl6369); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal29_tree = (CommonTree)adaptor.create(char_literal29);
					adaptor.addChild(root_0, char_literal29_tree);
					}

					pushFollow(FOLLOW_exptypeDecls_in_decl6371);
					exptypeDecls30=exptypeDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exptypeDecls30.getTree());

					char_literal31=(Token)match(input,495,FOLLOW_495_in_decl6373); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal31_tree = (CommonTree)adaptor.create(char_literal31);
					adaptor.addChild(root_0, char_literal31_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:334:27: manifestResHead '{' manifestResDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_manifestResHead_in_decl6402);
					manifestResHead32=manifestResHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, manifestResHead32.getTree());

					char_literal33=(Token)match(input,494,FOLLOW_494_in_decl6404); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal33_tree = (CommonTree)adaptor.create(char_literal33);
					adaptor.addChild(root_0, char_literal33_tree);
					}

					pushFollow(FOLLOW_manifestResDecls_in_decl6406);
					manifestResDecls34=manifestResDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, manifestResDecls34.getTree());

					char_literal35=(Token)match(input,495,FOLLOW_495_in_decl6408); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal35_tree = (CommonTree)adaptor.create(char_literal35);
					adaptor.addChild(root_0, char_literal35_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:335:27: moduleHead
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_moduleHead_in_decl6437);
					moduleHead36=moduleHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, moduleHead36.getTree());

					}
					break;
				case 15 :
					// CIL.g:336:27: secDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_secDecl_in_decl6465);
					secDecl37=secDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secDecl37.getTree());

					}
					break;
				case 16 :
					// CIL.g:337:27: customAttrDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customAttrDecl_in_decl6493);
					customAttrDecl38=customAttrDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customAttrDecl38.getTree());

					}
					break;
				case 17 :
					// CIL.g:338:27: '.subsystem' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal39=(Token)match(input,307,FOLLOW_307_in_decl6521); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal39_tree = (CommonTree)adaptor.create(string_literal39);
					adaptor.addChild(root_0, string_literal39_tree);
					}

					pushFollow(FOLLOW_int32_in_decl6523);
					int3240=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int3240.getTree());

					}
					break;
				case 18 :
					// CIL.g:339:27: '.corflags' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal41=(Token)match(input,270,FOLLOW_270_in_decl6552); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal41_tree = (CommonTree)adaptor.create(string_literal41);
					adaptor.addChild(root_0, string_literal41_tree);
					}

					pushFollow(FOLLOW_int32_in_decl6554);
					int3242=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int3242.getTree());

					}
					break;
				case 19 :
					// CIL.g:340:27: '.file' 'alignment' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal43=(Token)match(input,279,FOLLOW_279_in_decl6583); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal43_tree = (CommonTree)adaptor.create(string_literal43);
					adaptor.addChild(root_0, string_literal43_tree);
					}

					string_literal44=(Token)match(input,327,FOLLOW_327_in_decl6585); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal44_tree = (CommonTree)adaptor.create(string_literal44);
					adaptor.addChild(root_0, string_literal44_tree);
					}

					pushFollow(FOLLOW_int32_in_decl6587);
					int3245=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int3245.getTree());

					}
					break;
				case 20 :
					// CIL.g:341:27: '.imagebase' int64
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal46=(Token)match(input,283,FOLLOW_283_in_decl6616); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal46_tree = (CommonTree)adaptor.create(string_literal46);
					adaptor.addChild(root_0, string_literal46_tree);
					}

					pushFollow(FOLLOW_int64_in_decl6618);
					int6447=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int6447.getTree());

					}
					break;
				case 21 :
					// CIL.g:342:27: '.stackreserve' int64
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal48=(Token)match(input,306,FOLLOW_306_in_decl6647); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal48_tree = (CommonTree)adaptor.create(string_literal48);
					adaptor.addChild(root_0, string_literal48_tree);
					}

					pushFollow(FOLLOW_int64_in_decl6649);
					int6449=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int6449.getTree());

					}
					break;
				case 22 :
					// CIL.g:343:27: languageDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_languageDecl_in_decl6678);
					languageDecl50=languageDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, languageDecl50.getTree());

					}
					break;
				case 23 :
					// CIL.g:344:27: typedefDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedefDecl_in_decl6706);
					typedefDecl51=typedefDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedefDecl51.getTree());

					}
					break;
				case 24 :
					// CIL.g:345:27: '.typelist' '{' classNameSeq '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal52=(Token)match(input,311,FOLLOW_311_in_decl6734); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal52_tree = (CommonTree)adaptor.create(string_literal52);
					adaptor.addChild(root_0, string_literal52_tree);
					}

					char_literal53=(Token)match(input,494,FOLLOW_494_in_decl6736); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal53_tree = (CommonTree)adaptor.create(char_literal53);
					adaptor.addChild(root_0, char_literal53_tree);
					}

					pushFollow(FOLLOW_classNameSeq_in_decl6738);
					classNameSeq54=classNameSeq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, classNameSeq54.getTree());

					char_literal55=(Token)match(input,495,FOLLOW_495_in_decl6740); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal55_tree = (CommonTree)adaptor.create(char_literal55);
					adaptor.addChild(root_0, char_literal55_tree);
					}

					}
					break;
				case 25 :
					// CIL.g:346:27: '.mscorlib'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal56=(Token)match(input,292,FOLLOW_292_in_decl6768); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal56_tree = (CommonTree)adaptor.create(string_literal56);
					adaptor.addChild(root_0, string_literal56_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "decl"


	public static class classNameSeq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "classNameSeq"
	// CIL.g:349:1: classNameSeq : (| className classNameSeq );
	public final CILParser.classNameSeq_return classNameSeq() throws RecognitionException {
		CILParser.classNameSeq_return retval = new CILParser.classNameSeq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope className57 =null;
		ParserRuleReturnScope classNameSeq58 =null;


		try {
			// CIL.g:349:25: (| className classNameSeq )
			int alt3=2;
			int LA3_0 = input.LA(1);
			if ( (LA3_0==495) ) {
				alt3=1;
			}
			else if ( (LA3_0==DOTTEDNAME||LA3_0==ID||LA3_0==SQSTRING||LA3_0==267||LA3_0==294||LA3_0==308||LA3_0==310||LA3_0==323||LA3_0==406) ) {
				alt3=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 3, 0, input);
				throw nvae;
			}

			switch (alt3) {
				case 1 :
					// CIL.g:350:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:350:27: className classNameSeq
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_className_in_classNameSeq6865);
					className57=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className57.getTree());

					pushFollow(FOLLOW_classNameSeq_in_classNameSeq6867);
					classNameSeq58=classNameSeq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, classNameSeq58.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "classNameSeq"


	public static class compQstring_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "compQstring"
	// CIL.g:353:1: compQstring : ( QSTRING ) ( '+' QSTRING )* ;
	public final CILParser.compQstring_return compQstring() throws RecognitionException {
		CILParser.compQstring_return retval = new CILParser.compQstring_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token QSTRING59=null;
		Token char_literal60=null;
		Token QSTRING61=null;

		CommonTree QSTRING59_tree=null;
		CommonTree char_literal60_tree=null;
		CommonTree QSTRING61_tree=null;

		try {
			// CIL.g:353:25: ( ( QSTRING ) ( '+' QSTRING )* )
			// CIL.g:353:27: ( QSTRING ) ( '+' QSTRING )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:353:27: ( QSTRING )
			// CIL.g:353:28: QSTRING
			{
			QSTRING59=(Token)match(input,QSTRING,FOLLOW_QSTRING_in_compQstring6937); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			QSTRING59_tree = (CommonTree)adaptor.create(QSTRING59);
			adaptor.addChild(root_0, QSTRING59_tree);
			}

			}

			// CIL.g:353:37: ( '+' QSTRING )*
			loop4:
			while (true) {
				int alt4=2;
				int LA4_0 = input.LA(1);
				if ( (LA4_0==261) ) {
					alt4=1;
				}

				switch (alt4) {
				case 1 :
					// CIL.g:353:38: '+' QSTRING
					{
					char_literal60=(Token)match(input,261,FOLLOW_261_in_compQstring6941); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal60_tree = (CommonTree)adaptor.create(char_literal60);
					adaptor.addChild(root_0, char_literal60_tree);
					}

					QSTRING61=(Token)match(input,QSTRING,FOLLOW_QSTRING_in_compQstring6943); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					QSTRING61_tree = (CommonTree)adaptor.create(QSTRING61);
					adaptor.addChild(root_0, QSTRING61_tree);
					}

					}
					break;

				default :
					break loop4;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "compQstring"


	public static class languageDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "languageDecl"
	// CIL.g:356:1: languageDecl : ( '.language' SQSTRING | '.language' SQSTRING ',' SQSTRING | '.language' SQSTRING ',' SQSTRING ',' SQSTRING );
	public final CILParser.languageDecl_return languageDecl() throws RecognitionException {
		CILParser.languageDecl_return retval = new CILParser.languageDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal62=null;
		Token SQSTRING63=null;
		Token string_literal64=null;
		Token SQSTRING65=null;
		Token char_literal66=null;
		Token SQSTRING67=null;
		Token string_literal68=null;
		Token SQSTRING69=null;
		Token char_literal70=null;
		Token SQSTRING71=null;
		Token char_literal72=null;
		Token SQSTRING73=null;

		CommonTree string_literal62_tree=null;
		CommonTree SQSTRING63_tree=null;
		CommonTree string_literal64_tree=null;
		CommonTree SQSTRING65_tree=null;
		CommonTree char_literal66_tree=null;
		CommonTree SQSTRING67_tree=null;
		CommonTree string_literal68_tree=null;
		CommonTree SQSTRING69_tree=null;
		CommonTree char_literal70_tree=null;
		CommonTree SQSTRING71_tree=null;
		CommonTree char_literal72_tree=null;
		CommonTree SQSTRING73_tree=null;

		try {
			// CIL.g:356:25: ( '.language' SQSTRING | '.language' SQSTRING ',' SQSTRING | '.language' SQSTRING ',' SQSTRING ',' SQSTRING )
			int alt5=3;
			int LA5_0 = input.LA(1);
			if ( (LA5_0==284) ) {
				int LA5_1 = input.LA(2);
				if ( (LA5_1==SQSTRING) ) {
					int LA5_2 = input.LA(3);
					if ( (LA5_2==262) ) {
						int LA5_3 = input.LA(4);
						if ( (LA5_3==SQSTRING) ) {
							int LA5_5 = input.LA(5);
							if ( (LA5_5==262) ) {
								alt5=3;
							}
							else if ( (LA5_5==EOF||(LA5_5 >= ADD && LA5_5 <= BLE_UN_S)||(LA5_5 >= BLT && LA5_5 <= BRFALSE_S)||(LA5_5 >= BRTRUE && LA5_5 <= BRTRUE_S)||LA5_5==BR_S||(LA5_5 >= CALL && LA5_5 <= CALLI)||LA5_5==CALLVIRT||LA5_5==CASTCLASS||LA5_5==CEQ||(LA5_5 >= CGT && LA5_5 <= CGT_UN)||LA5_5==CKFINITE||(LA5_5 >= CLT && LA5_5 <= CLT_UN)||(LA5_5 >= CONV_I && LA5_5 <= CPOBJ)||(LA5_5 >= DIV && LA5_5 <= DIV_UN)||(LA5_5 >= DUP && LA5_5 <= ENDFINALLY)||(LA5_5 >= ID && LA5_5 <= INITOBJ)||(LA5_5 >= ISINST && LA5_5 <= LDELEM_U4)||(LA5_5 >= LDFLD && LA5_5 <= LDIND_U4)||(LA5_5 >= LDLEN && LA5_5 <= LEAVE_S)||(LA5_5 >= LOCALLOC && LA5_5 <= POP)||(LA5_5 >= REFANYTYPE && LA5_5 <= REM_UN)||(LA5_5 >= RET && LA5_5 <= VOLATILE_)||LA5_5==XOR||(LA5_5 >= 265 && LA5_5 <= 266)||(LA5_5 >= 269 && LA5_5 <= 270)||(LA5_5 >= 272 && LA5_5 <= 281)||(LA5_5 >= 283 && LA5_5 <= 285)||(LA5_5 >= 287 && LA5_5 <= 293)||(LA5_5 >= 295 && LA5_5 <= 300)||(LA5_5 >= 303 && LA5_5 <= 307)||(LA5_5 >= 309 && LA5_5 <= 311)||(LA5_5 >= 313 && LA5_5 <= 316)||LA5_5==430||(LA5_5 >= 494 && LA5_5 <= 495)) ) {
								alt5=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 5, 5, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 5, 3, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA5_2==EOF||(LA5_2 >= ADD && LA5_2 <= BLE_UN_S)||(LA5_2 >= BLT && LA5_2 <= BRFALSE_S)||(LA5_2 >= BRTRUE && LA5_2 <= BRTRUE_S)||LA5_2==BR_S||(LA5_2 >= CALL && LA5_2 <= CALLI)||LA5_2==CALLVIRT||LA5_2==CASTCLASS||LA5_2==CEQ||(LA5_2 >= CGT && LA5_2 <= CGT_UN)||LA5_2==CKFINITE||(LA5_2 >= CLT && LA5_2 <= CLT_UN)||(LA5_2 >= CONV_I && LA5_2 <= CPOBJ)||(LA5_2 >= DIV && LA5_2 <= DIV_UN)||(LA5_2 >= DUP && LA5_2 <= ENDFINALLY)||(LA5_2 >= ID && LA5_2 <= INITOBJ)||(LA5_2 >= ISINST && LA5_2 <= LDELEM_U4)||(LA5_2 >= LDFLD && LA5_2 <= LDIND_U4)||(LA5_2 >= LDLEN && LA5_2 <= LEAVE_S)||(LA5_2 >= LOCALLOC && LA5_2 <= POP)||(LA5_2 >= REFANYTYPE && LA5_2 <= REM_UN)||(LA5_2 >= RET && LA5_2 <= VOLATILE_)||LA5_2==XOR||(LA5_2 >= 265 && LA5_2 <= 266)||(LA5_2 >= 269 && LA5_2 <= 270)||(LA5_2 >= 272 && LA5_2 <= 281)||(LA5_2 >= 283 && LA5_2 <= 285)||(LA5_2 >= 287 && LA5_2 <= 293)||(LA5_2 >= 295 && LA5_2 <= 300)||(LA5_2 >= 303 && LA5_2 <= 307)||(LA5_2 >= 309 && LA5_2 <= 311)||(LA5_2 >= 313 && LA5_2 <= 316)||LA5_2==430||(LA5_2 >= 494 && LA5_2 <= 495)) ) {
						alt5=1;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 5, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 5, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 5, 0, input);
				throw nvae;
			}

			switch (alt5) {
				case 1 :
					// CIL.g:356:27: '.language' SQSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal62=(Token)match(input,284,FOLLOW_284_in_languageDecl6990); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal62_tree = (CommonTree)adaptor.create(string_literal62);
					adaptor.addChild(root_0, string_literal62_tree);
					}

					SQSTRING63=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_languageDecl6992); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING63_tree = (CommonTree)adaptor.create(SQSTRING63);
					adaptor.addChild(root_0, SQSTRING63_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:357:27: '.language' SQSTRING ',' SQSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal64=(Token)match(input,284,FOLLOW_284_in_languageDecl7021); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal64_tree = (CommonTree)adaptor.create(string_literal64);
					adaptor.addChild(root_0, string_literal64_tree);
					}

					SQSTRING65=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_languageDecl7023); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING65_tree = (CommonTree)adaptor.create(SQSTRING65);
					adaptor.addChild(root_0, SQSTRING65_tree);
					}

					char_literal66=(Token)match(input,262,FOLLOW_262_in_languageDecl7025); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal66_tree = (CommonTree)adaptor.create(char_literal66);
					adaptor.addChild(root_0, char_literal66_tree);
					}

					SQSTRING67=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_languageDecl7027); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING67_tree = (CommonTree)adaptor.create(SQSTRING67);
					adaptor.addChild(root_0, SQSTRING67_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:358:27: '.language' SQSTRING ',' SQSTRING ',' SQSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal68=(Token)match(input,284,FOLLOW_284_in_languageDecl7056); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal68_tree = (CommonTree)adaptor.create(string_literal68);
					adaptor.addChild(root_0, string_literal68_tree);
					}

					SQSTRING69=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_languageDecl7058); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING69_tree = (CommonTree)adaptor.create(SQSTRING69);
					adaptor.addChild(root_0, SQSTRING69_tree);
					}

					char_literal70=(Token)match(input,262,FOLLOW_262_in_languageDecl7060); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal70_tree = (CommonTree)adaptor.create(char_literal70);
					adaptor.addChild(root_0, char_literal70_tree);
					}

					SQSTRING71=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_languageDecl7062); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING71_tree = (CommonTree)adaptor.create(SQSTRING71);
					adaptor.addChild(root_0, SQSTRING71_tree);
					}

					char_literal72=(Token)match(input,262,FOLLOW_262_in_languageDecl7064); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal72_tree = (CommonTree)adaptor.create(char_literal72);
					adaptor.addChild(root_0, char_literal72_tree);
					}

					SQSTRING73=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_languageDecl7066); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING73_tree = (CommonTree)adaptor.create(SQSTRING73);
					adaptor.addChild(root_0, SQSTRING73_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "languageDecl"


	public static class id_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "id"
	// CIL.g:361:1: id : ( ID | SQSTRING );
	public final CILParser.id_return id() throws RecognitionException {
		CILParser.id_return retval = new CILParser.id_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set74=null;

		CommonTree set74_tree=null;

		try {
			// CIL.g:361:25: ( ID | SQSTRING )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set74=input.LT(1);
			if ( input.LA(1)==ID||input.LA(1)==SQSTRING ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set74));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "id"


	public static class dottedName_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "dottedName"
	// CIL.g:365:1: dottedName : ( id | DOTTEDNAME ) ( '.' dottedName )* ;
	public final CILParser.dottedName_return dottedName() throws RecognitionException {
		CILParser.dottedName_return retval = new CILParser.dottedName_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token DOTTEDNAME76=null;
		Token char_literal77=null;
		ParserRuleReturnScope id75 =null;
		ParserRuleReturnScope dottedName78 =null;

		CommonTree DOTTEDNAME76_tree=null;
		CommonTree char_literal77_tree=null;

		try {
			// CIL.g:365:25: ( ( id | DOTTEDNAME ) ( '.' dottedName )* )
			// CIL.g:365:27: ( id | DOTTEDNAME ) ( '.' dottedName )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:365:27: ( id | DOTTEDNAME )
			int alt6=2;
			int LA6_0 = input.LA(1);
			if ( (LA6_0==ID||LA6_0==SQSTRING) ) {
				alt6=1;
			}
			else if ( (LA6_0==DOTTEDNAME) ) {
				alt6=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 6, 0, input);
				throw nvae;
			}

			switch (alt6) {
				case 1 :
					// CIL.g:365:28: id
					{
					pushFollow(FOLLOW_id_in_dottedName7223);
					id75=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id75.getTree());

					}
					break;
				case 2 :
					// CIL.g:365:33: DOTTEDNAME
					{
					DOTTEDNAME76=(Token)match(input,DOTTEDNAME,FOLLOW_DOTTEDNAME_in_dottedName7227); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DOTTEDNAME76_tree = (CommonTree)adaptor.create(DOTTEDNAME76);
					adaptor.addChild(root_0, DOTTEDNAME76_tree);
					}

					}
					break;

			}

			// CIL.g:365:45: ( '.' dottedName )*
			loop7:
			while (true) {
				int alt7=2;
				int LA7_0 = input.LA(1);
				if ( (LA7_0==DOT) ) {
					int LA7_1 = input.LA(2);
					if ( (synpred32_CIL()) ) {
						alt7=1;
					}

				}

				switch (alt7) {
				case 1 :
					// CIL.g:365:46: '.' dottedName
					{
					char_literal77=(Token)match(input,DOT,FOLLOW_DOT_in_dottedName7231); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal77_tree = (CommonTree)adaptor.create(char_literal77);
					adaptor.addChild(root_0, char_literal77_tree);
					}

					pushFollow(FOLLOW_dottedName_in_dottedName7233);
					dottedName78=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName78.getTree());

					}
					break;

				default :
					break loop7;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dottedName"


	public static class int32_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "int32"
	// CIL.g:368:1: int32 : INT32 ;
	public final CILParser.int32_return int32() throws RecognitionException {
		CILParser.int32_return retval = new CILParser.int32_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token INT3279=null;

		CommonTree INT3279_tree=null;

		try {
			// CIL.g:368:25: ( INT32 )
			// CIL.g:368:27: INT32
			{
			root_0 = (CommonTree)adaptor.nil();


			INT3279=(Token)match(input,INT32,FOLLOW_INT32_in_int327287); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INT3279_tree = (CommonTree)adaptor.create(INT3279);
			adaptor.addChild(root_0, INT3279_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "int32"


	public static class int64_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "int64"
	// CIL.g:371:1: int64 : INT32 ;
	public final CILParser.int64_return int64() throws RecognitionException {
		CILParser.int64_return retval = new CILParser.int64_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token INT3280=null;

		CommonTree INT3280_tree=null;

		try {
			// CIL.g:371:25: ( INT32 )
			// CIL.g:372:31: INT32
			{
			root_0 = (CommonTree)adaptor.nil();


			INT3280=(Token)match(input,INT32,FOLLOW_INT32_in_int647366); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INT3280_tree = (CommonTree)adaptor.create(INT3280);
			adaptor.addChild(root_0, INT3280_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "int64"


	public static class float64_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "float64"
	// CIL.g:375:1: float64 : ( FLOAT64 | 'float32' '(' int32 ')' | 'float64' '(' int64 ')' );
	public final CILParser.float64_return float64() throws RecognitionException {
		CILParser.float64_return retval = new CILParser.float64_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token FLOAT6481=null;
		Token string_literal82=null;
		Token char_literal83=null;
		Token char_literal85=null;
		Token string_literal86=null;
		Token char_literal87=null;
		Token char_literal89=null;
		ParserRuleReturnScope int3284 =null;
		ParserRuleReturnScope int6488 =null;

		CommonTree FLOAT6481_tree=null;
		CommonTree string_literal82_tree=null;
		CommonTree char_literal83_tree=null;
		CommonTree char_literal85_tree=null;
		CommonTree string_literal86_tree=null;
		CommonTree char_literal87_tree=null;
		CommonTree char_literal89_tree=null;

		try {
			// CIL.g:375:25: ( FLOAT64 | 'float32' '(' int32 ')' | 'float64' '(' int64 ')' )
			int alt8=3;
			switch ( input.LA(1) ) {
			case FLOAT64:
				{
				alt8=1;
				}
				break;
			case 369:
				{
				alt8=2;
				}
				break;
			case 370:
				{
				alt8=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 8, 0, input);
				throw nvae;
			}
			switch (alt8) {
				case 1 :
					// CIL.g:375:27: FLOAT64
					{
					root_0 = (CommonTree)adaptor.nil();


					FLOAT6481=(Token)match(input,FLOAT64,FOLLOW_FLOAT64_in_float647416); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FLOAT6481_tree = (CommonTree)adaptor.create(FLOAT6481);
					adaptor.addChild(root_0, FLOAT6481_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:376:27: 'float32' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal82=(Token)match(input,369,FOLLOW_369_in_float647445); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal82_tree = (CommonTree)adaptor.create(string_literal82);
					adaptor.addChild(root_0, string_literal82_tree);
					}

					char_literal83=(Token)match(input,258,FOLLOW_258_in_float647447); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal83_tree = (CommonTree)adaptor.create(char_literal83);
					adaptor.addChild(root_0, char_literal83_tree);
					}

					pushFollow(FOLLOW_int32_in_float647449);
					int3284=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int3284.getTree());

					char_literal85=(Token)match(input,259,FOLLOW_259_in_float647451); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal85_tree = (CommonTree)adaptor.create(char_literal85);
					adaptor.addChild(root_0, char_literal85_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:377:27: 'float64' '(' int64 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal86=(Token)match(input,370,FOLLOW_370_in_float647480); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal86_tree = (CommonTree)adaptor.create(string_literal86);
					adaptor.addChild(root_0, string_literal86_tree);
					}

					char_literal87=(Token)match(input,258,FOLLOW_258_in_float647482); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal87_tree = (CommonTree)adaptor.create(char_literal87);
					adaptor.addChild(root_0, char_literal87_tree);
					}

					pushFollow(FOLLOW_int64_in_float647484);
					int6488=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int6488.getTree());

					char_literal89=(Token)match(input,259,FOLLOW_259_in_float647486); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal89_tree = (CommonTree)adaptor.create(char_literal89);
					adaptor.addChild(root_0, char_literal89_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "float64"


	public static class typedef_ts_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typedef_ts"
	// CIL.g:381:1: typedef_ts : '.typedef' type 'as' dottedName ;
	public final CILParser.typedef_ts_return typedef_ts() throws RecognitionException {
		CILParser.typedef_ts_return retval = new CILParser.typedef_ts_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal90=null;
		Token string_literal92=null;
		ParserRuleReturnScope type91 =null;
		ParserRuleReturnScope dottedName93 =null;

		CommonTree string_literal90_tree=null;
		CommonTree string_literal92_tree=null;

		try {
			// CIL.g:381:25: ( '.typedef' type 'as' dottedName )
			// CIL.g:381:27: '.typedef' type 'as' dottedName
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal90=(Token)match(input,310,FOLLOW_310_in_typedef_ts7535); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal90_tree = (CommonTree)adaptor.create(string_literal90);
			adaptor.addChild(root_0, string_literal90_tree);
			}

			pushFollow(FOLLOW_type_in_typedef_ts7537);
			type91=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type91.getTree());

			string_literal92=(Token)match(input,332,FOLLOW_332_in_typedef_ts7539); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal92_tree = (CommonTree)adaptor.create(string_literal92);
			adaptor.addChild(root_0, string_literal92_tree);
			}

			pushFollow(FOLLOW_dottedName_in_typedef_ts7541);
			dottedName93=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName93.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typedef_ts"


	public static class typedef_t_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typedef_t"
	// CIL.g:382:1: typedef_t : '.typedef' className 'as' dottedName ;
	public final CILParser.typedef_t_return typedef_t() throws RecognitionException {
		CILParser.typedef_t_return retval = new CILParser.typedef_t_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal94=null;
		Token string_literal96=null;
		ParserRuleReturnScope className95 =null;
		ParserRuleReturnScope dottedName97 =null;

		CommonTree string_literal94_tree=null;
		CommonTree string_literal96_tree=null;

		try {
			// CIL.g:382:25: ( '.typedef' className 'as' dottedName )
			// CIL.g:382:27: '.typedef' className 'as' dottedName
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal94=(Token)match(input,310,FOLLOW_310_in_typedef_t7563); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal94_tree = (CommonTree)adaptor.create(string_literal94);
			adaptor.addChild(root_0, string_literal94_tree);
			}

			pushFollow(FOLLOW_className_in_typedef_t7565);
			className95=className();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, className95.getTree());

			string_literal96=(Token)match(input,332,FOLLOW_332_in_typedef_t7567); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal96_tree = (CommonTree)adaptor.create(string_literal96);
			adaptor.addChild(root_0, string_literal96_tree);
			}

			pushFollow(FOLLOW_dottedName_in_typedef_t7569);
			dottedName97=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName97.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typedef_t"


	public static class typedef_m_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typedef_m"
	// CIL.g:383:1: typedef_m : '.typedef' memberRef 'as' dottedName ;
	public final CILParser.typedef_m_return typedef_m() throws RecognitionException {
		CILParser.typedef_m_return retval = new CILParser.typedef_m_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal98=null;
		Token string_literal100=null;
		ParserRuleReturnScope memberRef99 =null;
		ParserRuleReturnScope dottedName101 =null;

		CommonTree string_literal98_tree=null;
		CommonTree string_literal100_tree=null;

		try {
			// CIL.g:383:25: ( '.typedef' memberRef 'as' dottedName )
			// CIL.g:383:27: '.typedef' memberRef 'as' dottedName
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal98=(Token)match(input,310,FOLLOW_310_in_typedef_m7591); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal98_tree = (CommonTree)adaptor.create(string_literal98);
			adaptor.addChild(root_0, string_literal98_tree);
			}

			pushFollow(FOLLOW_memberRef_in_typedef_m7593);
			memberRef99=memberRef();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, memberRef99.getTree());

			string_literal100=(Token)match(input,332,FOLLOW_332_in_typedef_m7595); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal100_tree = (CommonTree)adaptor.create(string_literal100);
			adaptor.addChild(root_0, string_literal100_tree);
			}

			pushFollow(FOLLOW_dottedName_in_typedef_m7597);
			dottedName101=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName101.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typedef_m"


	public static class typedef_f_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typedef_f"
	// CIL.g:384:1: typedef_f : typedef_m ;
	public final CILParser.typedef_f_return typedef_f() throws RecognitionException {
		CILParser.typedef_f_return retval = new CILParser.typedef_f_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope typedef_m102 =null;


		try {
			// CIL.g:384:25: ( typedef_m )
			// CIL.g:384:27: typedef_m
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_typedef_m_in_typedef_f7619);
			typedef_m102=typedef_m();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_m102.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typedef_f"


	public static class typedef_mr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typedef_mr"
	// CIL.g:385:1: typedef_mr : typedef_m ;
	public final CILParser.typedef_mr_return typedef_mr() throws RecognitionException {
		CILParser.typedef_mr_return retval = new CILParser.typedef_mr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope typedef_m103 =null;


		try {
			// CIL.g:385:25: ( typedef_m )
			// CIL.g:385:27: typedef_m
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_typedef_m_in_typedef_mr7640);
			typedef_m103=typedef_m();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_m103.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typedef_mr"


	public static class typedef_ca_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typedef_ca"
	// CIL.g:386:1: typedef_ca : ( '.typedef' customDescr 'as' dottedName | '.typedef' customDescrWithOwner 'as' dottedName );
	public final CILParser.typedef_ca_return typedef_ca() throws RecognitionException {
		CILParser.typedef_ca_return retval = new CILParser.typedef_ca_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal104=null;
		Token string_literal106=null;
		Token string_literal108=null;
		Token string_literal110=null;
		ParserRuleReturnScope customDescr105 =null;
		ParserRuleReturnScope dottedName107 =null;
		ParserRuleReturnScope customDescrWithOwner109 =null;
		ParserRuleReturnScope dottedName111 =null;

		CommonTree string_literal104_tree=null;
		CommonTree string_literal106_tree=null;
		CommonTree string_literal108_tree=null;
		CommonTree string_literal110_tree=null;

		try {
			// CIL.g:386:25: ( '.typedef' customDescr 'as' dottedName | '.typedef' customDescrWithOwner 'as' dottedName )
			int alt9=2;
			int LA9_0 = input.LA(1);
			if ( (LA9_0==310) ) {
				int LA9_1 = input.LA(2);
				if ( (LA9_1==272) ) {
					int LA9_2 = input.LA(3);
					if ( (LA9_2==258) ) {
						alt9=2;
					}
					else if ( (LA9_2==CHAR||LA9_2==CLASS||LA9_2==256||LA9_2==264||LA9_2==310||(LA9_2 >= 340 && LA9_2 <= 341)||LA9_2==347||LA9_2==352||(LA9_2 >= 369 && LA9_2 <= 370)||LA9_2==386||(LA9_2 >= 388 && LA9_2 <= 391)||(LA9_2 >= 406 && LA9_2 <= 407)||LA9_2==410||LA9_2==423||LA9_2==462||LA9_2==473||(LA9_2 >= 475 && LA9_2 <= 478)||LA9_2==480||LA9_2==482||(LA9_2 >= 484 && LA9_2 <= 486)||LA9_2==490) ) {
						alt9=1;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 9, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 9, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 9, 0, input);
				throw nvae;
			}

			switch (alt9) {
				case 1 :
					// CIL.g:386:27: '.typedef' customDescr 'as' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal104=(Token)match(input,310,FOLLOW_310_in_typedef_ca7661); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal104_tree = (CommonTree)adaptor.create(string_literal104);
					adaptor.addChild(root_0, string_literal104_tree);
					}

					pushFollow(FOLLOW_customDescr_in_typedef_ca7663);
					customDescr105=customDescr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customDescr105.getTree());

					string_literal106=(Token)match(input,332,FOLLOW_332_in_typedef_ca7665); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal106_tree = (CommonTree)adaptor.create(string_literal106);
					adaptor.addChild(root_0, string_literal106_tree);
					}

					pushFollow(FOLLOW_dottedName_in_typedef_ca7667);
					dottedName107=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName107.getTree());

					}
					break;
				case 2 :
					// CIL.g:387:27: '.typedef' customDescrWithOwner 'as' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal108=(Token)match(input,310,FOLLOW_310_in_typedef_ca7696); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal108_tree = (CommonTree)adaptor.create(string_literal108);
					adaptor.addChild(root_0, string_literal108_tree);
					}

					pushFollow(FOLLOW_customDescrWithOwner_in_typedef_ca7698);
					customDescrWithOwner109=customDescrWithOwner();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customDescrWithOwner109.getTree());

					string_literal110=(Token)match(input,332,FOLLOW_332_in_typedef_ca7700); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal110_tree = (CommonTree)adaptor.create(string_literal110);
					adaptor.addChild(root_0, string_literal110_tree);
					}

					pushFollow(FOLLOW_dottedName_in_typedef_ca7702);
					dottedName111=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName111.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typedef_ca"


	public static class typedefDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typedefDecl"
	// CIL.g:389:1: typedefDecl : ( typedef_ts | typedef_t | typedef_m | typedef_ca );
	public final CILParser.typedefDecl_return typedefDecl() throws RecognitionException {
		CILParser.typedefDecl_return retval = new CILParser.typedefDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope typedef_ts112 =null;
		ParserRuleReturnScope typedef_t113 =null;
		ParserRuleReturnScope typedef_m114 =null;
		ParserRuleReturnScope typedef_ca115 =null;


		try {
			// CIL.g:389:25: ( typedef_ts | typedef_t | typedef_m | typedef_ca )
			int alt10=4;
			int LA10_0 = input.LA(1);
			if ( (LA10_0==310) ) {
				int LA10_1 = input.LA(2);
				if ( (synpred36_CIL()) ) {
					alt10=1;
				}
				else if ( (synpred37_CIL()) ) {
					alt10=2;
				}
				else if ( (synpred38_CIL()) ) {
					alt10=3;
				}
				else if ( (true) ) {
					alt10=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 10, 0, input);
				throw nvae;
			}

			switch (alt10) {
				case 1 :
					// CIL.g:389:27: typedef_ts
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_ts_in_typedefDecl7746);
					typedef_ts112=typedef_ts();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_ts112.getTree());

					}
					break;
				case 2 :
					// CIL.g:390:27: typedef_t
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_t_in_typedefDecl7775);
					typedef_t113=typedef_t();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_t113.getTree());

					}
					break;
				case 3 :
					// CIL.g:391:27: typedef_m
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_m_in_typedefDecl7804);
					typedef_m114=typedef_m();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_m114.getTree());

					}
					break;
				case 4 :
					// CIL.g:392:27: typedef_ca
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_ca_in_typedefDecl7833);
					typedef_ca115=typedef_ca();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_ca115.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typedefDecl"


	public static class customDescr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customDescr"
	// CIL.g:395:1: customDescr : ( '.custom' customType | '.custom' customType '=' compQstring | '.custom' customType '=' '{' customBlobDescr '}' | customHead bytes ')' );
	public final CILParser.customDescr_return customDescr() throws RecognitionException {
		CILParser.customDescr_return retval = new CILParser.customDescr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal116=null;
		Token string_literal118=null;
		Token char_literal120=null;
		Token string_literal122=null;
		Token char_literal124=null;
		Token char_literal125=null;
		Token char_literal127=null;
		Token char_literal130=null;
		ParserRuleReturnScope customType117 =null;
		ParserRuleReturnScope customType119 =null;
		ParserRuleReturnScope compQstring121 =null;
		ParserRuleReturnScope customType123 =null;
		ParserRuleReturnScope customBlobDescr126 =null;
		ParserRuleReturnScope customHead128 =null;
		ParserRuleReturnScope bytes129 =null;

		CommonTree string_literal116_tree=null;
		CommonTree string_literal118_tree=null;
		CommonTree char_literal120_tree=null;
		CommonTree string_literal122_tree=null;
		CommonTree char_literal124_tree=null;
		CommonTree char_literal125_tree=null;
		CommonTree char_literal127_tree=null;
		CommonTree char_literal130_tree=null;

		try {
			// CIL.g:395:25: ( '.custom' customType | '.custom' customType '=' compQstring | '.custom' customType '=' '{' customBlobDescr '}' | customHead bytes ')' )
			int alt11=4;
			int LA11_0 = input.LA(1);
			if ( (LA11_0==272) ) {
				int LA11_1 = input.LA(2);
				if ( (synpred39_CIL()) ) {
					alt11=1;
				}
				else if ( (synpred40_CIL()) ) {
					alt11=2;
				}
				else if ( (synpred41_CIL()) ) {
					alt11=3;
				}
				else if ( (true) ) {
					alt11=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 11, 0, input);
				throw nvae;
			}

			switch (alt11) {
				case 1 :
					// CIL.g:395:27: '.custom' customType
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal116=(Token)match(input,272,FOLLOW_272_in_customDescr7880); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal116_tree = (CommonTree)adaptor.create(string_literal116);
					adaptor.addChild(root_0, string_literal116_tree);
					}

					pushFollow(FOLLOW_customType_in_customDescr7882);
					customType117=customType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customType117.getTree());

					}
					break;
				case 2 :
					// CIL.g:396:27: '.custom' customType '=' compQstring
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal118=(Token)match(input,272,FOLLOW_272_in_customDescr7911); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal118_tree = (CommonTree)adaptor.create(string_literal118);
					adaptor.addChild(root_0, string_literal118_tree);
					}

					pushFollow(FOLLOW_customType_in_customDescr7913);
					customType119=customType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customType119.getTree());

					char_literal120=(Token)match(input,321,FOLLOW_321_in_customDescr7915); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal120_tree = (CommonTree)adaptor.create(char_literal120);
					adaptor.addChild(root_0, char_literal120_tree);
					}

					pushFollow(FOLLOW_compQstring_in_customDescr7917);
					compQstring121=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring121.getTree());

					}
					break;
				case 3 :
					// CIL.g:397:27: '.custom' customType '=' '{' customBlobDescr '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal122=(Token)match(input,272,FOLLOW_272_in_customDescr7946); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal122_tree = (CommonTree)adaptor.create(string_literal122);
					adaptor.addChild(root_0, string_literal122_tree);
					}

					pushFollow(FOLLOW_customType_in_customDescr7948);
					customType123=customType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customType123.getTree());

					char_literal124=(Token)match(input,321,FOLLOW_321_in_customDescr7950); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal124_tree = (CommonTree)adaptor.create(char_literal124);
					adaptor.addChild(root_0, char_literal124_tree);
					}

					char_literal125=(Token)match(input,494,FOLLOW_494_in_customDescr7952); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal125_tree = (CommonTree)adaptor.create(char_literal125);
					adaptor.addChild(root_0, char_literal125_tree);
					}

					pushFollow(FOLLOW_customBlobDescr_in_customDescr7954);
					customBlobDescr126=customBlobDescr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customBlobDescr126.getTree());

					char_literal127=(Token)match(input,495,FOLLOW_495_in_customDescr7956); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal127_tree = (CommonTree)adaptor.create(char_literal127);
					adaptor.addChild(root_0, char_literal127_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:398:27: customHead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customHead_in_customDescr7985);
					customHead128=customHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customHead128.getTree());

					pushFollow(FOLLOW_bytes_in_customDescr7987);
					bytes129=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes129.getTree());

					char_literal130=(Token)match(input,259,FOLLOW_259_in_customDescr7989); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal130_tree = (CommonTree)adaptor.create(char_literal130);
					adaptor.addChild(root_0, char_literal130_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customDescr"


	public static class customDescrWithOwner_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customDescrWithOwner"
	// CIL.g:401:1: customDescrWithOwner : ( '.custom' '(' ownerType ')' customType | '.custom' '(' ownerType ')' customType '=' compQstring | '.custom' '(' ownerType ')' customType '=' '{' customBlobDescr '}' | customHeadWithOwner bytes ')' );
	public final CILParser.customDescrWithOwner_return customDescrWithOwner() throws RecognitionException {
		CILParser.customDescrWithOwner_return retval = new CILParser.customDescrWithOwner_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal131=null;
		Token char_literal132=null;
		Token char_literal134=null;
		Token string_literal136=null;
		Token char_literal137=null;
		Token char_literal139=null;
		Token char_literal141=null;
		Token string_literal143=null;
		Token char_literal144=null;
		Token char_literal146=null;
		Token char_literal148=null;
		Token char_literal149=null;
		Token char_literal151=null;
		Token char_literal154=null;
		ParserRuleReturnScope ownerType133 =null;
		ParserRuleReturnScope customType135 =null;
		ParserRuleReturnScope ownerType138 =null;
		ParserRuleReturnScope customType140 =null;
		ParserRuleReturnScope compQstring142 =null;
		ParserRuleReturnScope ownerType145 =null;
		ParserRuleReturnScope customType147 =null;
		ParserRuleReturnScope customBlobDescr150 =null;
		ParserRuleReturnScope customHeadWithOwner152 =null;
		ParserRuleReturnScope bytes153 =null;

		CommonTree string_literal131_tree=null;
		CommonTree char_literal132_tree=null;
		CommonTree char_literal134_tree=null;
		CommonTree string_literal136_tree=null;
		CommonTree char_literal137_tree=null;
		CommonTree char_literal139_tree=null;
		CommonTree char_literal141_tree=null;
		CommonTree string_literal143_tree=null;
		CommonTree char_literal144_tree=null;
		CommonTree char_literal146_tree=null;
		CommonTree char_literal148_tree=null;
		CommonTree char_literal149_tree=null;
		CommonTree char_literal151_tree=null;
		CommonTree char_literal154_tree=null;

		try {
			// CIL.g:401:25: ( '.custom' '(' ownerType ')' customType | '.custom' '(' ownerType ')' customType '=' compQstring | '.custom' '(' ownerType ')' customType '=' '{' customBlobDescr '}' | customHeadWithOwner bytes ')' )
			int alt12=4;
			int LA12_0 = input.LA(1);
			if ( (LA12_0==272) ) {
				int LA12_1 = input.LA(2);
				if ( (synpred42_CIL()) ) {
					alt12=1;
				}
				else if ( (synpred43_CIL()) ) {
					alt12=2;
				}
				else if ( (synpred44_CIL()) ) {
					alt12=3;
				}
				else if ( (true) ) {
					alt12=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 12, 0, input);
				throw nvae;
			}

			switch (alt12) {
				case 1 :
					// CIL.g:401:27: '.custom' '(' ownerType ')' customType
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal131=(Token)match(input,272,FOLLOW_272_in_customDescrWithOwner8026); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal131_tree = (CommonTree)adaptor.create(string_literal131);
					adaptor.addChild(root_0, string_literal131_tree);
					}

					char_literal132=(Token)match(input,258,FOLLOW_258_in_customDescrWithOwner8028); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal132_tree = (CommonTree)adaptor.create(char_literal132);
					adaptor.addChild(root_0, char_literal132_tree);
					}

					pushFollow(FOLLOW_ownerType_in_customDescrWithOwner8030);
					ownerType133=ownerType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ownerType133.getTree());

					char_literal134=(Token)match(input,259,FOLLOW_259_in_customDescrWithOwner8032); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal134_tree = (CommonTree)adaptor.create(char_literal134);
					adaptor.addChild(root_0, char_literal134_tree);
					}

					pushFollow(FOLLOW_customType_in_customDescrWithOwner8034);
					customType135=customType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customType135.getTree());

					}
					break;
				case 2 :
					// CIL.g:402:27: '.custom' '(' ownerType ')' customType '=' compQstring
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal136=(Token)match(input,272,FOLLOW_272_in_customDescrWithOwner8063); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal136_tree = (CommonTree)adaptor.create(string_literal136);
					adaptor.addChild(root_0, string_literal136_tree);
					}

					char_literal137=(Token)match(input,258,FOLLOW_258_in_customDescrWithOwner8065); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal137_tree = (CommonTree)adaptor.create(char_literal137);
					adaptor.addChild(root_0, char_literal137_tree);
					}

					pushFollow(FOLLOW_ownerType_in_customDescrWithOwner8067);
					ownerType138=ownerType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ownerType138.getTree());

					char_literal139=(Token)match(input,259,FOLLOW_259_in_customDescrWithOwner8069); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal139_tree = (CommonTree)adaptor.create(char_literal139);
					adaptor.addChild(root_0, char_literal139_tree);
					}

					pushFollow(FOLLOW_customType_in_customDescrWithOwner8071);
					customType140=customType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customType140.getTree());

					char_literal141=(Token)match(input,321,FOLLOW_321_in_customDescrWithOwner8073); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal141_tree = (CommonTree)adaptor.create(char_literal141);
					adaptor.addChild(root_0, char_literal141_tree);
					}

					pushFollow(FOLLOW_compQstring_in_customDescrWithOwner8075);
					compQstring142=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring142.getTree());

					}
					break;
				case 3 :
					// CIL.g:403:27: '.custom' '(' ownerType ')' customType '=' '{' customBlobDescr '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal143=(Token)match(input,272,FOLLOW_272_in_customDescrWithOwner8104); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal143_tree = (CommonTree)adaptor.create(string_literal143);
					adaptor.addChild(root_0, string_literal143_tree);
					}

					char_literal144=(Token)match(input,258,FOLLOW_258_in_customDescrWithOwner8106); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal144_tree = (CommonTree)adaptor.create(char_literal144);
					adaptor.addChild(root_0, char_literal144_tree);
					}

					pushFollow(FOLLOW_ownerType_in_customDescrWithOwner8108);
					ownerType145=ownerType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ownerType145.getTree());

					char_literal146=(Token)match(input,259,FOLLOW_259_in_customDescrWithOwner8110); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal146_tree = (CommonTree)adaptor.create(char_literal146);
					adaptor.addChild(root_0, char_literal146_tree);
					}

					pushFollow(FOLLOW_customType_in_customDescrWithOwner8112);
					customType147=customType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customType147.getTree());

					char_literal148=(Token)match(input,321,FOLLOW_321_in_customDescrWithOwner8114); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal148_tree = (CommonTree)adaptor.create(char_literal148);
					adaptor.addChild(root_0, char_literal148_tree);
					}

					char_literal149=(Token)match(input,494,FOLLOW_494_in_customDescrWithOwner8116); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal149_tree = (CommonTree)adaptor.create(char_literal149);
					adaptor.addChild(root_0, char_literal149_tree);
					}

					pushFollow(FOLLOW_customBlobDescr_in_customDescrWithOwner8118);
					customBlobDescr150=customBlobDescr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customBlobDescr150.getTree());

					char_literal151=(Token)match(input,495,FOLLOW_495_in_customDescrWithOwner8120); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal151_tree = (CommonTree)adaptor.create(char_literal151);
					adaptor.addChild(root_0, char_literal151_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:404:27: customHeadWithOwner bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customHeadWithOwner_in_customDescrWithOwner8149);
					customHeadWithOwner152=customHeadWithOwner();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customHeadWithOwner152.getTree());

					pushFollow(FOLLOW_bytes_in_customDescrWithOwner8151);
					bytes153=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes153.getTree());

					char_literal154=(Token)match(input,259,FOLLOW_259_in_customDescrWithOwner8153); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal154_tree = (CommonTree)adaptor.create(char_literal154);
					adaptor.addChild(root_0, char_literal154_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customDescrWithOwner"


	public static class customHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customHead"
	// CIL.g:407:1: customHead : '.custom' customType '=' '(' ;
	public final CILParser.customHead_return customHead() throws RecognitionException {
		CILParser.customHead_return retval = new CILParser.customHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal155=null;
		Token char_literal157=null;
		Token char_literal158=null;
		ParserRuleReturnScope customType156 =null;

		CommonTree string_literal155_tree=null;
		CommonTree char_literal157_tree=null;
		CommonTree char_literal158_tree=null;

		try {
			// CIL.g:407:25: ( '.custom' customType '=' '(' )
			// CIL.g:407:27: '.custom' customType '=' '('
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal155=(Token)match(input,272,FOLLOW_272_in_customHead8224); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal155_tree = (CommonTree)adaptor.create(string_literal155);
			adaptor.addChild(root_0, string_literal155_tree);
			}

			pushFollow(FOLLOW_customType_in_customHead8226);
			customType156=customType();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, customType156.getTree());

			char_literal157=(Token)match(input,321,FOLLOW_321_in_customHead8228); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal157_tree = (CommonTree)adaptor.create(char_literal157);
			adaptor.addChild(root_0, char_literal157_tree);
			}

			char_literal158=(Token)match(input,258,FOLLOW_258_in_customHead8230); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal158_tree = (CommonTree)adaptor.create(char_literal158);
			adaptor.addChild(root_0, char_literal158_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customHead"


	public static class customHeadWithOwner_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customHeadWithOwner"
	// CIL.g:410:1: customHeadWithOwner : '.custom' '(' ownerType ')' customType '=' '(' ;
	public final CILParser.customHeadWithOwner_return customHeadWithOwner() throws RecognitionException {
		CILParser.customHeadWithOwner_return retval = new CILParser.customHeadWithOwner_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal159=null;
		Token char_literal160=null;
		Token char_literal162=null;
		Token char_literal164=null;
		Token char_literal165=null;
		ParserRuleReturnScope ownerType161 =null;
		ParserRuleReturnScope customType163 =null;

		CommonTree string_literal159_tree=null;
		CommonTree char_literal160_tree=null;
		CommonTree char_literal162_tree=null;
		CommonTree char_literal164_tree=null;
		CommonTree char_literal165_tree=null;

		try {
			// CIL.g:410:25: ( '.custom' '(' ownerType ')' customType '=' '(' )
			// CIL.g:410:27: '.custom' '(' ownerType ')' customType '=' '('
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal159=(Token)match(input,272,FOLLOW_272_in_customHeadWithOwner8268); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal159_tree = (CommonTree)adaptor.create(string_literal159);
			adaptor.addChild(root_0, string_literal159_tree);
			}

			char_literal160=(Token)match(input,258,FOLLOW_258_in_customHeadWithOwner8270); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal160_tree = (CommonTree)adaptor.create(char_literal160);
			adaptor.addChild(root_0, char_literal160_tree);
			}

			pushFollow(FOLLOW_ownerType_in_customHeadWithOwner8272);
			ownerType161=ownerType();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ownerType161.getTree());

			char_literal162=(Token)match(input,259,FOLLOW_259_in_customHeadWithOwner8274); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal162_tree = (CommonTree)adaptor.create(char_literal162);
			adaptor.addChild(root_0, char_literal162_tree);
			}

			pushFollow(FOLLOW_customType_in_customHeadWithOwner8276);
			customType163=customType();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, customType163.getTree());

			char_literal164=(Token)match(input,321,FOLLOW_321_in_customHeadWithOwner8278); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal164_tree = (CommonTree)adaptor.create(char_literal164);
			adaptor.addChild(root_0, char_literal164_tree);
			}

			char_literal165=(Token)match(input,258,FOLLOW_258_in_customHeadWithOwner8280); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal165_tree = (CommonTree)adaptor.create(char_literal165);
			adaptor.addChild(root_0, char_literal165_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customHeadWithOwner"


	public static class customType_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customType"
	// CIL.g:413:1: customType : methodRef ;
	public final CILParser.customType_return customType() throws RecognitionException {
		CILParser.customType_return retval = new CILParser.customType_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope methodRef166 =null;


		try {
			// CIL.g:413:25: ( methodRef )
			// CIL.g:413:27: methodRef
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_methodRef_in_customType8327);
			methodRef166=methodRef();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef166.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customType"


	public static class ownerType_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ownerType"
	// CIL.g:416:1: ownerType : ( typeSpec | memberRef );
	public final CILParser.ownerType_return ownerType() throws RecognitionException {
		CILParser.ownerType_return retval = new CILParser.ownerType_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope typeSpec167 =null;
		ParserRuleReturnScope memberRef168 =null;


		try {
			// CIL.g:416:25: ( typeSpec | memberRef )
			int alt13=2;
			switch ( input.LA(1) ) {
			case CHAR:
			case CLASS:
			case DOTTEDNAME:
			case ID:
			case SQSTRING:
			case 256:
			case 264:
			case 267:
			case 294:
			case 308:
			case 310:
			case 323:
			case 340:
			case 369:
			case 370:
			case 388:
			case 389:
			case 390:
			case 391:
			case 410:
			case 423:
			case 462:
			case 473:
			case 475:
			case 476:
			case 477:
			case 478:
			case 482:
			case 484:
			case 485:
			case 490:
				{
				alt13=1;
				}
				break;
			case 406:
				{
				int LA13_4 = input.LA(2);
				if ( (synpred45_CIL()) ) {
					alt13=1;
				}
				else if ( (true) ) {
					alt13=2;
				}

				}
				break;
			case 407:
				{
				int LA13_13 = input.LA(2);
				if ( (synpred45_CIL()) ) {
					alt13=1;
				}
				else if ( (true) ) {
					alt13=2;
				}

				}
				break;
			case 361:
				{
				alt13=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 13, 0, input);
				throw nvae;
			}
			switch (alt13) {
				case 1 :
					// CIL.g:416:27: typeSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typeSpec_in_ownerType8375);
					typeSpec167=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec167.getTree());

					}
					break;
				case 2 :
					// CIL.g:417:27: memberRef
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_memberRef_in_ownerType8404);
					memberRef168=memberRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, memberRef168.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "ownerType"


	public static class customBlobDescr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customBlobDescr"
	// CIL.g:421:1: customBlobDescr : customBlobArgs customBlobNVPairs ;
	public final CILParser.customBlobDescr_return customBlobDescr() throws RecognitionException {
		CILParser.customBlobDescr_return retval = new CILParser.customBlobDescr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope customBlobArgs169 =null;
		ParserRuleReturnScope customBlobNVPairs170 =null;


		try {
			// CIL.g:421:25: ( customBlobArgs customBlobNVPairs )
			// CIL.g:421:27: customBlobArgs customBlobNVPairs
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_customBlobArgs_in_customBlobDescr8472);
			customBlobArgs169=customBlobArgs();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, customBlobArgs169.getTree());

			pushFollow(FOLLOW_customBlobNVPairs_in_customBlobDescr8474);
			customBlobNVPairs170=customBlobNVPairs();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, customBlobNVPairs170.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customBlobDescr"


	public static class customBlobArgs_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customBlobArgs"
	// CIL.g:424:1: customBlobArgs : () ( serInit )* ;
	public final CILParser.customBlobArgs_return customBlobArgs() throws RecognitionException {
		CILParser.customBlobArgs_return retval = new CILParser.customBlobArgs_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope serInit171 =null;


		try {
			// CIL.g:424:25: ( () ( serInit )* )
			// CIL.g:424:27: () ( serInit )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:424:27: ()
			// CIL.g:424:39: 
			{
			}

			// CIL.g:424:41: ( serInit )*
			loop14:
			while (true) {
				int alt14=2;
				int LA14_0 = input.LA(1);
				if ( (LA14_0==BYTEARRAY||LA14_0==CHAR||LA14_0==340||(LA14_0 >= 369 && LA14_0 <= 370)||(LA14_0 >= 388 && LA14_0 <= 391)||LA14_0==423||LA14_0==462||LA14_0==472||(LA14_0 >= 475 && LA14_0 <= 478)||LA14_0==482) ) {
					alt14=1;
				}

				switch (alt14) {
				case 1 :
					// CIL.g:424:42: serInit
					{
					pushFollow(FOLLOW_serInit_in_customBlobArgs8546);
					serInit171=serInit();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, serInit171.getTree());

					}
					break;

				default :
					break loop14;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customBlobArgs"


	public static class customBlobNVPairs_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customBlobNVPairs"
	// CIL.g:427:1: customBlobNVPairs : () ( fieldOrProp serializType dottedName '=' serInit )* ;
	public final CILParser.customBlobNVPairs_return customBlobNVPairs() throws RecognitionException {
		CILParser.customBlobNVPairs_return retval = new CILParser.customBlobNVPairs_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal175=null;
		ParserRuleReturnScope fieldOrProp172 =null;
		ParserRuleReturnScope serializType173 =null;
		ParserRuleReturnScope dottedName174 =null;
		ParserRuleReturnScope serInit176 =null;

		CommonTree char_literal175_tree=null;

		try {
			// CIL.g:427:25: ( () ( fieldOrProp serializType dottedName '=' serInit )* )
			// CIL.g:427:27: () ( fieldOrProp serializType dottedName '=' serInit )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:427:27: ()
			// CIL.g:427:39: 
			{
			}

			// CIL.g:427:41: ( fieldOrProp serializType dottedName '=' serInit )*
			loop15:
			while (true) {
				int alt15=2;
				int LA15_0 = input.LA(1);
				if ( (LA15_0==361||LA15_0==439) ) {
					alt15=1;
				}

				switch (alt15) {
				case 1 :
					// CIL.g:427:42: fieldOrProp serializType dottedName '=' serInit
					{
					pushFollow(FOLLOW_fieldOrProp_in_customBlobNVPairs8617);
					fieldOrProp172=fieldOrProp();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fieldOrProp172.getTree());

					pushFollow(FOLLOW_serializType_in_customBlobNVPairs8619);
					serializType173=serializType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, serializType173.getTree());

					pushFollow(FOLLOW_dottedName_in_customBlobNVPairs8621);
					dottedName174=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName174.getTree());

					char_literal175=(Token)match(input,321,FOLLOW_321_in_customBlobNVPairs8623); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal175_tree = (CommonTree)adaptor.create(char_literal175);
					adaptor.addChild(root_0, char_literal175_tree);
					}

					pushFollow(FOLLOW_serInit_in_customBlobNVPairs8625);
					serInit176=serInit();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, serInit176.getTree());

					}
					break;

				default :
					break loop15;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customBlobNVPairs"


	public static class fieldOrProp_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fieldOrProp"
	// CIL.g:430:1: fieldOrProp : ( 'field' | 'property' );
	public final CILParser.fieldOrProp_return fieldOrProp() throws RecognitionException {
		CILParser.fieldOrProp_return retval = new CILParser.fieldOrProp_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set177=null;

		CommonTree set177_tree=null;

		try {
			// CIL.g:430:25: ( 'field' | 'property' )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set177=input.LT(1);
			if ( input.LA(1)==361||input.LA(1)==439 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set177));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fieldOrProp"


	public static class customAttrDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "customAttrDecl"
	// CIL.g:434:1: customAttrDecl : ( customDescr | customDescrWithOwner | typedef_ca );
	public final CILParser.customAttrDecl_return customAttrDecl() throws RecognitionException {
		CILParser.customAttrDecl_return retval = new CILParser.customAttrDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope customDescr178 =null;
		ParserRuleReturnScope customDescrWithOwner179 =null;
		ParserRuleReturnScope typedef_ca180 =null;


		try {
			// CIL.g:434:25: ( customDescr | customDescrWithOwner | typedef_ca )
			int alt16=3;
			int LA16_0 = input.LA(1);
			if ( (LA16_0==272) ) {
				int LA16_1 = input.LA(2);
				if ( (LA16_1==258) ) {
					alt16=2;
				}
				else if ( (LA16_1==CHAR||LA16_1==CLASS||LA16_1==256||LA16_1==264||LA16_1==310||(LA16_1 >= 340 && LA16_1 <= 341)||LA16_1==347||LA16_1==352||(LA16_1 >= 369 && LA16_1 <= 370)||LA16_1==386||(LA16_1 >= 388 && LA16_1 <= 391)||(LA16_1 >= 406 && LA16_1 <= 407)||LA16_1==410||LA16_1==423||LA16_1==462||LA16_1==473||(LA16_1 >= 475 && LA16_1 <= 478)||LA16_1==480||LA16_1==482||(LA16_1 >= 484 && LA16_1 <= 486)||LA16_1==490) ) {
					alt16=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 16, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA16_0==310) ) {
				alt16=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 16, 0, input);
				throw nvae;
			}

			switch (alt16) {
				case 1 :
					// CIL.g:434:27: customDescr
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customDescr_in_customAttrDecl8745);
					customDescr178=customDescr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customDescr178.getTree());

					}
					break;
				case 2 :
					// CIL.g:435:27: customDescrWithOwner
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customDescrWithOwner_in_customAttrDecl8774);
					customDescrWithOwner179=customDescrWithOwner();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customDescrWithOwner179.getTree());

					}
					break;
				case 3 :
					// CIL.g:436:27: typedef_ca
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_ca_in_customAttrDecl8803);
					typedef_ca180=typedef_ca();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_ca180.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "customAttrDecl"


	public static class serializType_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "serializType"
	// CIL.g:439:1: serializType : ( simpleType | 'type' | 'object' | 'enum' 'class' SQSTRING | 'enum' className ) ( '[' ']' )* ;
	public final CILParser.serializType_return serializType() throws RecognitionException {
		CILParser.serializType_return retval = new CILParser.serializType_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal182=null;
		Token string_literal183=null;
		Token string_literal184=null;
		Token string_literal185=null;
		Token SQSTRING186=null;
		Token string_literal187=null;
		Token char_literal189=null;
		Token char_literal190=null;
		ParserRuleReturnScope simpleType181 =null;
		ParserRuleReturnScope className188 =null;

		CommonTree string_literal182_tree=null;
		CommonTree string_literal183_tree=null;
		CommonTree string_literal184_tree=null;
		CommonTree string_literal185_tree=null;
		CommonTree SQSTRING186_tree=null;
		CommonTree string_literal187_tree=null;
		CommonTree char_literal189_tree=null;
		CommonTree char_literal190_tree=null;

		try {
			// CIL.g:439:25: ( ( simpleType | 'type' | 'object' | 'enum' 'class' SQSTRING | 'enum' className ) ( '[' ']' )* )
			// CIL.g:439:27: ( simpleType | 'type' | 'object' | 'enum' 'class' SQSTRING | 'enum' className ) ( '[' ']' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:439:27: ( simpleType | 'type' | 'object' | 'enum' 'class' SQSTRING | 'enum' className )
			int alt17=5;
			switch ( input.LA(1) ) {
			case CHAR:
			case 310:
			case 340:
			case 369:
			case 370:
			case 388:
			case 389:
			case 390:
			case 391:
			case 462:
			case 475:
			case 476:
			case 477:
			case 478:
			case 482:
				{
				alt17=1;
				}
				break;
			case 472:
				{
				alt17=2;
				}
				break;
			case 423:
				{
				alt17=3;
				}
				break;
			case 350:
				{
				int LA17_4 = input.LA(2);
				if ( (LA17_4==CLASS) ) {
					alt17=4;
				}
				else if ( (LA17_4==DOTTEDNAME||LA17_4==ID||LA17_4==SQSTRING||LA17_4==267||LA17_4==294||LA17_4==308||LA17_4==310||LA17_4==323||LA17_4==406) ) {
					alt17=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 17, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 17, 0, input);
				throw nvae;
			}
			switch (alt17) {
				case 1 :
					// CIL.g:439:28: simpleType
					{
					pushFollow(FOLLOW_simpleType_in_serializType8873);
					simpleType181=simpleType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, simpleType181.getTree());

					}
					break;
				case 2 :
					// CIL.g:439:41: 'type'
					{
					string_literal182=(Token)match(input,472,FOLLOW_472_in_serializType8877); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal182_tree = (CommonTree)adaptor.create(string_literal182);
					adaptor.addChild(root_0, string_literal182_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:439:50: 'object'
					{
					string_literal183=(Token)match(input,423,FOLLOW_423_in_serializType8881); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal183_tree = (CommonTree)adaptor.create(string_literal183);
					adaptor.addChild(root_0, string_literal183_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:439:61: 'enum' 'class' SQSTRING
					{
					string_literal184=(Token)match(input,350,FOLLOW_350_in_serializType8885); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal184_tree = (CommonTree)adaptor.create(string_literal184);
					adaptor.addChild(root_0, string_literal184_tree);
					}

					string_literal185=(Token)match(input,CLASS,FOLLOW_CLASS_in_serializType8887); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal185_tree = (CommonTree)adaptor.create(string_literal185);
					adaptor.addChild(root_0, string_literal185_tree);
					}

					SQSTRING186=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_serializType8889); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING186_tree = (CommonTree)adaptor.create(SQSTRING186);
					adaptor.addChild(root_0, SQSTRING186_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:439:87: 'enum' className
					{
					string_literal187=(Token)match(input,350,FOLLOW_350_in_serializType8893); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal187_tree = (CommonTree)adaptor.create(string_literal187);
					adaptor.addChild(root_0, string_literal187_tree);
					}

					pushFollow(FOLLOW_className_in_serializType8895);
					className188=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className188.getTree());

					}
					break;

			}

			// CIL.g:439:105: ( '[' ']' )*
			loop18:
			while (true) {
				int alt18=2;
				int LA18_0 = input.LA(1);
				if ( (LA18_0==323) ) {
					alt18=1;
				}

				switch (alt18) {
				case 1 :
					// CIL.g:439:106: '[' ']'
					{
					char_literal189=(Token)match(input,323,FOLLOW_323_in_serializType8899); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal189_tree = (CommonTree)adaptor.create(char_literal189);
					adaptor.addChild(root_0, char_literal189_tree);
					}

					char_literal190=(Token)match(input,324,FOLLOW_324_in_serializType8901); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal190_tree = (CommonTree)adaptor.create(char_literal190);
					adaptor.addChild(root_0, char_literal190_tree);
					}

					}
					break;

				default :
					break loop18;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "serializType"


	public static class moduleHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "moduleHead"
	// CIL.g:444:1: moduleHead : ( '.module' | '.module' dottedName | '.module' 'extern' dottedName );
	public final CILParser.moduleHead_return moduleHead() throws RecognitionException {
		CILParser.moduleHead_return retval = new CILParser.moduleHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal191=null;
		Token string_literal192=null;
		Token string_literal194=null;
		Token string_literal195=null;
		ParserRuleReturnScope dottedName193 =null;
		ParserRuleReturnScope dottedName196 =null;

		CommonTree string_literal191_tree=null;
		CommonTree string_literal192_tree=null;
		CommonTree string_literal194_tree=null;
		CommonTree string_literal195_tree=null;

		try {
			// CIL.g:444:25: ( '.module' | '.module' dottedName | '.module' 'extern' dottedName )
			int alt19=3;
			int LA19_0 = input.LA(1);
			if ( (LA19_0==290) ) {
				switch ( input.LA(2) ) {
				case 354:
					{
					alt19=3;
					}
					break;
				case EOF:
				case 266:
				case 269:
				case 270:
				case 272:
				case 273:
				case 278:
				case 279:
				case 283:
				case 284:
				case 285:
				case 289:
				case 290:
				case 291:
				case 292:
				case 293:
				case 298:
				case 299:
				case 306:
				case 307:
				case 310:
				case 311:
				case 313:
				case 315:
				case 495:
					{
					alt19=1;
					}
					break;
				case DOTTEDNAME:
				case ID:
				case SQSTRING:
					{
					alt19=2;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 19, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 19, 0, input);
				throw nvae;
			}

			switch (alt19) {
				case 1 :
					// CIL.g:444:27: '.module'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal191=(Token)match(input,290,FOLLOW_290_in_moduleHead8986); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal191_tree = (CommonTree)adaptor.create(string_literal191);
					adaptor.addChild(root_0, string_literal191_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:445:27: '.module' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal192=(Token)match(input,290,FOLLOW_290_in_moduleHead9015); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal192_tree = (CommonTree)adaptor.create(string_literal192);
					adaptor.addChild(root_0, string_literal192_tree);
					}

					pushFollow(FOLLOW_dottedName_in_moduleHead9017);
					dottedName193=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName193.getTree());

					}
					break;
				case 3 :
					// CIL.g:446:27: '.module' 'extern' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal194=(Token)match(input,290,FOLLOW_290_in_moduleHead9046); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal194_tree = (CommonTree)adaptor.create(string_literal194);
					adaptor.addChild(root_0, string_literal194_tree);
					}

					string_literal195=(Token)match(input,354,FOLLOW_354_in_moduleHead9048); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal195_tree = (CommonTree)adaptor.create(string_literal195);
					adaptor.addChild(root_0, string_literal195_tree);
					}

					pushFollow(FOLLOW_dottedName_in_moduleHead9050);
					dottedName196=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName196.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "moduleHead"


	public static class vtfixupDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "vtfixupDecl"
	// CIL.g:450:1: vtfixupDecl : '.vtfixup' '[' int32 ']' vtfixupAttr 'at' id ;
	public final CILParser.vtfixupDecl_return vtfixupDecl() throws RecognitionException {
		CILParser.vtfixupDecl_return retval = new CILParser.vtfixupDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal197=null;
		Token char_literal198=null;
		Token char_literal200=null;
		Token string_literal202=null;
		ParserRuleReturnScope int32199 =null;
		ParserRuleReturnScope vtfixupAttr201 =null;
		ParserRuleReturnScope id203 =null;

		CommonTree string_literal197_tree=null;
		CommonTree char_literal198_tree=null;
		CommonTree char_literal200_tree=null;
		CommonTree string_literal202_tree=null;

		try {
			// CIL.g:450:25: ( '.vtfixup' '[' int32 ']' vtfixupAttr 'at' id )
			// CIL.g:450:27: '.vtfixup' '[' int32 ']' vtfixupAttr 'at' id
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal197=(Token)match(input,315,FOLLOW_315_in_vtfixupDecl9122); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal197_tree = (CommonTree)adaptor.create(string_literal197);
			adaptor.addChild(root_0, string_literal197_tree);
			}

			char_literal198=(Token)match(input,323,FOLLOW_323_in_vtfixupDecl9124); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal198_tree = (CommonTree)adaptor.create(char_literal198);
			adaptor.addChild(root_0, char_literal198_tree);
			}

			pushFollow(FOLLOW_int32_in_vtfixupDecl9126);
			int32199=int32();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, int32199.getTree());

			char_literal200=(Token)match(input,324,FOLLOW_324_in_vtfixupDecl9128); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal200_tree = (CommonTree)adaptor.create(char_literal200);
			adaptor.addChild(root_0, char_literal200_tree);
			}

			pushFollow(FOLLOW_vtfixupAttr_in_vtfixupDecl9130);
			vtfixupAttr201=vtfixupAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, vtfixupAttr201.getTree());

			string_literal202=(Token)match(input,335,FOLLOW_335_in_vtfixupDecl9132); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal202_tree = (CommonTree)adaptor.create(string_literal202);
			adaptor.addChild(root_0, string_literal202_tree);
			}

			pushFollow(FOLLOW_id_in_vtfixupDecl9134);
			id203=id();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, id203.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "vtfixupDecl"


	public static class vtfixupAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "vtfixupAttr"
	// CIL.g:453:1: vtfixupAttr : () ( 'int32' | 'int64' | 'fromunmanaged' | 'callmostderived' | 'retainappdomain' )* ;
	public final CILParser.vtfixupAttr_return vtfixupAttr() throws RecognitionException {
		CILParser.vtfixupAttr_return retval = new CILParser.vtfixupAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set204=null;

		CommonTree set204_tree=null;

		try {
			// CIL.g:453:25: ( () ( 'int32' | 'int64' | 'fromunmanaged' | 'callmostderived' | 'retainappdomain' )* )
			// CIL.g:453:27: () ( 'int32' | 'int64' | 'fromunmanaged' | 'callmostderived' | 'retainappdomain' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:453:27: ()
			// CIL.g:453:39: 
			{
			}

			// CIL.g:453:41: ( 'int32' | 'int64' | 'fromunmanaged' | 'callmostderived' | 'retainappdomain' )*
			loop20:
			while (true) {
				int alt20=2;
				int LA20_0 = input.LA(1);
				if ( (LA20_0==CALLMOSTDERIVED||LA20_0==373||(LA20_0 >= 389 && LA20_0 <= 390)||LA20_0==446) ) {
					alt20=1;
				}

				switch (alt20) {
				case 1 :
					// CIL.g:
					{
					set204=input.LT(1);
					if ( input.LA(1)==CALLMOSTDERIVED||input.LA(1)==373||(input.LA(1) >= 389 && input.LA(1) <= 390)||input.LA(1)==446 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set204));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

				default :
					break loop20;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "vtfixupAttr"


	public static class vtableDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "vtableDecl"
	// CIL.g:456:1: vtableDecl : vtableHead bytes ')' ;
	public final CILParser.vtableDecl_return vtableDecl() throws RecognitionException {
		CILParser.vtableDecl_return retval = new CILParser.vtableDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal207=null;
		ParserRuleReturnScope vtableHead205 =null;
		ParserRuleReturnScope bytes206 =null;

		CommonTree char_literal207_tree=null;

		try {
			// CIL.g:456:25: ( vtableHead bytes ')' )
			// CIL.g:456:27: vtableHead bytes ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_vtableHead_in_vtableDecl9250);
			vtableHead205=vtableHead();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, vtableHead205.getTree());

			pushFollow(FOLLOW_bytes_in_vtableDecl9252);
			bytes206=bytes();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes206.getTree());

			char_literal207=(Token)match(input,259,FOLLOW_259_in_vtableDecl9254); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal207_tree = (CommonTree)adaptor.create(char_literal207);
			adaptor.addChild(root_0, char_literal207_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "vtableDecl"


	public static class vtableHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "vtableHead"
	// CIL.g:459:1: vtableHead : '.vtable' '=' '(' ;
	public final CILParser.vtableHead_return vtableHead() throws RecognitionException {
		CILParser.vtableHead_return retval = new CILParser.vtableHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal208=null;
		Token char_literal209=null;
		Token char_literal210=null;

		CommonTree string_literal208_tree=null;
		CommonTree char_literal209_tree=null;
		CommonTree char_literal210_tree=null;

		try {
			// CIL.g:459:25: ( '.vtable' '=' '(' )
			// CIL.g:459:27: '.vtable' '=' '('
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal208=(Token)match(input,313,FOLLOW_313_in_vtableHead9305); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal208_tree = (CommonTree)adaptor.create(string_literal208);
			adaptor.addChild(root_0, string_literal208_tree);
			}

			char_literal209=(Token)match(input,321,FOLLOW_321_in_vtableHead9307); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal209_tree = (CommonTree)adaptor.create(char_literal209);
			adaptor.addChild(root_0, char_literal209_tree);
			}

			char_literal210=(Token)match(input,258,FOLLOW_258_in_vtableHead9309); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal210_tree = (CommonTree)adaptor.create(char_literal210);
			adaptor.addChild(root_0, char_literal210_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "vtableHead"


	public static class nameSpaceHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "nameSpaceHead"
	// CIL.g:463:1: nameSpaceHead : '.namespace' dottedName ;
	public final CILParser.nameSpaceHead_return nameSpaceHead() throws RecognitionException {
		CILParser.nameSpaceHead_return retval = new CILParser.nameSpaceHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal211=null;
		ParserRuleReturnScope dottedName212 =null;

		CommonTree string_literal211_tree=null;

		try {
			// CIL.g:463:25: ( '.namespace' dottedName )
			// CIL.g:463:27: '.namespace' dottedName
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal211=(Token)match(input,293,FOLLOW_293_in_nameSpaceHead9389); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal211_tree = (CommonTree)adaptor.create(string_literal211);
			adaptor.addChild(root_0, string_literal211_tree);
			}

			pushFollow(FOLLOW_dottedName_in_nameSpaceHead9391);
			dottedName212=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName212.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "nameSpaceHead"


	public static class classHeadBegin_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "classHeadBegin"
	// CIL.g:465:1: classHeadBegin : '.class' classAttr dottedName typarsClause ;
	public final CILParser.classHeadBegin_return classHeadBegin() throws RecognitionException {
		CILParser.classHeadBegin_return retval = new CILParser.classHeadBegin_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal213=null;
		ParserRuleReturnScope classAttr214 =null;
		ParserRuleReturnScope dottedName215 =null;
		ParserRuleReturnScope typarsClause216 =null;

		CommonTree string_literal213_tree=null;

		try {
			// CIL.g:465:25: ( '.class' classAttr dottedName typarsClause )
			// CIL.g:465:27: '.class' classAttr dottedName typarsClause
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal213=(Token)match(input,269,FOLLOW_269_in_classHeadBegin9433); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal213_tree = (CommonTree)adaptor.create(string_literal213);
			adaptor.addChild(root_0, string_literal213_tree);
			}

			pushFollow(FOLLOW_classAttr_in_classHeadBegin9435);
			classAttr214=classAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, classAttr214.getTree());

			pushFollow(FOLLOW_dottedName_in_classHeadBegin9437);
			dottedName215=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName215.getTree());

			pushFollow(FOLLOW_typarsClause_in_classHeadBegin9439);
			typarsClause216=typarsClause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, typarsClause216.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "classHeadBegin"


	public static class classHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "classHead"
	// CIL.g:467:1: classHead : classHeadBegin extendsClause implClause ;
	public final CILParser.classHead_return classHead() throws RecognitionException {
		CILParser.classHead_return retval = new CILParser.classHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope classHeadBegin217 =null;
		ParserRuleReturnScope extendsClause218 =null;
		ParserRuleReturnScope implClause219 =null;


		try {
			// CIL.g:467:25: ( classHeadBegin extendsClause implClause )
			// CIL.g:467:27: classHeadBegin extendsClause implClause
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_classHeadBegin_in_classHead9486);
			classHeadBegin217=classHeadBegin();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, classHeadBegin217.getTree());

			pushFollow(FOLLOW_extendsClause_in_classHead9488);
			extendsClause218=extendsClause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, extendsClause218.getTree());

			pushFollow(FOLLOW_implClause_in_classHead9490);
			implClause219=implClause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, implClause219.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "classHead"


	public static class classAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "classAttr"
	// CIL.g:470:1: classAttr : () ( 'public' | 'private' | 'value' | 'enum' | 'interface' | 'sealed' | 'abstract' | 'auto' | 'sequential' | 'explicit' | 'ansi' | 'unicode' | 'autochar' | 'import' | 'serializable' | 'nested' 'public' | 'nested' 'private' | 'nested' 'family' | 'nested' 'assembly' | 'nested' 'famandassem' | 'nested' 'famorassem' | 'beforefieldinit' | 'specialname' | 'rtspecialname' | 'flags' '(' int32 ')' )* ;
	public final CILParser.classAttr_return classAttr() throws RecognitionException {
		CILParser.classAttr_return retval = new CILParser.classAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal220=null;
		Token string_literal221=null;
		Token string_literal222=null;
		Token string_literal223=null;
		Token string_literal224=null;
		Token string_literal225=null;
		Token string_literal226=null;
		Token string_literal227=null;
		Token string_literal228=null;
		Token string_literal229=null;
		Token string_literal230=null;
		Token string_literal231=null;
		Token string_literal232=null;
		Token string_literal233=null;
		Token string_literal234=null;
		Token string_literal235=null;
		Token string_literal236=null;
		Token string_literal237=null;
		Token string_literal238=null;
		Token string_literal239=null;
		Token string_literal240=null;
		Token string_literal241=null;
		Token string_literal242=null;
		Token string_literal243=null;
		Token string_literal244=null;
		Token string_literal245=null;
		Token string_literal246=null;
		Token string_literal247=null;
		Token string_literal248=null;
		Token string_literal249=null;
		Token string_literal250=null;
		Token char_literal251=null;
		Token char_literal253=null;
		ParserRuleReturnScope int32252 =null;

		CommonTree string_literal220_tree=null;
		CommonTree string_literal221_tree=null;
		CommonTree string_literal222_tree=null;
		CommonTree string_literal223_tree=null;
		CommonTree string_literal224_tree=null;
		CommonTree string_literal225_tree=null;
		CommonTree string_literal226_tree=null;
		CommonTree string_literal227_tree=null;
		CommonTree string_literal228_tree=null;
		CommonTree string_literal229_tree=null;
		CommonTree string_literal230_tree=null;
		CommonTree string_literal231_tree=null;
		CommonTree string_literal232_tree=null;
		CommonTree string_literal233_tree=null;
		CommonTree string_literal234_tree=null;
		CommonTree string_literal235_tree=null;
		CommonTree string_literal236_tree=null;
		CommonTree string_literal237_tree=null;
		CommonTree string_literal238_tree=null;
		CommonTree string_literal239_tree=null;
		CommonTree string_literal240_tree=null;
		CommonTree string_literal241_tree=null;
		CommonTree string_literal242_tree=null;
		CommonTree string_literal243_tree=null;
		CommonTree string_literal244_tree=null;
		CommonTree string_literal245_tree=null;
		CommonTree string_literal246_tree=null;
		CommonTree string_literal247_tree=null;
		CommonTree string_literal248_tree=null;
		CommonTree string_literal249_tree=null;
		CommonTree string_literal250_tree=null;
		CommonTree char_literal251_tree=null;
		CommonTree char_literal253_tree=null;

		try {
			// CIL.g:470:25: ( () ( 'public' | 'private' | 'value' | 'enum' | 'interface' | 'sealed' | 'abstract' | 'auto' | 'sequential' | 'explicit' | 'ansi' | 'unicode' | 'autochar' | 'import' | 'serializable' | 'nested' 'public' | 'nested' 'private' | 'nested' 'family' | 'nested' 'assembly' | 'nested' 'famandassem' | 'nested' 'famorassem' | 'beforefieldinit' | 'specialname' | 'rtspecialname' | 'flags' '(' int32 ')' )* )
			// CIL.g:470:27: () ( 'public' | 'private' | 'value' | 'enum' | 'interface' | 'sealed' | 'abstract' | 'auto' | 'sequential' | 'explicit' | 'ansi' | 'unicode' | 'autochar' | 'import' | 'serializable' | 'nested' 'public' | 'nested' 'private' | 'nested' 'family' | 'nested' 'assembly' | 'nested' 'famandassem' | 'nested' 'famorassem' | 'beforefieldinit' | 'specialname' | 'rtspecialname' | 'flags' '(' int32 ')' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:470:27: ()
			// CIL.g:470:39: 
			{
			}

			// CIL.g:470:41: ( 'public' | 'private' | 'value' | 'enum' | 'interface' | 'sealed' | 'abstract' | 'auto' | 'sequential' | 'explicit' | 'ansi' | 'unicode' | 'autochar' | 'import' | 'serializable' | 'nested' 'public' | 'nested' 'private' | 'nested' 'family' | 'nested' 'assembly' | 'nested' 'famandassem' | 'nested' 'famorassem' | 'beforefieldinit' | 'specialname' | 'rtspecialname' | 'flags' '(' int32 ')' )*
			loop21:
			while (true) {
				int alt21=26;
				switch ( input.LA(1) ) {
				case 440:
					{
					alt21=1;
					}
					break;
				case 437:
					{
					alt21=2;
					}
					break;
				case 484:
					{
					alt21=3;
					}
					break;
				case 350:
					{
					alt21=4;
					}
					break;
				case 392:
					{
					alt21=5;
					}
					break;
				case 451:
					{
					alt21=6;
					}
					break;
				case 325:
					{
					alt21=7;
					}
					break;
				case 336:
					{
					alt21=8;
					}
					break;
				case 452:
					{
					alt21=9;
					}
					break;
				case 352:
					{
					alt21=10;
					}
					break;
				case 329:
					{
					alt21=11;
					}
					break;
				case 479:
					{
					alt21=12;
					}
					break;
				case 337:
					{
					alt21=13;
					}
					break;
				case 381:
					{
					alt21=14;
					}
					break;
				case 453:
					{
					alt21=15;
					}
					break;
				case 411:
					{
					switch ( input.LA(2) ) {
					case 440:
						{
						alt21=16;
						}
						break;
					case 437:
						{
						alt21=17;
						}
						break;
					case 357:
						{
						alt21=18;
						}
						break;
					case 333:
						{
						alt21=19;
						}
						break;
					case 356:
						{
						alt21=20;
						}
						break;
					case 358:
						{
						alt21=21;
						}
						break;
					}
					}
					break;
				case 338:
					{
					alt21=22;
					}
					break;
				case 454:
					{
					alt21=23;
					}
					break;
				case 448:
					{
					alt21=24;
					}
					break;
				case 367:
					{
					alt21=25;
					}
					break;
				}
				switch (alt21) {
				case 1 :
					// CIL.g:470:42: 'public'
					{
					string_literal220=(Token)match(input,440,FOLLOW_440_in_classAttr9543); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal220_tree = (CommonTree)adaptor.create(string_literal220);
					adaptor.addChild(root_0, string_literal220_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:470:53: 'private'
					{
					string_literal221=(Token)match(input,437,FOLLOW_437_in_classAttr9547); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal221_tree = (CommonTree)adaptor.create(string_literal221);
					adaptor.addChild(root_0, string_literal221_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:470:65: 'value'
					{
					string_literal222=(Token)match(input,484,FOLLOW_484_in_classAttr9551); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal222_tree = (CommonTree)adaptor.create(string_literal222);
					adaptor.addChild(root_0, string_literal222_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:470:75: 'enum'
					{
					string_literal223=(Token)match(input,350,FOLLOW_350_in_classAttr9555); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal223_tree = (CommonTree)adaptor.create(string_literal223);
					adaptor.addChild(root_0, string_literal223_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:470:84: 'interface'
					{
					string_literal224=(Token)match(input,392,FOLLOW_392_in_classAttr9559); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal224_tree = (CommonTree)adaptor.create(string_literal224);
					adaptor.addChild(root_0, string_literal224_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:470:98: 'sealed'
					{
					string_literal225=(Token)match(input,451,FOLLOW_451_in_classAttr9563); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal225_tree = (CommonTree)adaptor.create(string_literal225);
					adaptor.addChild(root_0, string_literal225_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:470:109: 'abstract'
					{
					string_literal226=(Token)match(input,325,FOLLOW_325_in_classAttr9567); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal226_tree = (CommonTree)adaptor.create(string_literal226);
					adaptor.addChild(root_0, string_literal226_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:470:122: 'auto'
					{
					string_literal227=(Token)match(input,336,FOLLOW_336_in_classAttr9571); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal227_tree = (CommonTree)adaptor.create(string_literal227);
					adaptor.addChild(root_0, string_literal227_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:470:131: 'sequential'
					{
					string_literal228=(Token)match(input,452,FOLLOW_452_in_classAttr9575); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal228_tree = (CommonTree)adaptor.create(string_literal228);
					adaptor.addChild(root_0, string_literal228_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:470:146: 'explicit'
					{
					string_literal229=(Token)match(input,352,FOLLOW_352_in_classAttr9579); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal229_tree = (CommonTree)adaptor.create(string_literal229);
					adaptor.addChild(root_0, string_literal229_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:470:159: 'ansi'
					{
					string_literal230=(Token)match(input,329,FOLLOW_329_in_classAttr9583); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal230_tree = (CommonTree)adaptor.create(string_literal230);
					adaptor.addChild(root_0, string_literal230_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:470:168: 'unicode'
					{
					string_literal231=(Token)match(input,479,FOLLOW_479_in_classAttr9587); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal231_tree = (CommonTree)adaptor.create(string_literal231);
					adaptor.addChild(root_0, string_literal231_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:470:180: 'autochar'
					{
					string_literal232=(Token)match(input,337,FOLLOW_337_in_classAttr9591); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal232_tree = (CommonTree)adaptor.create(string_literal232);
					adaptor.addChild(root_0, string_literal232_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:470:193: 'import'
					{
					string_literal233=(Token)match(input,381,FOLLOW_381_in_classAttr9595); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal233_tree = (CommonTree)adaptor.create(string_literal233);
					adaptor.addChild(root_0, string_literal233_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:470:204: 'serializable'
					{
					string_literal234=(Token)match(input,453,FOLLOW_453_in_classAttr9599); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal234_tree = (CommonTree)adaptor.create(string_literal234);
					adaptor.addChild(root_0, string_literal234_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:470:221: 'nested' 'public'
					{
					string_literal235=(Token)match(input,411,FOLLOW_411_in_classAttr9603); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal235_tree = (CommonTree)adaptor.create(string_literal235);
					adaptor.addChild(root_0, string_literal235_tree);
					}

					string_literal236=(Token)match(input,440,FOLLOW_440_in_classAttr9605); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal236_tree = (CommonTree)adaptor.create(string_literal236);
					adaptor.addChild(root_0, string_literal236_tree);
					}

					}
					break;
				case 17 :
					// CIL.g:470:241: 'nested' 'private'
					{
					string_literal237=(Token)match(input,411,FOLLOW_411_in_classAttr9609); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal237_tree = (CommonTree)adaptor.create(string_literal237);
					adaptor.addChild(root_0, string_literal237_tree);
					}

					string_literal238=(Token)match(input,437,FOLLOW_437_in_classAttr9611); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal238_tree = (CommonTree)adaptor.create(string_literal238);
					adaptor.addChild(root_0, string_literal238_tree);
					}

					}
					break;
				case 18 :
					// CIL.g:470:262: 'nested' 'family'
					{
					string_literal239=(Token)match(input,411,FOLLOW_411_in_classAttr9615); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal239_tree = (CommonTree)adaptor.create(string_literal239);
					adaptor.addChild(root_0, string_literal239_tree);
					}

					string_literal240=(Token)match(input,357,FOLLOW_357_in_classAttr9617); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal240_tree = (CommonTree)adaptor.create(string_literal240);
					adaptor.addChild(root_0, string_literal240_tree);
					}

					}
					break;
				case 19 :
					// CIL.g:470:282: 'nested' 'assembly'
					{
					string_literal241=(Token)match(input,411,FOLLOW_411_in_classAttr9621); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal241_tree = (CommonTree)adaptor.create(string_literal241);
					adaptor.addChild(root_0, string_literal241_tree);
					}

					string_literal242=(Token)match(input,333,FOLLOW_333_in_classAttr9623); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal242_tree = (CommonTree)adaptor.create(string_literal242);
					adaptor.addChild(root_0, string_literal242_tree);
					}

					}
					break;
				case 20 :
					// CIL.g:470:304: 'nested' 'famandassem'
					{
					string_literal243=(Token)match(input,411,FOLLOW_411_in_classAttr9627); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal243_tree = (CommonTree)adaptor.create(string_literal243);
					adaptor.addChild(root_0, string_literal243_tree);
					}

					string_literal244=(Token)match(input,356,FOLLOW_356_in_classAttr9629); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal244_tree = (CommonTree)adaptor.create(string_literal244);
					adaptor.addChild(root_0, string_literal244_tree);
					}

					}
					break;
				case 21 :
					// CIL.g:470:329: 'nested' 'famorassem'
					{
					string_literal245=(Token)match(input,411,FOLLOW_411_in_classAttr9633); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal245_tree = (CommonTree)adaptor.create(string_literal245);
					adaptor.addChild(root_0, string_literal245_tree);
					}

					string_literal246=(Token)match(input,358,FOLLOW_358_in_classAttr9635); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal246_tree = (CommonTree)adaptor.create(string_literal246);
					adaptor.addChild(root_0, string_literal246_tree);
					}

					}
					break;
				case 22 :
					// CIL.g:470:353: 'beforefieldinit'
					{
					string_literal247=(Token)match(input,338,FOLLOW_338_in_classAttr9639); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal247_tree = (CommonTree)adaptor.create(string_literal247);
					adaptor.addChild(root_0, string_literal247_tree);
					}

					}
					break;
				case 23 :
					// CIL.g:470:373: 'specialname'
					{
					string_literal248=(Token)match(input,454,FOLLOW_454_in_classAttr9643); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal248_tree = (CommonTree)adaptor.create(string_literal248);
					adaptor.addChild(root_0, string_literal248_tree);
					}

					}
					break;
				case 24 :
					// CIL.g:470:389: 'rtspecialname'
					{
					string_literal249=(Token)match(input,448,FOLLOW_448_in_classAttr9647); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal249_tree = (CommonTree)adaptor.create(string_literal249);
					adaptor.addChild(root_0, string_literal249_tree);
					}

					}
					break;
				case 25 :
					// CIL.g:470:407: 'flags' '(' int32 ')'
					{
					string_literal250=(Token)match(input,367,FOLLOW_367_in_classAttr9651); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal250_tree = (CommonTree)adaptor.create(string_literal250);
					adaptor.addChild(root_0, string_literal250_tree);
					}

					char_literal251=(Token)match(input,258,FOLLOW_258_in_classAttr9653); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal251_tree = (CommonTree)adaptor.create(char_literal251);
					adaptor.addChild(root_0, char_literal251_tree);
					}

					pushFollow(FOLLOW_int32_in_classAttr9655);
					int32252=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32252.getTree());

					char_literal253=(Token)match(input,259,FOLLOW_259_in_classAttr9657); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal253_tree = (CommonTree)adaptor.create(char_literal253);
					adaptor.addChild(root_0, char_literal253_tree);
					}

					}
					break;

				default :
					break loop21;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "classAttr"


	public static class extendsClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "extendsClause"
	// CIL.g:473:1: extendsClause : (| 'extends' typeSpec );
	public final CILParser.extendsClause_return extendsClause() throws RecognitionException {
		CILParser.extendsClause_return retval = new CILParser.extendsClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal254=null;
		ParserRuleReturnScope typeSpec255 =null;

		CommonTree string_literal254_tree=null;

		try {
			// CIL.g:473:25: (| 'extends' typeSpec )
			int alt22=2;
			int LA22_0 = input.LA(1);
			if ( (LA22_0==380||LA22_0==494) ) {
				alt22=1;
			}
			else if ( (LA22_0==353) ) {
				alt22=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 22, 0, input);
				throw nvae;
			}

			switch (alt22) {
				case 1 :
					// CIL.g:474:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:474:27: 'extends' typeSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal254=(Token)match(input,353,FOLLOW_353_in_extendsClause9774); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal254_tree = (CommonTree)adaptor.create(string_literal254);
					adaptor.addChild(root_0, string_literal254_tree);
					}

					pushFollow(FOLLOW_typeSpec_in_extendsClause9776);
					typeSpec255=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec255.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "extendsClause"


	public static class implClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "implClause"
	// CIL.g:477:1: implClause : (| 'implements' implList );
	public final CILParser.implClause_return implClause() throws RecognitionException {
		CILParser.implClause_return retval = new CILParser.implClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal256=null;
		ParserRuleReturnScope implList257 =null;

		CommonTree string_literal256_tree=null;

		try {
			// CIL.g:477:25: (| 'implements' implList )
			int alt23=2;
			int LA23_0 = input.LA(1);
			if ( (LA23_0==494) ) {
				alt23=1;
			}
			else if ( (LA23_0==380) ) {
				alt23=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 23, 0, input);
				throw nvae;
			}

			switch (alt23) {
				case 1 :
					// CIL.g:478:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:478:27: 'implements' implList
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal256=(Token)match(input,380,FOLLOW_380_in_implClause9851); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal256_tree = (CommonTree)adaptor.create(string_literal256);
					adaptor.addChild(root_0, string_literal256_tree);
					}

					pushFollow(FOLLOW_implList_in_implClause9853);
					implList257=implList();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, implList257.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "implClause"


	public static class classDecls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "classDecls"
	// CIL.g:481:1: classDecls : () ( classDecl )* ;
	public final CILParser.classDecls_return classDecls() throws RecognitionException {
		CILParser.classDecls_return retval = new CILParser.classDecls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope classDecl258 =null;


		try {
			// CIL.g:481:25: ( () ( classDecl )* )
			// CIL.g:481:27: () ( classDecl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:481:27: ()
			// CIL.g:481:39: 
			{
			}

			// CIL.g:481:41: ( classDecl )*
			loop24:
			while (true) {
				int alt24=2;
				int LA24_0 = input.LA(1);
				if ( (LA24_0==269||(LA24_0 >= 272 && LA24_0 <= 273)||(LA24_0 >= 276 && LA24_0 <= 278)||(LA24_0 >= 284 && LA24_0 <= 285)||LA24_0==289||(LA24_0 >= 296 && LA24_0 <= 300)||LA24_0==305||LA24_0==310||LA24_0==430) ) {
					alt24=1;
				}

				switch (alt24) {
				case 1 :
					// CIL.g:481:42: classDecl
					{
					pushFollow(FOLLOW_classDecl_in_classDecls9904);
					classDecl258=classDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, classDecl258.getTree());

					}
					break;

				default :
					break loop24;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "classDecls"


	public static class implList_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "implList"
	// CIL.g:484:1: implList : ( typeSpec ) ( ',' typeSpec )* ;
	public final CILParser.implList_return implList() throws RecognitionException {
		CILParser.implList_return retval = new CILParser.implList_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal260=null;
		ParserRuleReturnScope typeSpec259 =null;
		ParserRuleReturnScope typeSpec261 =null;

		CommonTree char_literal260_tree=null;

		try {
			// CIL.g:484:25: ( ( typeSpec ) ( ',' typeSpec )* )
			// CIL.g:484:27: ( typeSpec ) ( ',' typeSpec )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:484:27: ( typeSpec )
			// CIL.g:484:28: typeSpec
			{
			pushFollow(FOLLOW_typeSpec_in_implList9979);
			typeSpec259=typeSpec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec259.getTree());

			}

			// CIL.g:484:38: ( ',' typeSpec )*
			loop25:
			while (true) {
				int alt25=2;
				int LA25_0 = input.LA(1);
				if ( (LA25_0==262) ) {
					alt25=1;
				}

				switch (alt25) {
				case 1 :
					// CIL.g:484:39: ',' typeSpec
					{
					char_literal260=(Token)match(input,262,FOLLOW_262_in_implList9983); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal260_tree = (CommonTree)adaptor.create(char_literal260);
					adaptor.addChild(root_0, char_literal260_tree);
					}

					pushFollow(FOLLOW_typeSpec_in_implList9985);
					typeSpec261=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec261.getTree());

					}
					break;

				default :
					break loop25;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "implList"


	public static class typeList_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typeList"
	// CIL.g:488:1: typeList : (| typeListNotEmpty );
	public final CILParser.typeList_return typeList() throws RecognitionException {
		CILParser.typeList_return retval = new CILParser.typeList_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope typeListNotEmpty262 =null;


		try {
			// CIL.g:488:25: (| typeListNotEmpty )
			int alt26=2;
			int LA26_0 = input.LA(1);
			if ( (LA26_0==259) ) {
				alt26=1;
			}
			else if ( (LA26_0==CHAR||LA26_0==CLASS||LA26_0==DOTTEDNAME||LA26_0==ID||LA26_0==SQSTRING||LA26_0==256||LA26_0==264||LA26_0==267||LA26_0==294||LA26_0==308||LA26_0==310||LA26_0==323||LA26_0==340||(LA26_0 >= 369 && LA26_0 <= 370)||(LA26_0 >= 388 && LA26_0 <= 391)||(LA26_0 >= 406 && LA26_0 <= 407)||LA26_0==410||LA26_0==423||LA26_0==462||LA26_0==473||(LA26_0 >= 475 && LA26_0 <= 478)||LA26_0==482||(LA26_0 >= 484 && LA26_0 <= 485)||LA26_0==490) ) {
				alt26=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 26, 0, input);
				throw nvae;
			}

			switch (alt26) {
				case 1 :
					// CIL.g:489:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:489:27: typeListNotEmpty
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typeListNotEmpty_in_typeList10097);
					typeListNotEmpty262=typeListNotEmpty();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeListNotEmpty262.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typeList"


	public static class typeListNotEmpty_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typeListNotEmpty"
	// CIL.g:492:1: typeListNotEmpty : ( typeSpec ) ( ',' typeSpec )* ;
	public final CILParser.typeListNotEmpty_return typeListNotEmpty() throws RecognitionException {
		CILParser.typeListNotEmpty_return retval = new CILParser.typeListNotEmpty_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal264=null;
		ParserRuleReturnScope typeSpec263 =null;
		ParserRuleReturnScope typeSpec265 =null;

		CommonTree char_literal264_tree=null;

		try {
			// CIL.g:492:25: ( ( typeSpec ) ( ',' typeSpec )* )
			// CIL.g:492:27: ( typeSpec ) ( ',' typeSpec )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:492:27: ( typeSpec )
			// CIL.g:492:28: typeSpec
			{
			pushFollow(FOLLOW_typeSpec_in_typeListNotEmpty10163);
			typeSpec263=typeSpec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec263.getTree());

			}

			// CIL.g:492:38: ( ',' typeSpec )*
			loop27:
			while (true) {
				int alt27=2;
				int LA27_0 = input.LA(1);
				if ( (LA27_0==262) ) {
					alt27=1;
				}

				switch (alt27) {
				case 1 :
					// CIL.g:492:39: ',' typeSpec
					{
					char_literal264=(Token)match(input,262,FOLLOW_262_in_typeListNotEmpty10167); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal264_tree = (CommonTree)adaptor.create(char_literal264);
					adaptor.addChild(root_0, char_literal264_tree);
					}

					pushFollow(FOLLOW_typeSpec_in_typeListNotEmpty10169);
					typeSpec265=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec265.getTree());

					}
					break;

				default :
					break loop27;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typeListNotEmpty"


	public static class typarsClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typarsClause"
	// CIL.g:495:1: typarsClause : (| '<' typars '>' );
	public final CILParser.typarsClause_return typarsClause() throws RecognitionException {
		CILParser.typarsClause_return retval = new CILParser.typarsClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal266=null;
		Token char_literal268=null;
		ParserRuleReturnScope typars267 =null;

		CommonTree char_literal266_tree=null;
		CommonTree char_literal268_tree=null;

		try {
			// CIL.g:495:25: (| '<' typars '>' )
			int alt28=2;
			int LA28_0 = input.LA(1);
			if ( (LA28_0==258||LA28_0==353||LA28_0==380||LA28_0==494) ) {
				alt28=1;
			}
			else if ( (LA28_0==320) ) {
				alt28=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 28, 0, input);
				throw nvae;
			}

			switch (alt28) {
				case 1 :
					// CIL.g:496:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:496:27: '<' typars '>'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal266=(Token)match(input,320,FOLLOW_320_in_typarsClause10245); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal266_tree = (CommonTree)adaptor.create(char_literal266);
					adaptor.addChild(root_0, char_literal266_tree);
					}

					pushFollow(FOLLOW_typars_in_typarsClause10247);
					typars267=typars();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typars267.getTree());

					char_literal268=(Token)match(input,322,FOLLOW_322_in_typarsClause10249); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal268_tree = (CommonTree)adaptor.create(char_literal268);
					adaptor.addChild(root_0, char_literal268_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typarsClause"


	public static class typarAttrib_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typarAttrib"
	// CIL.g:499:1: typarAttrib : ( '+' | '-' | 'class' | 'valuetype' | '.ctor' );
	public final CILParser.typarAttrib_return typarAttrib() throws RecognitionException {
		CILParser.typarAttrib_return retval = new CILParser.typarAttrib_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set269=null;

		CommonTree set269_tree=null;

		try {
			// CIL.g:499:25: ( '+' | '-' | 'class' | 'valuetype' | '.ctor' )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set269=input.LT(1);
			if ( input.LA(1)==CLASS||input.LA(1)==261||input.LA(1)==263||input.LA(1)==271||input.LA(1)==485 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set269));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typarAttrib"


	public static class typarAttribs_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typarAttribs"
	// CIL.g:506:1: typarAttribs : (| typarAttrib typarAttribs );
	public final CILParser.typarAttribs_return typarAttribs() throws RecognitionException {
		CILParser.typarAttribs_return retval = new CILParser.typarAttribs_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope typarAttrib270 =null;
		ParserRuleReturnScope typarAttribs271 =null;


		try {
			// CIL.g:506:25: (| typarAttrib typarAttribs )
			int alt29=2;
			int LA29_0 = input.LA(1);
			if ( (LA29_0==DOTTEDNAME||LA29_0==ID||LA29_0==SQSTRING||LA29_0==258) ) {
				alt29=1;
			}
			else if ( (LA29_0==CLASS||LA29_0==261||LA29_0==263||LA29_0==271||LA29_0==485) ) {
				alt29=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 29, 0, input);
				throw nvae;
			}

			switch (alt29) {
				case 1 :
					// CIL.g:507:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:507:27: typarAttrib typarAttribs
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typarAttrib_in_typarAttribs10503);
					typarAttrib270=typarAttrib();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typarAttrib270.getTree());

					pushFollow(FOLLOW_typarAttribs_in_typarAttribs10505);
					typarAttribs271=typarAttribs();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typarAttribs271.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typarAttribs"


	public static class typars_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typars"
	// CIL.g:510:1: typars : ( typarAttribs tyBound dottedName typarsRest | typarAttribs dottedName typarsRest );
	public final CILParser.typars_return typars() throws RecognitionException {
		CILParser.typars_return retval = new CILParser.typars_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope typarAttribs272 =null;
		ParserRuleReturnScope tyBound273 =null;
		ParserRuleReturnScope dottedName274 =null;
		ParserRuleReturnScope typarsRest275 =null;
		ParserRuleReturnScope typarAttribs276 =null;
		ParserRuleReturnScope dottedName277 =null;
		ParserRuleReturnScope typarsRest278 =null;


		try {
			// CIL.g:510:25: ( typarAttribs tyBound dottedName typarsRest | typarAttribs dottedName typarsRest )
			int alt30=2;
			switch ( input.LA(1) ) {
			case 258:
				{
				alt30=1;
				}
				break;
			case CLASS:
			case 261:
			case 263:
			case 271:
			case 485:
				{
				int LA30_2 = input.LA(2);
				if ( (synpred100_CIL()) ) {
					alt30=1;
				}
				else if ( (true) ) {
					alt30=2;
				}

				}
				break;
			case DOTTEDNAME:
			case ID:
			case SQSTRING:
				{
				alt30=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 30, 0, input);
				throw nvae;
			}
			switch (alt30) {
				case 1 :
					// CIL.g:510:27: typarAttribs tyBound dottedName typarsRest
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typarAttribs_in_typars10581);
					typarAttribs272=typarAttribs();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typarAttribs272.getTree());

					pushFollow(FOLLOW_tyBound_in_typars10583);
					tyBound273=tyBound();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tyBound273.getTree());

					pushFollow(FOLLOW_dottedName_in_typars10585);
					dottedName274=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName274.getTree());

					pushFollow(FOLLOW_typarsRest_in_typars10587);
					typarsRest275=typarsRest();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typarsRest275.getTree());

					}
					break;
				case 2 :
					// CIL.g:511:27: typarAttribs dottedName typarsRest
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typarAttribs_in_typars10616);
					typarAttribs276=typarAttribs();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typarAttribs276.getTree());

					pushFollow(FOLLOW_dottedName_in_typars10618);
					dottedName277=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName277.getTree());

					pushFollow(FOLLOW_typarsRest_in_typars10620);
					typarsRest278=typarsRest();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typarsRest278.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typars"


	public static class typarsRest_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typarsRest"
	// CIL.g:514:1: typarsRest : (| ',' typars );
	public final CILParser.typarsRest_return typarsRest() throws RecognitionException {
		CILParser.typarsRest_return retval = new CILParser.typarsRest_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal279=null;
		ParserRuleReturnScope typars280 =null;

		CommonTree char_literal279_tree=null;

		try {
			// CIL.g:514:25: (| ',' typars )
			int alt31=2;
			int LA31_0 = input.LA(1);
			if ( (LA31_0==EOF||LA31_0==322) ) {
				alt31=1;
			}
			else if ( (LA31_0==262) ) {
				alt31=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 31, 0, input);
				throw nvae;
			}

			switch (alt31) {
				case 1 :
					// CIL.g:515:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:515:27: ',' typars
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal279=(Token)match(input,262,FOLLOW_262_in_typarsRest10696); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal279_tree = (CommonTree)adaptor.create(char_literal279);
					adaptor.addChild(root_0, char_literal279_tree);
					}

					pushFollow(FOLLOW_typars_in_typarsRest10698);
					typars280=typars();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typars280.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typarsRest"


	public static class tyBound_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "tyBound"
	// CIL.g:518:1: tyBound : '(' typeList ')' ;
	public final CILParser.tyBound_return tyBound() throws RecognitionException {
		CILParser.tyBound_return retval = new CILParser.tyBound_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal281=null;
		Token char_literal283=null;
		ParserRuleReturnScope typeList282 =null;

		CommonTree char_literal281_tree=null;
		CommonTree char_literal283_tree=null;

		try {
			// CIL.g:518:25: ( '(' typeList ')' )
			// CIL.g:518:27: '(' typeList ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal281=(Token)match(input,258,FOLLOW_258_in_tyBound10748); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal281_tree = (CommonTree)adaptor.create(char_literal281);
			adaptor.addChild(root_0, char_literal281_tree);
			}

			pushFollow(FOLLOW_typeList_in_tyBound10750);
			typeList282=typeList();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, typeList282.getTree());

			char_literal283=(Token)match(input,259,FOLLOW_259_in_tyBound10752); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal283_tree = (CommonTree)adaptor.create(char_literal283);
			adaptor.addChild(root_0, char_literal283_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tyBound"


	public static class genArity_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "genArity"
	// CIL.g:521:1: genArity : (| genArityNotEmpty );
	public final CILParser.genArity_return genArity() throws RecognitionException {
		CILParser.genArity_return retval = new CILParser.genArity_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope genArityNotEmpty284 =null;


		try {
			// CIL.g:521:25: (| genArityNotEmpty )
			int alt32=2;
			int LA32_0 = input.LA(1);
			if ( (LA32_0==258) ) {
				alt32=1;
			}
			else if ( (LA32_0==320) ) {
				alt32=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 32, 0, input);
				throw nvae;
			}

			switch (alt32) {
				case 1 :
					// CIL.g:522:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:522:27: genArityNotEmpty
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_genArityNotEmpty_in_genArity10854);
					genArityNotEmpty284=genArityNotEmpty();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, genArityNotEmpty284.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "genArity"


	public static class genArityNotEmpty_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "genArityNotEmpty"
	// CIL.g:525:1: genArityNotEmpty : '<' '[' int32 ']' '>' ;
	public final CILParser.genArityNotEmpty_return genArityNotEmpty() throws RecognitionException {
		CILParser.genArityNotEmpty_return retval = new CILParser.genArityNotEmpty_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal285=null;
		Token char_literal286=null;
		Token char_literal288=null;
		Token char_literal289=null;
		ParserRuleReturnScope int32287 =null;

		CommonTree char_literal285_tree=null;
		CommonTree char_literal286_tree=null;
		CommonTree char_literal288_tree=null;
		CommonTree char_literal289_tree=null;

		try {
			// CIL.g:525:25: ( '<' '[' int32 ']' '>' )
			// CIL.g:525:27: '<' '[' int32 ']' '>'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal285=(Token)match(input,320,FOLLOW_320_in_genArityNotEmpty10919); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal285_tree = (CommonTree)adaptor.create(char_literal285);
			adaptor.addChild(root_0, char_literal285_tree);
			}

			char_literal286=(Token)match(input,323,FOLLOW_323_in_genArityNotEmpty10921); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal286_tree = (CommonTree)adaptor.create(char_literal286);
			adaptor.addChild(root_0, char_literal286_tree);
			}

			pushFollow(FOLLOW_int32_in_genArityNotEmpty10923);
			int32287=int32();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, int32287.getTree());

			char_literal288=(Token)match(input,324,FOLLOW_324_in_genArityNotEmpty10925); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal288_tree = (CommonTree)adaptor.create(char_literal288);
			adaptor.addChild(root_0, char_literal288_tree);
			}

			char_literal289=(Token)match(input,322,FOLLOW_322_in_genArityNotEmpty10927); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal289_tree = (CommonTree)adaptor.create(char_literal289);
			adaptor.addChild(root_0, char_literal289_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "genArityNotEmpty"


	public static class classDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "classDecl"
	// CIL.g:529:1: classDecl : ( methodHead methodDecls '}' | classHead '{' classDecls '}' | eventHead '{' eventDecls '}' | propHead '{' propDecls '}' | fieldDecl | dataDecl | secDecl | extSourceSpec | customAttrDecl | '.size' int32 | '.pack' int32 | exportHead '{' exptypeDecls '}' | '.override' typeSpec '::' methodName 'with' callConv type typeSpec '::' methodName '(' sigArgs0 ')' | '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' 'with' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' | languageDecl | 'param' 'type' '[' int32 ']' | 'param' 'type' dottedName );
	public final CILParser.classDecl_return classDecl() throws RecognitionException {
		CILParser.classDecl_return retval = new CILParser.classDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal292=null;
		Token char_literal294=null;
		Token char_literal296=null;
		Token char_literal298=null;
		Token char_literal300=null;
		Token char_literal302=null;
		Token char_literal304=null;
		Token string_literal310=null;
		Token string_literal312=null;
		Token char_literal315=null;
		Token char_literal317=null;
		Token string_literal318=null;
		Token string_literal320=null;
		Token string_literal322=null;
		Token string_literal326=null;
		Token char_literal328=null;
		Token char_literal330=null;
		Token string_literal331=null;
		Token string_literal332=null;
		Token string_literal336=null;
		Token char_literal339=null;
		Token char_literal341=null;
		Token string_literal342=null;
		Token string_literal343=null;
		Token string_literal347=null;
		Token char_literal350=null;
		Token char_literal352=null;
		Token string_literal354=null;
		Token string_literal355=null;
		Token char_literal356=null;
		Token char_literal358=null;
		Token string_literal359=null;
		Token string_literal360=null;
		ParserRuleReturnScope methodHead290 =null;
		ParserRuleReturnScope methodDecls291 =null;
		ParserRuleReturnScope classHead293 =null;
		ParserRuleReturnScope classDecls295 =null;
		ParserRuleReturnScope eventHead297 =null;
		ParserRuleReturnScope eventDecls299 =null;
		ParserRuleReturnScope propHead301 =null;
		ParserRuleReturnScope propDecls303 =null;
		ParserRuleReturnScope fieldDecl305 =null;
		ParserRuleReturnScope dataDecl306 =null;
		ParserRuleReturnScope secDecl307 =null;
		ParserRuleReturnScope extSourceSpec308 =null;
		ParserRuleReturnScope customAttrDecl309 =null;
		ParserRuleReturnScope int32311 =null;
		ParserRuleReturnScope int32313 =null;
		ParserRuleReturnScope exportHead314 =null;
		ParserRuleReturnScope exptypeDecls316 =null;
		ParserRuleReturnScope typeSpec319 =null;
		ParserRuleReturnScope methodName321 =null;
		ParserRuleReturnScope callConv323 =null;
		ParserRuleReturnScope type324 =null;
		ParserRuleReturnScope typeSpec325 =null;
		ParserRuleReturnScope methodName327 =null;
		ParserRuleReturnScope sigArgs0329 =null;
		ParserRuleReturnScope callConv333 =null;
		ParserRuleReturnScope type334 =null;
		ParserRuleReturnScope typeSpec335 =null;
		ParserRuleReturnScope methodName337 =null;
		ParserRuleReturnScope genArity338 =null;
		ParserRuleReturnScope sigArgs0340 =null;
		ParserRuleReturnScope callConv344 =null;
		ParserRuleReturnScope type345 =null;
		ParserRuleReturnScope typeSpec346 =null;
		ParserRuleReturnScope methodName348 =null;
		ParserRuleReturnScope genArity349 =null;
		ParserRuleReturnScope sigArgs0351 =null;
		ParserRuleReturnScope languageDecl353 =null;
		ParserRuleReturnScope int32357 =null;
		ParserRuleReturnScope dottedName361 =null;

		CommonTree char_literal292_tree=null;
		CommonTree char_literal294_tree=null;
		CommonTree char_literal296_tree=null;
		CommonTree char_literal298_tree=null;
		CommonTree char_literal300_tree=null;
		CommonTree char_literal302_tree=null;
		CommonTree char_literal304_tree=null;
		CommonTree string_literal310_tree=null;
		CommonTree string_literal312_tree=null;
		CommonTree char_literal315_tree=null;
		CommonTree char_literal317_tree=null;
		CommonTree string_literal318_tree=null;
		CommonTree string_literal320_tree=null;
		CommonTree string_literal322_tree=null;
		CommonTree string_literal326_tree=null;
		CommonTree char_literal328_tree=null;
		CommonTree char_literal330_tree=null;
		CommonTree string_literal331_tree=null;
		CommonTree string_literal332_tree=null;
		CommonTree string_literal336_tree=null;
		CommonTree char_literal339_tree=null;
		CommonTree char_literal341_tree=null;
		CommonTree string_literal342_tree=null;
		CommonTree string_literal343_tree=null;
		CommonTree string_literal347_tree=null;
		CommonTree char_literal350_tree=null;
		CommonTree char_literal352_tree=null;
		CommonTree string_literal354_tree=null;
		CommonTree string_literal355_tree=null;
		CommonTree char_literal356_tree=null;
		CommonTree char_literal358_tree=null;
		CommonTree string_literal359_tree=null;
		CommonTree string_literal360_tree=null;

		try {
			// CIL.g:529:25: ( methodHead methodDecls '}' | classHead '{' classDecls '}' | eventHead '{' eventDecls '}' | propHead '{' propDecls '}' | fieldDecl | dataDecl | secDecl | extSourceSpec | customAttrDecl | '.size' int32 | '.pack' int32 | exportHead '{' exptypeDecls '}' | '.override' typeSpec '::' methodName 'with' callConv type typeSpec '::' methodName '(' sigArgs0 ')' | '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' 'with' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' | languageDecl | 'param' 'type' '[' int32 ']' | 'param' 'type' dottedName )
			int alt33=17;
			switch ( input.LA(1) ) {
			case 289:
				{
				alt33=1;
				}
				break;
			case 269:
				{
				alt33=2;
				}
				break;
			case 276:
				{
				alt33=3;
				}
				break;
			case 300:
				{
				alt33=4;
				}
				break;
			case 278:
				{
				alt33=5;
				}
				break;
			case 273:
				{
				alt33=6;
				}
				break;
			case 298:
			case 299:
				{
				alt33=7;
				}
				break;
			case 285:
				{
				alt33=8;
				}
				break;
			case 272:
			case 310:
				{
				alt33=9;
				}
				break;
			case 305:
				{
				alt33=10;
				}
				break;
			case 297:
				{
				alt33=11;
				}
				break;
			case 277:
				{
				alt33=12;
				}
				break;
			case 296:
				{
				int LA33_15 = input.LA(2);
				if ( (synpred115_CIL()) ) {
					alt33=13;
				}
				else if ( (synpred116_CIL()) ) {
					alt33=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 33, 15, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 284:
				{
				alt33=15;
				}
				break;
			case 430:
				{
				int LA33_17 = input.LA(2);
				if ( (synpred118_CIL()) ) {
					alt33=16;
				}
				else if ( (true) ) {
					alt33=17;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 33, 0, input);
				throw nvae;
			}
			switch (alt33) {
				case 1 :
					// CIL.g:529:27: methodHead methodDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_methodHead_in_classDecl11002);
					methodHead290=methodHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodHead290.getTree());

					pushFollow(FOLLOW_methodDecls_in_classDecl11005);
					methodDecls291=methodDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodDecls291.getTree());

					char_literal292=(Token)match(input,495,FOLLOW_495_in_classDecl11007); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal292_tree = (CommonTree)adaptor.create(char_literal292);
					adaptor.addChild(root_0, char_literal292_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:530:27: classHead '{' classDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_classHead_in_classDecl11036);
					classHead293=classHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, classHead293.getTree());

					char_literal294=(Token)match(input,494,FOLLOW_494_in_classDecl11038); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal294_tree = (CommonTree)adaptor.create(char_literal294);
					adaptor.addChild(root_0, char_literal294_tree);
					}

					pushFollow(FOLLOW_classDecls_in_classDecl11040);
					classDecls295=classDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, classDecls295.getTree());

					char_literal296=(Token)match(input,495,FOLLOW_495_in_classDecl11042); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal296_tree = (CommonTree)adaptor.create(char_literal296);
					adaptor.addChild(root_0, char_literal296_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:531:27: eventHead '{' eventDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_eventHead_in_classDecl11071);
					eventHead297=eventHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, eventHead297.getTree());

					char_literal298=(Token)match(input,494,FOLLOW_494_in_classDecl11073); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal298_tree = (CommonTree)adaptor.create(char_literal298);
					adaptor.addChild(root_0, char_literal298_tree);
					}

					pushFollow(FOLLOW_eventDecls_in_classDecl11075);
					eventDecls299=eventDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, eventDecls299.getTree());

					char_literal300=(Token)match(input,495,FOLLOW_495_in_classDecl11077); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal300_tree = (CommonTree)adaptor.create(char_literal300);
					adaptor.addChild(root_0, char_literal300_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:532:27: propHead '{' propDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_propHead_in_classDecl11106);
					propHead301=propHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, propHead301.getTree());

					char_literal302=(Token)match(input,494,FOLLOW_494_in_classDecl11108); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal302_tree = (CommonTree)adaptor.create(char_literal302);
					adaptor.addChild(root_0, char_literal302_tree);
					}

					pushFollow(FOLLOW_propDecls_in_classDecl11110);
					propDecls303=propDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, propDecls303.getTree());

					char_literal304=(Token)match(input,495,FOLLOW_495_in_classDecl11112); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal304_tree = (CommonTree)adaptor.create(char_literal304);
					adaptor.addChild(root_0, char_literal304_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:533:27: fieldDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_fieldDecl_in_classDecl11141);
					fieldDecl305=fieldDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fieldDecl305.getTree());

					}
					break;
				case 6 :
					// CIL.g:534:27: dataDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_dataDecl_in_classDecl11169);
					dataDecl306=dataDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dataDecl306.getTree());

					}
					break;
				case 7 :
					// CIL.g:535:27: secDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_secDecl_in_classDecl11197);
					secDecl307=secDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secDecl307.getTree());

					}
					break;
				case 8 :
					// CIL.g:536:27: extSourceSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_extSourceSpec_in_classDecl11225);
					extSourceSpec308=extSourceSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, extSourceSpec308.getTree());

					}
					break;
				case 9 :
					// CIL.g:537:27: customAttrDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customAttrDecl_in_classDecl11253);
					customAttrDecl309=customAttrDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customAttrDecl309.getTree());

					}
					break;
				case 10 :
					// CIL.g:538:27: '.size' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal310=(Token)match(input,305,FOLLOW_305_in_classDecl11281); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal310_tree = (CommonTree)adaptor.create(string_literal310);
					adaptor.addChild(root_0, string_literal310_tree);
					}

					pushFollow(FOLLOW_int32_in_classDecl11283);
					int32311=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32311.getTree());

					}
					break;
				case 11 :
					// CIL.g:539:27: '.pack' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal312=(Token)match(input,297,FOLLOW_297_in_classDecl11312); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal312_tree = (CommonTree)adaptor.create(string_literal312);
					adaptor.addChild(root_0, string_literal312_tree);
					}

					pushFollow(FOLLOW_int32_in_classDecl11314);
					int32313=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32313.getTree());

					}
					break;
				case 12 :
					// CIL.g:540:27: exportHead '{' exptypeDecls '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_exportHead_in_classDecl11343);
					exportHead314=exportHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exportHead314.getTree());

					char_literal315=(Token)match(input,494,FOLLOW_494_in_classDecl11345); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal315_tree = (CommonTree)adaptor.create(char_literal315);
					adaptor.addChild(root_0, char_literal315_tree);
					}

					pushFollow(FOLLOW_exptypeDecls_in_classDecl11347);
					exptypeDecls316=exptypeDecls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exptypeDecls316.getTree());

					char_literal317=(Token)match(input,495,FOLLOW_495_in_classDecl11349); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal317_tree = (CommonTree)adaptor.create(char_literal317);
					adaptor.addChild(root_0, char_literal317_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:541:27: '.override' typeSpec '::' methodName 'with' callConv type typeSpec '::' methodName '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal318=(Token)match(input,296,FOLLOW_296_in_classDecl11378); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal318_tree = (CommonTree)adaptor.create(string_literal318);
					adaptor.addChild(root_0, string_literal318_tree);
					}

					pushFollow(FOLLOW_typeSpec_in_classDecl11380);
					typeSpec319=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec319.getTree());

					string_literal320=(Token)match(input,319,FOLLOW_319_in_classDecl11382); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal320_tree = (CommonTree)adaptor.create(string_literal320);
					adaptor.addChild(root_0, string_literal320_tree);
					}

					pushFollow(FOLLOW_methodName_in_classDecl11384);
					methodName321=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName321.getTree());

					string_literal322=(Token)match(input,492,FOLLOW_492_in_classDecl11386); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal322_tree = (CommonTree)adaptor.create(string_literal322);
					adaptor.addChild(root_0, string_literal322_tree);
					}

					pushFollow(FOLLOW_callConv_in_classDecl11388);
					callConv323=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv323.getTree());

					pushFollow(FOLLOW_type_in_classDecl11390);
					type324=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type324.getTree());

					pushFollow(FOLLOW_typeSpec_in_classDecl11392);
					typeSpec325=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec325.getTree());

					string_literal326=(Token)match(input,319,FOLLOW_319_in_classDecl11394); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal326_tree = (CommonTree)adaptor.create(string_literal326);
					adaptor.addChild(root_0, string_literal326_tree);
					}

					pushFollow(FOLLOW_methodName_in_classDecl11396);
					methodName327=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName327.getTree());

					char_literal328=(Token)match(input,258,FOLLOW_258_in_classDecl11398); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal328_tree = (CommonTree)adaptor.create(char_literal328);
					adaptor.addChild(root_0, char_literal328_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_classDecl11400);
					sigArgs0329=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0329.getTree());

					char_literal330=(Token)match(input,259,FOLLOW_259_in_classDecl11402); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal330_tree = (CommonTree)adaptor.create(char_literal330);
					adaptor.addChild(root_0, char_literal330_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:542:27: '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' 'with' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal331=(Token)match(input,296,FOLLOW_296_in_classDecl11432); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal331_tree = (CommonTree)adaptor.create(string_literal331);
					adaptor.addChild(root_0, string_literal331_tree);
					}

					string_literal332=(Token)match(input,407,FOLLOW_407_in_classDecl11434); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal332_tree = (CommonTree)adaptor.create(string_literal332);
					adaptor.addChild(root_0, string_literal332_tree);
					}

					pushFollow(FOLLOW_callConv_in_classDecl11436);
					callConv333=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv333.getTree());

					pushFollow(FOLLOW_type_in_classDecl11438);
					type334=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type334.getTree());

					pushFollow(FOLLOW_typeSpec_in_classDecl11440);
					typeSpec335=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec335.getTree());

					string_literal336=(Token)match(input,319,FOLLOW_319_in_classDecl11442); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal336_tree = (CommonTree)adaptor.create(string_literal336);
					adaptor.addChild(root_0, string_literal336_tree);
					}

					pushFollow(FOLLOW_methodName_in_classDecl11444);
					methodName337=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName337.getTree());

					pushFollow(FOLLOW_genArity_in_classDecl11446);
					genArity338=genArity();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, genArity338.getTree());

					char_literal339=(Token)match(input,258,FOLLOW_258_in_classDecl11448); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal339_tree = (CommonTree)adaptor.create(char_literal339);
					adaptor.addChild(root_0, char_literal339_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_classDecl11450);
					sigArgs0340=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0340.getTree());

					char_literal341=(Token)match(input,259,FOLLOW_259_in_classDecl11452); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal341_tree = (CommonTree)adaptor.create(char_literal341);
					adaptor.addChild(root_0, char_literal341_tree);
					}

					string_literal342=(Token)match(input,492,FOLLOW_492_in_classDecl11454); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal342_tree = (CommonTree)adaptor.create(string_literal342);
					adaptor.addChild(root_0, string_literal342_tree);
					}

					string_literal343=(Token)match(input,407,FOLLOW_407_in_classDecl11456); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal343_tree = (CommonTree)adaptor.create(string_literal343);
					adaptor.addChild(root_0, string_literal343_tree);
					}

					pushFollow(FOLLOW_callConv_in_classDecl11458);
					callConv344=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv344.getTree());

					pushFollow(FOLLOW_type_in_classDecl11460);
					type345=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type345.getTree());

					pushFollow(FOLLOW_typeSpec_in_classDecl11462);
					typeSpec346=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec346.getTree());

					string_literal347=(Token)match(input,319,FOLLOW_319_in_classDecl11464); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal347_tree = (CommonTree)adaptor.create(string_literal347);
					adaptor.addChild(root_0, string_literal347_tree);
					}

					pushFollow(FOLLOW_methodName_in_classDecl11466);
					methodName348=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName348.getTree());

					pushFollow(FOLLOW_genArity_in_classDecl11468);
					genArity349=genArity();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, genArity349.getTree());

					char_literal350=(Token)match(input,258,FOLLOW_258_in_classDecl11470); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal350_tree = (CommonTree)adaptor.create(char_literal350);
					adaptor.addChild(root_0, char_literal350_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_classDecl11472);
					sigArgs0351=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0351.getTree());

					char_literal352=(Token)match(input,259,FOLLOW_259_in_classDecl11474); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal352_tree = (CommonTree)adaptor.create(char_literal352);
					adaptor.addChild(root_0, char_literal352_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:543:27: languageDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_languageDecl_in_classDecl11503);
					languageDecl353=languageDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, languageDecl353.getTree());

					}
					break;
				case 16 :
					// CIL.g:544:27: 'param' 'type' '[' int32 ']'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal354=(Token)match(input,430,FOLLOW_430_in_classDecl11531); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal354_tree = (CommonTree)adaptor.create(string_literal354);
					adaptor.addChild(root_0, string_literal354_tree);
					}

					string_literal355=(Token)match(input,472,FOLLOW_472_in_classDecl11533); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal355_tree = (CommonTree)adaptor.create(string_literal355);
					adaptor.addChild(root_0, string_literal355_tree);
					}

					char_literal356=(Token)match(input,323,FOLLOW_323_in_classDecl11535); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal356_tree = (CommonTree)adaptor.create(char_literal356);
					adaptor.addChild(root_0, char_literal356_tree);
					}

					pushFollow(FOLLOW_int32_in_classDecl11537);
					int32357=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32357.getTree());

					char_literal358=(Token)match(input,324,FOLLOW_324_in_classDecl11539); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal358_tree = (CommonTree)adaptor.create(char_literal358);
					adaptor.addChild(root_0, char_literal358_tree);
					}

					}
					break;
				case 17 :
					// CIL.g:545:27: 'param' 'type' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal359=(Token)match(input,430,FOLLOW_430_in_classDecl11568); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal359_tree = (CommonTree)adaptor.create(string_literal359);
					adaptor.addChild(root_0, string_literal359_tree);
					}

					string_literal360=(Token)match(input,472,FOLLOW_472_in_classDecl11570); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal360_tree = (CommonTree)adaptor.create(string_literal360);
					adaptor.addChild(root_0, string_literal360_tree);
					}

					pushFollow(FOLLOW_dottedName_in_classDecl11572);
					dottedName361=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName361.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "classDecl"


	public static class fieldDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fieldDecl"
	// CIL.g:549:1: fieldDecl : '.field' repeatOpt fieldAttr type dottedName atOpt initOpt ;
	public final CILParser.fieldDecl_return fieldDecl() throws RecognitionException {
		CILParser.fieldDecl_return retval = new CILParser.fieldDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal362=null;
		ParserRuleReturnScope repeatOpt363 =null;
		ParserRuleReturnScope fieldAttr364 =null;
		ParserRuleReturnScope type365 =null;
		ParserRuleReturnScope dottedName366 =null;
		ParserRuleReturnScope atOpt367 =null;
		ParserRuleReturnScope initOpt368 =null;

		CommonTree string_literal362_tree=null;

		try {
			// CIL.g:549:25: ( '.field' repeatOpt fieldAttr type dottedName atOpt initOpt )
			// CIL.g:549:27: '.field' repeatOpt fieldAttr type dottedName atOpt initOpt
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal362=(Token)match(input,278,FOLLOW_278_in_fieldDecl11646); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal362_tree = (CommonTree)adaptor.create(string_literal362);
			adaptor.addChild(root_0, string_literal362_tree);
			}

			pushFollow(FOLLOW_repeatOpt_in_fieldDecl11648);
			repeatOpt363=repeatOpt();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, repeatOpt363.getTree());

			pushFollow(FOLLOW_fieldAttr_in_fieldDecl11650);
			fieldAttr364=fieldAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fieldAttr364.getTree());

			pushFollow(FOLLOW_type_in_fieldDecl11652);
			type365=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type365.getTree());

			pushFollow(FOLLOW_dottedName_in_fieldDecl11654);
			dottedName366=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName366.getTree());

			pushFollow(FOLLOW_atOpt_in_fieldDecl11656);
			atOpt367=atOpt();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, atOpt367.getTree());

			pushFollow(FOLLOW_initOpt_in_fieldDecl11658);
			initOpt368=initOpt();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, initOpt368.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fieldDecl"


	public static class fieldAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fieldAttr"
	// CIL.g:552:1: fieldAttr : () ( 'static' | 'public' | 'private' | 'family' | 'initonly' | 'rtspecialname' | 'specialname' | 'marshal' '(' nativeType ')' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'literal' | 'notserialized' | 'flags' '(' int32 ')' )* ;
	public final CILParser.fieldAttr_return fieldAttr() throws RecognitionException {
		CILParser.fieldAttr_return retval = new CILParser.fieldAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal369=null;
		Token string_literal370=null;
		Token string_literal371=null;
		Token string_literal372=null;
		Token string_literal373=null;
		Token string_literal374=null;
		Token string_literal375=null;
		Token string_literal376=null;
		Token char_literal377=null;
		Token char_literal379=null;
		Token string_literal380=null;
		Token string_literal381=null;
		Token string_literal382=null;
		Token string_literal383=null;
		Token string_literal384=null;
		Token string_literal385=null;
		Token string_literal386=null;
		Token char_literal387=null;
		Token char_literal389=null;
		ParserRuleReturnScope nativeType378 =null;
		ParserRuleReturnScope int32388 =null;

		CommonTree string_literal369_tree=null;
		CommonTree string_literal370_tree=null;
		CommonTree string_literal371_tree=null;
		CommonTree string_literal372_tree=null;
		CommonTree string_literal373_tree=null;
		CommonTree string_literal374_tree=null;
		CommonTree string_literal375_tree=null;
		CommonTree string_literal376_tree=null;
		CommonTree char_literal377_tree=null;
		CommonTree char_literal379_tree=null;
		CommonTree string_literal380_tree=null;
		CommonTree string_literal381_tree=null;
		CommonTree string_literal382_tree=null;
		CommonTree string_literal383_tree=null;
		CommonTree string_literal384_tree=null;
		CommonTree string_literal385_tree=null;
		CommonTree string_literal386_tree=null;
		CommonTree char_literal387_tree=null;
		CommonTree char_literal389_tree=null;

		try {
			// CIL.g:552:25: ( () ( 'static' | 'public' | 'private' | 'family' | 'initonly' | 'rtspecialname' | 'specialname' | 'marshal' '(' nativeType ')' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'literal' | 'notserialized' | 'flags' '(' int32 ')' )* )
			// CIL.g:552:27: () ( 'static' | 'public' | 'private' | 'family' | 'initonly' | 'rtspecialname' | 'specialname' | 'marshal' '(' nativeType ')' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'literal' | 'notserialized' | 'flags' '(' int32 ')' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:552:27: ()
			// CIL.g:552:39: 
			{
			}

			// CIL.g:552:41: ( 'static' | 'public' | 'private' | 'family' | 'initonly' | 'rtspecialname' | 'specialname' | 'marshal' '(' nativeType ')' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'literal' | 'notserialized' | 'flags' '(' int32 ')' )*
			loop34:
			while (true) {
				int alt34=16;
				switch ( input.LA(1) ) {
				case 455:
					{
					alt34=1;
					}
					break;
				case 440:
					{
					alt34=2;
					}
					break;
				case 437:
					{
					alt34=3;
					}
					break;
				case 357:
					{
					alt34=4;
					}
					break;
				case 385:
					{
					alt34=5;
					}
					break;
				case 448:
					{
					alt34=6;
					}
					break;
				case 454:
					{
					alt34=7;
					}
					break;
				case 405:
					{
					alt34=8;
					}
					break;
				case 333:
					{
					alt34=9;
					}
					break;
				case 356:
					{
					alt34=10;
					}
					break;
				case 358:
					{
					alt34=11;
					}
					break;
				case 438:
					{
					alt34=12;
					}
					break;
				case 399:
					{
					alt34=13;
					}
					break;
				case 420:
					{
					alt34=14;
					}
					break;
				case 367:
					{
					alt34=15;
					}
					break;
				}
				switch (alt34) {
				case 1 :
					// CIL.g:552:42: 'static'
					{
					string_literal369=(Token)match(input,455,FOLLOW_455_in_fieldAttr11711); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal369_tree = (CommonTree)adaptor.create(string_literal369);
					adaptor.addChild(root_0, string_literal369_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:552:53: 'public'
					{
					string_literal370=(Token)match(input,440,FOLLOW_440_in_fieldAttr11715); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal370_tree = (CommonTree)adaptor.create(string_literal370);
					adaptor.addChild(root_0, string_literal370_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:552:64: 'private'
					{
					string_literal371=(Token)match(input,437,FOLLOW_437_in_fieldAttr11719); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal371_tree = (CommonTree)adaptor.create(string_literal371);
					adaptor.addChild(root_0, string_literal371_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:552:76: 'family'
					{
					string_literal372=(Token)match(input,357,FOLLOW_357_in_fieldAttr11723); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal372_tree = (CommonTree)adaptor.create(string_literal372);
					adaptor.addChild(root_0, string_literal372_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:552:87: 'initonly'
					{
					string_literal373=(Token)match(input,385,FOLLOW_385_in_fieldAttr11727); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal373_tree = (CommonTree)adaptor.create(string_literal373);
					adaptor.addChild(root_0, string_literal373_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:552:100: 'rtspecialname'
					{
					string_literal374=(Token)match(input,448,FOLLOW_448_in_fieldAttr11731); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal374_tree = (CommonTree)adaptor.create(string_literal374);
					adaptor.addChild(root_0, string_literal374_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:552:124: 'specialname'
					{
					string_literal375=(Token)match(input,454,FOLLOW_454_in_fieldAttr11738); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal375_tree = (CommonTree)adaptor.create(string_literal375);
					adaptor.addChild(root_0, string_literal375_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:557:62: 'marshal' '(' nativeType ')'
					{
					string_literal376=(Token)match(input,405,FOLLOW_405_in_fieldAttr11793); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal376_tree = (CommonTree)adaptor.create(string_literal376);
					adaptor.addChild(root_0, string_literal376_tree);
					}

					char_literal377=(Token)match(input,258,FOLLOW_258_in_fieldAttr11795); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal377_tree = (CommonTree)adaptor.create(char_literal377);
					adaptor.addChild(root_0, char_literal377_tree);
					}

					pushFollow(FOLLOW_nativeType_in_fieldAttr11797);
					nativeType378=nativeType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, nativeType378.getTree());

					char_literal379=(Token)match(input,259,FOLLOW_259_in_fieldAttr11799); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal379_tree = (CommonTree)adaptor.create(char_literal379);
					adaptor.addChild(root_0, char_literal379_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:557:93: 'assembly'
					{
					string_literal380=(Token)match(input,333,FOLLOW_333_in_fieldAttr11803); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal380_tree = (CommonTree)adaptor.create(string_literal380);
					adaptor.addChild(root_0, string_literal380_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:557:106: 'famandassem'
					{
					string_literal381=(Token)match(input,356,FOLLOW_356_in_fieldAttr11807); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal381_tree = (CommonTree)adaptor.create(string_literal381);
					adaptor.addChild(root_0, string_literal381_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:557:122: 'famorassem'
					{
					string_literal382=(Token)match(input,358,FOLLOW_358_in_fieldAttr11811); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal382_tree = (CommonTree)adaptor.create(string_literal382);
					adaptor.addChild(root_0, string_literal382_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:557:137: 'privatescope'
					{
					string_literal383=(Token)match(input,438,FOLLOW_438_in_fieldAttr11815); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal383_tree = (CommonTree)adaptor.create(string_literal383);
					adaptor.addChild(root_0, string_literal383_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:557:154: 'literal'
					{
					string_literal384=(Token)match(input,399,FOLLOW_399_in_fieldAttr11819); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal384_tree = (CommonTree)adaptor.create(string_literal384);
					adaptor.addChild(root_0, string_literal384_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:557:166: 'notserialized'
					{
					string_literal385=(Token)match(input,420,FOLLOW_420_in_fieldAttr11823); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal385_tree = (CommonTree)adaptor.create(string_literal385);
					adaptor.addChild(root_0, string_literal385_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:557:184: 'flags' '(' int32 ')'
					{
					string_literal386=(Token)match(input,367,FOLLOW_367_in_fieldAttr11827); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal386_tree = (CommonTree)adaptor.create(string_literal386);
					adaptor.addChild(root_0, string_literal386_tree);
					}

					char_literal387=(Token)match(input,258,FOLLOW_258_in_fieldAttr11829); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal387_tree = (CommonTree)adaptor.create(char_literal387);
					adaptor.addChild(root_0, char_literal387_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldAttr11831);
					int32388=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32388.getTree());

					char_literal389=(Token)match(input,259,FOLLOW_259_in_fieldAttr11833); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal389_tree = (CommonTree)adaptor.create(char_literal389);
					adaptor.addChild(root_0, char_literal389_tree);
					}

					}
					break;

				default :
					break loop34;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fieldAttr"


	public static class atOpt_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "atOpt"
	// CIL.g:560:1: atOpt : (| 'at' id );
	public final CILParser.atOpt_return atOpt() throws RecognitionException {
		CILParser.atOpt_return retval = new CILParser.atOpt_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal390=null;
		ParserRuleReturnScope id391 =null;

		CommonTree string_literal390_tree=null;

		try {
			// CIL.g:560:25: (| 'at' id )
			int alt35=2;
			int LA35_0 = input.LA(1);
			if ( (LA35_0==EOF||(LA35_0 >= ADD && LA35_0 <= BLE_UN_S)||(LA35_0 >= BLT && LA35_0 <= BRFALSE_S)||(LA35_0 >= BRTRUE && LA35_0 <= BRTRUE_S)||LA35_0==BR_S||(LA35_0 >= CALL && LA35_0 <= CALLI)||LA35_0==CALLVIRT||LA35_0==CASTCLASS||LA35_0==CEQ||(LA35_0 >= CGT && LA35_0 <= CGT_UN)||LA35_0==CKFINITE||(LA35_0 >= CLT && LA35_0 <= CLT_UN)||(LA35_0 >= CONV_I && LA35_0 <= CPOBJ)||(LA35_0 >= DIV && LA35_0 <= DIV_UN)||(LA35_0 >= DUP && LA35_0 <= ENDFINALLY)||(LA35_0 >= ID && LA35_0 <= INITOBJ)||(LA35_0 >= ISINST && LA35_0 <= LDELEM_U4)||(LA35_0 >= LDFLD && LA35_0 <= LDIND_U4)||(LA35_0 >= LDLEN && LA35_0 <= LEAVE_S)||(LA35_0 >= LOCALLOC && LA35_0 <= POP)||(LA35_0 >= REFANYTYPE && LA35_0 <= REM_UN)||(LA35_0 >= RET && LA35_0 <= VOLATILE_)||LA35_0==XOR||LA35_0==266||(LA35_0 >= 269 && LA35_0 <= 270)||(LA35_0 >= 272 && LA35_0 <= 279)||(LA35_0 >= 283 && LA35_0 <= 285)||(LA35_0 >= 287 && LA35_0 <= 293)||(LA35_0 >= 296 && LA35_0 <= 300)||(LA35_0 >= 305 && LA35_0 <= 307)||(LA35_0 >= 309 && LA35_0 <= 311)||(LA35_0 >= 313 && LA35_0 <= 316)||LA35_0==321||LA35_0==430||(LA35_0 >= 494 && LA35_0 <= 495)) ) {
				alt35=1;
			}
			else if ( (LA35_0==335) ) {
				alt35=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 35, 0, input);
				throw nvae;
			}

			switch (alt35) {
				case 1 :
					// CIL.g:561:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:561:27: 'at' id
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal390=(Token)match(input,335,FOLLOW_335_in_atOpt11917); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal390_tree = (CommonTree)adaptor.create(string_literal390);
					adaptor.addChild(root_0, string_literal390_tree);
					}

					pushFollow(FOLLOW_id_in_atOpt11919);
					id391=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id391.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "atOpt"


	public static class initOpt_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "initOpt"
	// CIL.g:564:1: initOpt : (| '=' fieldInit );
	public final CILParser.initOpt_return initOpt() throws RecognitionException {
		CILParser.initOpt_return retval = new CILParser.initOpt_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal392=null;
		ParserRuleReturnScope fieldInit393 =null;

		CommonTree char_literal392_tree=null;

		try {
			// CIL.g:564:25: (| '=' fieldInit )
			int alt36=2;
			int LA36_0 = input.LA(1);
			if ( (LA36_0==EOF||(LA36_0 >= ADD && LA36_0 <= BLE_UN_S)||(LA36_0 >= BLT && LA36_0 <= BRFALSE_S)||(LA36_0 >= BRTRUE && LA36_0 <= BRTRUE_S)||LA36_0==BR_S||(LA36_0 >= CALL && LA36_0 <= CALLI)||LA36_0==CALLVIRT||LA36_0==CASTCLASS||LA36_0==CEQ||(LA36_0 >= CGT && LA36_0 <= CGT_UN)||LA36_0==CKFINITE||(LA36_0 >= CLT && LA36_0 <= CLT_UN)||(LA36_0 >= CONV_I && LA36_0 <= CPOBJ)||(LA36_0 >= DIV && LA36_0 <= DIV_UN)||(LA36_0 >= DUP && LA36_0 <= ENDFINALLY)||(LA36_0 >= ID && LA36_0 <= INITOBJ)||(LA36_0 >= ISINST && LA36_0 <= LDELEM_U4)||(LA36_0 >= LDFLD && LA36_0 <= LDIND_U4)||(LA36_0 >= LDLEN && LA36_0 <= LEAVE_S)||(LA36_0 >= LOCALLOC && LA36_0 <= POP)||(LA36_0 >= REFANYTYPE && LA36_0 <= REM_UN)||(LA36_0 >= RET && LA36_0 <= VOLATILE_)||LA36_0==XOR||LA36_0==266||(LA36_0 >= 269 && LA36_0 <= 270)||(LA36_0 >= 272 && LA36_0 <= 279)||(LA36_0 >= 283 && LA36_0 <= 285)||(LA36_0 >= 287 && LA36_0 <= 293)||(LA36_0 >= 296 && LA36_0 <= 300)||(LA36_0 >= 305 && LA36_0 <= 307)||(LA36_0 >= 309 && LA36_0 <= 311)||(LA36_0 >= 313 && LA36_0 <= 316)||LA36_0==430||(LA36_0 >= 494 && LA36_0 <= 495)) ) {
				alt36=1;
			}
			else if ( (LA36_0==321) ) {
				alt36=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 36, 0, input);
				throw nvae;
			}

			switch (alt36) {
				case 1 :
					// CIL.g:565:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:565:27: '=' fieldInit
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal392=(Token)match(input,321,FOLLOW_321_in_initOpt11998); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal392_tree = (CommonTree)adaptor.create(char_literal392);
					adaptor.addChild(root_0, char_literal392_tree);
					}

					pushFollow(FOLLOW_fieldInit_in_initOpt12000);
					fieldInit393=fieldInit();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fieldInit393.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "initOpt"


	public static class repeatOpt_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "repeatOpt"
	// CIL.g:568:1: repeatOpt : (| '[' int32 ']' );
	public final CILParser.repeatOpt_return repeatOpt() throws RecognitionException {
		CILParser.repeatOpt_return retval = new CILParser.repeatOpt_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal394=null;
		Token char_literal396=null;
		ParserRuleReturnScope int32395 =null;

		CommonTree char_literal394_tree=null;
		CommonTree char_literal396_tree=null;

		try {
			// CIL.g:568:25: (| '[' int32 ']' )
			int alt37=2;
			int LA37_0 = input.LA(1);
			if ( (LA37_0==CHAR||LA37_0==CLASS||LA37_0==256||LA37_0==264||LA37_0==310||LA37_0==333||LA37_0==340||(LA37_0 >= 356 && LA37_0 <= 358)||LA37_0==367||(LA37_0 >= 369 && LA37_0 <= 370)||LA37_0==385||(LA37_0 >= 388 && LA37_0 <= 391)||LA37_0==399||LA37_0==405||LA37_0==407||LA37_0==410||LA37_0==420||LA37_0==423||(LA37_0 >= 437 && LA37_0 <= 438)||LA37_0==440||LA37_0==448||(LA37_0 >= 454 && LA37_0 <= 455)||LA37_0==462||LA37_0==473||(LA37_0 >= 475 && LA37_0 <= 478)||LA37_0==482||(LA37_0 >= 484 && LA37_0 <= 485)||LA37_0==490) ) {
				alt37=1;
			}
			else if ( (LA37_0==323) ) {
				alt37=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 37, 0, input);
				throw nvae;
			}

			switch (alt37) {
				case 1 :
					// CIL.g:569:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:569:27: '[' int32 ']'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal394=(Token)match(input,323,FOLLOW_323_in_repeatOpt12101); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal394_tree = (CommonTree)adaptor.create(char_literal394);
					adaptor.addChild(root_0, char_literal394_tree);
					}

					pushFollow(FOLLOW_int32_in_repeatOpt12103);
					int32395=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32395.getTree());

					char_literal396=(Token)match(input,324,FOLLOW_324_in_repeatOpt12105); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal396_tree = (CommonTree)adaptor.create(char_literal396);
					adaptor.addChild(root_0, char_literal396_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "repeatOpt"


	public static class methodRef_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "methodRef"
	// CIL.g:573:1: methodRef : ( callConv type typeSpec '::' methodName tyArgs0 '(' sigArgs0 ')' | callConv type typeSpec '::' methodName genArityNotEmpty '(' sigArgs0 ')' | callConv type methodName tyArgs0 '(' sigArgs0 ')' | callConv type methodName genArityNotEmpty '(' sigArgs0 ')' | mdtoken | typedef_m | typedef_mr );
	public final CILParser.methodRef_return methodRef() throws RecognitionException {
		CILParser.methodRef_return retval = new CILParser.methodRef_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal400=null;
		Token char_literal403=null;
		Token char_literal405=null;
		Token string_literal409=null;
		Token char_literal412=null;
		Token char_literal414=null;
		Token char_literal419=null;
		Token char_literal421=null;
		Token char_literal426=null;
		Token char_literal428=null;
		ParserRuleReturnScope callConv397 =null;
		ParserRuleReturnScope type398 =null;
		ParserRuleReturnScope typeSpec399 =null;
		ParserRuleReturnScope methodName401 =null;
		ParserRuleReturnScope tyArgs0402 =null;
		ParserRuleReturnScope sigArgs0404 =null;
		ParserRuleReturnScope callConv406 =null;
		ParserRuleReturnScope type407 =null;
		ParserRuleReturnScope typeSpec408 =null;
		ParserRuleReturnScope methodName410 =null;
		ParserRuleReturnScope genArityNotEmpty411 =null;
		ParserRuleReturnScope sigArgs0413 =null;
		ParserRuleReturnScope callConv415 =null;
		ParserRuleReturnScope type416 =null;
		ParserRuleReturnScope methodName417 =null;
		ParserRuleReturnScope tyArgs0418 =null;
		ParserRuleReturnScope sigArgs0420 =null;
		ParserRuleReturnScope callConv422 =null;
		ParserRuleReturnScope type423 =null;
		ParserRuleReturnScope methodName424 =null;
		ParserRuleReturnScope genArityNotEmpty425 =null;
		ParserRuleReturnScope sigArgs0427 =null;
		ParserRuleReturnScope mdtoken429 =null;
		ParserRuleReturnScope typedef_m430 =null;
		ParserRuleReturnScope typedef_mr431 =null;

		CommonTree string_literal400_tree=null;
		CommonTree char_literal403_tree=null;
		CommonTree char_literal405_tree=null;
		CommonTree string_literal409_tree=null;
		CommonTree char_literal412_tree=null;
		CommonTree char_literal414_tree=null;
		CommonTree char_literal419_tree=null;
		CommonTree char_literal421_tree=null;
		CommonTree char_literal426_tree=null;
		CommonTree char_literal428_tree=null;

		try {
			// CIL.g:573:25: ( callConv type typeSpec '::' methodName tyArgs0 '(' sigArgs0 ')' | callConv type typeSpec '::' methodName genArityNotEmpty '(' sigArgs0 ')' | callConv type methodName tyArgs0 '(' sigArgs0 ')' | callConv type methodName genArityNotEmpty '(' sigArgs0 ')' | mdtoken | typedef_m | typedef_mr )
			int alt38=7;
			switch ( input.LA(1) ) {
			case 386:
				{
				int LA38_1 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 352:
				{
				int LA38_2 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CLASS:
				{
				int LA38_3 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 423:
				{
				int LA38_4 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 484:
				{
				int LA38_5 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 5, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 485:
				{
				int LA38_6 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 407:
				{
				int LA38_7 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 7, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 256:
				{
				int LA38_8 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 473:
				{
				int LA38_9 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 9, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 490:
				{
				int LA38_10 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 10, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 410:
				{
				int LA38_11 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 11, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CHAR:
				{
				int LA38_12 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 12, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 462:
				{
				int LA38_13 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 13, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 340:
				{
				int LA38_14 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 14, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 391:
				{
				int LA38_15 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 15, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 388:
				{
				int LA38_16 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 16, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 389:
				{
				int LA38_17 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 17, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 390:
				{
				int LA38_18 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 18, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 369:
				{
				int LA38_19 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 19, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 370:
				{
				int LA38_20 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 20, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 482:
				{
				int LA38_21 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 21, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 478:
				{
				int LA38_22 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 22, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 475:
				{
				int LA38_23 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 23, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 476:
				{
				int LA38_24 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 24, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 477:
				{
				int LA38_25 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 25, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 310:
				{
				int LA38_26 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}
				else if ( (synpred142_CIL()) ) {
					alt38=6;
				}
				else if ( (true) ) {
					alt38=7;
				}

				}
				break;
			case 264:
				{
				int LA38_27 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 27, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 347:
				{
				int LA38_28 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 28, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 486:
				{
				int LA38_29 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 29, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 480:
				{
				int LA38_30 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 30, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 341:
				{
				int LA38_31 = input.LA(2);
				if ( (synpred137_CIL()) ) {
					alt38=1;
				}
				else if ( (synpred138_CIL()) ) {
					alt38=2;
				}
				else if ( (synpred139_CIL()) ) {
					alt38=3;
				}
				else if ( (synpred140_CIL()) ) {
					alt38=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 38, 31, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 406:
				{
				alt38=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 38, 0, input);
				throw nvae;
			}
			switch (alt38) {
				case 1 :
					// CIL.g:573:27: callConv type typeSpec '::' methodName tyArgs0 '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_callConv_in_methodRef12179);
					callConv397=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv397.getTree());

					pushFollow(FOLLOW_type_in_methodRef12181);
					type398=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type398.getTree());

					pushFollow(FOLLOW_typeSpec_in_methodRef12183);
					typeSpec399=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec399.getTree());

					string_literal400=(Token)match(input,319,FOLLOW_319_in_methodRef12185); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal400_tree = (CommonTree)adaptor.create(string_literal400);
					adaptor.addChild(root_0, string_literal400_tree);
					}

					pushFollow(FOLLOW_methodName_in_methodRef12187);
					methodName401=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName401.getTree());

					pushFollow(FOLLOW_tyArgs0_in_methodRef12189);
					tyArgs0402=tyArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tyArgs0402.getTree());

					char_literal403=(Token)match(input,258,FOLLOW_258_in_methodRef12191); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal403_tree = (CommonTree)adaptor.create(char_literal403);
					adaptor.addChild(root_0, char_literal403_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_methodRef12193);
					sigArgs0404=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0404.getTree());

					char_literal405=(Token)match(input,259,FOLLOW_259_in_methodRef12195); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal405_tree = (CommonTree)adaptor.create(char_literal405);
					adaptor.addChild(root_0, char_literal405_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:574:27: callConv type typeSpec '::' methodName genArityNotEmpty '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_callConv_in_methodRef12224);
					callConv406=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv406.getTree());

					pushFollow(FOLLOW_type_in_methodRef12226);
					type407=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type407.getTree());

					pushFollow(FOLLOW_typeSpec_in_methodRef12228);
					typeSpec408=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec408.getTree());

					string_literal409=(Token)match(input,319,FOLLOW_319_in_methodRef12230); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal409_tree = (CommonTree)adaptor.create(string_literal409);
					adaptor.addChild(root_0, string_literal409_tree);
					}

					pushFollow(FOLLOW_methodName_in_methodRef12232);
					methodName410=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName410.getTree());

					pushFollow(FOLLOW_genArityNotEmpty_in_methodRef12234);
					genArityNotEmpty411=genArityNotEmpty();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, genArityNotEmpty411.getTree());

					char_literal412=(Token)match(input,258,FOLLOW_258_in_methodRef12236); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal412_tree = (CommonTree)adaptor.create(char_literal412);
					adaptor.addChild(root_0, char_literal412_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_methodRef12238);
					sigArgs0413=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0413.getTree());

					char_literal414=(Token)match(input,259,FOLLOW_259_in_methodRef12240); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal414_tree = (CommonTree)adaptor.create(char_literal414);
					adaptor.addChild(root_0, char_literal414_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:575:27: callConv type methodName tyArgs0 '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_callConv_in_methodRef12269);
					callConv415=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv415.getTree());

					pushFollow(FOLLOW_type_in_methodRef12271);
					type416=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type416.getTree());

					pushFollow(FOLLOW_methodName_in_methodRef12273);
					methodName417=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName417.getTree());

					pushFollow(FOLLOW_tyArgs0_in_methodRef12275);
					tyArgs0418=tyArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tyArgs0418.getTree());

					char_literal419=(Token)match(input,258,FOLLOW_258_in_methodRef12277); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal419_tree = (CommonTree)adaptor.create(char_literal419);
					adaptor.addChild(root_0, char_literal419_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_methodRef12279);
					sigArgs0420=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0420.getTree());

					char_literal421=(Token)match(input,259,FOLLOW_259_in_methodRef12281); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal421_tree = (CommonTree)adaptor.create(char_literal421);
					adaptor.addChild(root_0, char_literal421_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:576:27: callConv type methodName genArityNotEmpty '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_callConv_in_methodRef12310);
					callConv422=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv422.getTree());

					pushFollow(FOLLOW_type_in_methodRef12312);
					type423=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type423.getTree());

					pushFollow(FOLLOW_methodName_in_methodRef12314);
					methodName424=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName424.getTree());

					pushFollow(FOLLOW_genArityNotEmpty_in_methodRef12316);
					genArityNotEmpty425=genArityNotEmpty();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, genArityNotEmpty425.getTree());

					char_literal426=(Token)match(input,258,FOLLOW_258_in_methodRef12318); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal426_tree = (CommonTree)adaptor.create(char_literal426);
					adaptor.addChild(root_0, char_literal426_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_methodRef12320);
					sigArgs0427=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0427.getTree());

					char_literal428=(Token)match(input,259,FOLLOW_259_in_methodRef12322); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal428_tree = (CommonTree)adaptor.create(char_literal428);
					adaptor.addChild(root_0, char_literal428_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:577:27: mdtoken
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_mdtoken_in_methodRef12351);
					mdtoken429=mdtoken();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, mdtoken429.getTree());

					}
					break;
				case 6 :
					// CIL.g:578:27: typedef_m
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_m_in_methodRef12380);
					typedef_m430=typedef_m();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_m430.getTree());

					}
					break;
				case 7 :
					// CIL.g:579:27: typedef_mr
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_mr_in_methodRef12470);
					typedef_mr431=typedef_mr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_mr431.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "methodRef"


	public static class callConv_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "callConv"
	// CIL.g:582:1: callConv : ( 'instance' callConv | 'explicit' callConv | callKind | 'callconv' '(' int32 ')' );
	public final CILParser.callConv_return callConv() throws RecognitionException {
		CILParser.callConv_return retval = new CILParser.callConv_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal432=null;
		Token string_literal434=null;
		Token string_literal437=null;
		Token char_literal438=null;
		Token char_literal440=null;
		ParserRuleReturnScope callConv433 =null;
		ParserRuleReturnScope callConv435 =null;
		ParserRuleReturnScope callKind436 =null;
		ParserRuleReturnScope int32439 =null;

		CommonTree string_literal432_tree=null;
		CommonTree string_literal434_tree=null;
		CommonTree string_literal437_tree=null;
		CommonTree char_literal438_tree=null;
		CommonTree char_literal440_tree=null;

		try {
			// CIL.g:582:25: ( 'instance' callConv | 'explicit' callConv | callKind | 'callconv' '(' int32 ')' )
			int alt39=4;
			switch ( input.LA(1) ) {
			case 386:
				{
				alt39=1;
				}
				break;
			case 352:
				{
				alt39=2;
				}
				break;
			case EOF:
			case CHAR:
			case CLASS:
			case 256:
			case 264:
			case 310:
			case 323:
			case 340:
			case 347:
			case 369:
			case 370:
			case 388:
			case 389:
			case 390:
			case 391:
			case 407:
			case 410:
			case 423:
			case 462:
			case 473:
			case 475:
			case 476:
			case 477:
			case 478:
			case 480:
			case 482:
			case 484:
			case 485:
			case 486:
			case 490:
				{
				alt39=3;
				}
				break;
			case 341:
				{
				alt39=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 39, 0, input);
				throw nvae;
			}
			switch (alt39) {
				case 1 :
					// CIL.g:582:27: 'instance' callConv
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal432=(Token)match(input,386,FOLLOW_386_in_callConv12604); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal432_tree = (CommonTree)adaptor.create(string_literal432);
					adaptor.addChild(root_0, string_literal432_tree);
					}

					pushFollow(FOLLOW_callConv_in_callConv12606);
					callConv433=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv433.getTree());

					}
					break;
				case 2 :
					// CIL.g:583:27: 'explicit' callConv
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal434=(Token)match(input,352,FOLLOW_352_in_callConv12635); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal434_tree = (CommonTree)adaptor.create(string_literal434);
					adaptor.addChild(root_0, string_literal434_tree);
					}

					pushFollow(FOLLOW_callConv_in_callConv12637);
					callConv435=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv435.getTree());

					}
					break;
				case 3 :
					// CIL.g:584:27: callKind
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_callKind_in_callConv12666);
					callKind436=callKind();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callKind436.getTree());

					}
					break;
				case 4 :
					// CIL.g:585:27: 'callconv' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal437=(Token)match(input,341,FOLLOW_341_in_callConv12695); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal437_tree = (CommonTree)adaptor.create(string_literal437);
					adaptor.addChild(root_0, string_literal437_tree);
					}

					char_literal438=(Token)match(input,258,FOLLOW_258_in_callConv12697); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal438_tree = (CommonTree)adaptor.create(char_literal438);
					adaptor.addChild(root_0, char_literal438_tree);
					}

					pushFollow(FOLLOW_int32_in_callConv12699);
					int32439=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32439.getTree());

					char_literal440=(Token)match(input,259,FOLLOW_259_in_callConv12701); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal440_tree = (CommonTree)adaptor.create(char_literal440);
					adaptor.addChild(root_0, char_literal440_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "callConv"


	public static class callKind_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "callKind"
	// CIL.g:588:1: callKind : (| 'default' | 'vararg' | 'unmanaged' 'cdecl' | 'unmanaged' 'stdcall' | 'unmanaged' 'thiscall' | 'unmanaged' 'fastcall' );
	public final CILParser.callKind_return callKind() throws RecognitionException {
		CILParser.callKind_return retval = new CILParser.callKind_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal441=null;
		Token string_literal442=null;
		Token string_literal443=null;
		Token string_literal444=null;
		Token string_literal445=null;
		Token string_literal446=null;
		Token string_literal447=null;
		Token string_literal448=null;
		Token string_literal449=null;
		Token string_literal450=null;

		CommonTree string_literal441_tree=null;
		CommonTree string_literal442_tree=null;
		CommonTree string_literal443_tree=null;
		CommonTree string_literal444_tree=null;
		CommonTree string_literal445_tree=null;
		CommonTree string_literal446_tree=null;
		CommonTree string_literal447_tree=null;
		CommonTree string_literal448_tree=null;
		CommonTree string_literal449_tree=null;
		CommonTree string_literal450_tree=null;

		try {
			// CIL.g:588:25: (| 'default' | 'vararg' | 'unmanaged' 'cdecl' | 'unmanaged' 'stdcall' | 'unmanaged' 'thiscall' | 'unmanaged' 'fastcall' )
			int alt40=7;
			switch ( input.LA(1) ) {
			case EOF:
			case CHAR:
			case CLASS:
			case 256:
			case 264:
			case 310:
			case 323:
			case 340:
			case 369:
			case 370:
			case 388:
			case 389:
			case 390:
			case 391:
			case 407:
			case 410:
			case 423:
			case 462:
			case 473:
			case 475:
			case 476:
			case 477:
			case 478:
			case 482:
			case 484:
			case 485:
			case 490:
				{
				alt40=1;
				}
				break;
			case 347:
				{
				alt40=2;
				}
				break;
			case 486:
				{
				alt40=3;
				}
				break;
			case 480:
				{
				switch ( input.LA(2) ) {
				case CDECL:
					{
					alt40=4;
					}
					break;
				case 456:
					{
					alt40=5;
					}
					break;
				case 468:
					{
					alt40=6;
					}
					break;
				case 359:
					{
					alt40=7;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 40, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 40, 0, input);
				throw nvae;
			}
			switch (alt40) {
				case 1 :
					// CIL.g:589:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:589:27: 'default'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal441=(Token)match(input,347,FOLLOW_347_in_callKind12779); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal441_tree = (CommonTree)adaptor.create(string_literal441);
					adaptor.addChild(root_0, string_literal441_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:590:27: 'vararg'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal442=(Token)match(input,486,FOLLOW_486_in_callKind12808); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal442_tree = (CommonTree)adaptor.create(string_literal442);
					adaptor.addChild(root_0, string_literal442_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:591:27: 'unmanaged' 'cdecl'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal443=(Token)match(input,480,FOLLOW_480_in_callKind12837); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal443_tree = (CommonTree)adaptor.create(string_literal443);
					adaptor.addChild(root_0, string_literal443_tree);
					}

					string_literal444=(Token)match(input,CDECL,FOLLOW_CDECL_in_callKind12839); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal444_tree = (CommonTree)adaptor.create(string_literal444);
					adaptor.addChild(root_0, string_literal444_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:592:27: 'unmanaged' 'stdcall'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal445=(Token)match(input,480,FOLLOW_480_in_callKind12868); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal445_tree = (CommonTree)adaptor.create(string_literal445);
					adaptor.addChild(root_0, string_literal445_tree);
					}

					string_literal446=(Token)match(input,456,FOLLOW_456_in_callKind12870); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal446_tree = (CommonTree)adaptor.create(string_literal446);
					adaptor.addChild(root_0, string_literal446_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:593:27: 'unmanaged' 'thiscall'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal447=(Token)match(input,480,FOLLOW_480_in_callKind12899); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal447_tree = (CommonTree)adaptor.create(string_literal447);
					adaptor.addChild(root_0, string_literal447_tree);
					}

					string_literal448=(Token)match(input,468,FOLLOW_468_in_callKind12901); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal448_tree = (CommonTree)adaptor.create(string_literal448);
					adaptor.addChild(root_0, string_literal448_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:594:27: 'unmanaged' 'fastcall'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal449=(Token)match(input,480,FOLLOW_480_in_callKind12930); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal449_tree = (CommonTree)adaptor.create(string_literal449);
					adaptor.addChild(root_0, string_literal449_tree);
					}

					string_literal450=(Token)match(input,359,FOLLOW_359_in_callKind12932); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal450_tree = (CommonTree)adaptor.create(string_literal450);
					adaptor.addChild(root_0, string_literal450_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "callKind"


	public static class mdtoken_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "mdtoken"
	// CIL.g:597:1: mdtoken : 'mdtoken' '(' int32 ')' ;
	public final CILParser.mdtoken_return mdtoken() throws RecognitionException {
		CILParser.mdtoken_return retval = new CILParser.mdtoken_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal451=null;
		Token char_literal452=null;
		Token char_literal454=null;
		ParserRuleReturnScope int32453 =null;

		CommonTree string_literal451_tree=null;
		CommonTree char_literal452_tree=null;
		CommonTree char_literal454_tree=null;

		try {
			// CIL.g:597:25: ( 'mdtoken' '(' int32 ')' )
			// CIL.g:597:27: 'mdtoken' '(' int32 ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal451=(Token)match(input,406,FOLLOW_406_in_mdtoken12982); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal451_tree = (CommonTree)adaptor.create(string_literal451);
			adaptor.addChild(root_0, string_literal451_tree);
			}

			char_literal452=(Token)match(input,258,FOLLOW_258_in_mdtoken12984); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal452_tree = (CommonTree)adaptor.create(char_literal452);
			adaptor.addChild(root_0, char_literal452_tree);
			}

			pushFollow(FOLLOW_int32_in_mdtoken12986);
			int32453=int32();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, int32453.getTree());

			char_literal454=(Token)match(input,259,FOLLOW_259_in_mdtoken12988); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal454_tree = (CommonTree)adaptor.create(char_literal454);
			adaptor.addChild(root_0, char_literal454_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "mdtoken"


	public static class memberRef_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "memberRef"
	// CIL.g:600:1: memberRef : ( methodSpec methodRef | 'field' type typeSpec '::' dottedName | 'field' type dottedName | 'field' typedef_f | 'field' typedef_mr | mdtoken );
	public final CILParser.memberRef_return memberRef() throws RecognitionException {
		CILParser.memberRef_return retval = new CILParser.memberRef_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal457=null;
		Token string_literal460=null;
		Token string_literal462=null;
		Token string_literal465=null;
		Token string_literal467=null;
		ParserRuleReturnScope methodSpec455 =null;
		ParserRuleReturnScope methodRef456 =null;
		ParserRuleReturnScope type458 =null;
		ParserRuleReturnScope typeSpec459 =null;
		ParserRuleReturnScope dottedName461 =null;
		ParserRuleReturnScope type463 =null;
		ParserRuleReturnScope dottedName464 =null;
		ParserRuleReturnScope typedef_f466 =null;
		ParserRuleReturnScope typedef_mr468 =null;
		ParserRuleReturnScope mdtoken469 =null;

		CommonTree string_literal457_tree=null;
		CommonTree string_literal460_tree=null;
		CommonTree string_literal462_tree=null;
		CommonTree string_literal465_tree=null;
		CommonTree string_literal467_tree=null;

		try {
			// CIL.g:600:25: ( methodSpec methodRef | 'field' type typeSpec '::' dottedName | 'field' type dottedName | 'field' typedef_f | 'field' typedef_mr | mdtoken )
			int alt41=6;
			switch ( input.LA(1) ) {
			case 407:
				{
				alt41=1;
				}
				break;
			case 361:
				{
				int LA41_2 = input.LA(2);
				if ( (synpred153_CIL()) ) {
					alt41=2;
				}
				else if ( (synpred154_CIL()) ) {
					alt41=3;
				}
				else if ( (synpred155_CIL()) ) {
					alt41=4;
				}
				else if ( (synpred156_CIL()) ) {
					alt41=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 41, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 406:
				{
				alt41=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 41, 0, input);
				throw nvae;
			}
			switch (alt41) {
				case 1 :
					// CIL.g:600:27: methodSpec methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_methodSpec_in_memberRef13036);
					methodSpec455=methodSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodSpec455.getTree());

					pushFollow(FOLLOW_methodRef_in_memberRef13038);
					methodRef456=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef456.getTree());

					}
					break;
				case 2 :
					// CIL.g:601:27: 'field' type typeSpec '::' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal457=(Token)match(input,361,FOLLOW_361_in_memberRef13067); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal457_tree = (CommonTree)adaptor.create(string_literal457);
					adaptor.addChild(root_0, string_literal457_tree);
					}

					pushFollow(FOLLOW_type_in_memberRef13069);
					type458=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type458.getTree());

					pushFollow(FOLLOW_typeSpec_in_memberRef13071);
					typeSpec459=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec459.getTree());

					string_literal460=(Token)match(input,319,FOLLOW_319_in_memberRef13073); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal460_tree = (CommonTree)adaptor.create(string_literal460);
					adaptor.addChild(root_0, string_literal460_tree);
					}

					pushFollow(FOLLOW_dottedName_in_memberRef13075);
					dottedName461=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName461.getTree());

					}
					break;
				case 3 :
					// CIL.g:602:27: 'field' type dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal462=(Token)match(input,361,FOLLOW_361_in_memberRef13104); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal462_tree = (CommonTree)adaptor.create(string_literal462);
					adaptor.addChild(root_0, string_literal462_tree);
					}

					pushFollow(FOLLOW_type_in_memberRef13106);
					type463=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type463.getTree());

					pushFollow(FOLLOW_dottedName_in_memberRef13108);
					dottedName464=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName464.getTree());

					}
					break;
				case 4 :
					// CIL.g:603:27: 'field' typedef_f
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal465=(Token)match(input,361,FOLLOW_361_in_memberRef13137); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal465_tree = (CommonTree)adaptor.create(string_literal465);
					adaptor.addChild(root_0, string_literal465_tree);
					}

					pushFollow(FOLLOW_typedef_f_in_memberRef13139);
					typedef_f466=typedef_f();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_f466.getTree());

					}
					break;
				case 5 :
					// CIL.g:604:27: 'field' typedef_mr
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal467=(Token)match(input,361,FOLLOW_361_in_memberRef13168); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal467_tree = (CommonTree)adaptor.create(string_literal467);
					adaptor.addChild(root_0, string_literal467_tree);
					}

					pushFollow(FOLLOW_typedef_mr_in_memberRef13170);
					typedef_mr468=typedef_mr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_mr468.getTree());

					}
					break;
				case 6 :
					// CIL.g:605:27: mdtoken
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_mdtoken_in_memberRef13199);
					mdtoken469=mdtoken();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, mdtoken469.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "memberRef"


	public static class eventHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "eventHead"
	// CIL.g:609:1: eventHead : ( '.event' eventAttr typeSpec dottedName | '.event' eventAttr dottedName );
	public final CILParser.eventHead_return eventHead() throws RecognitionException {
		CILParser.eventHead_return retval = new CILParser.eventHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal470=null;
		Token string_literal474=null;
		ParserRuleReturnScope eventAttr471 =null;
		ParserRuleReturnScope typeSpec472 =null;
		ParserRuleReturnScope dottedName473 =null;
		ParserRuleReturnScope eventAttr475 =null;
		ParserRuleReturnScope dottedName476 =null;

		CommonTree string_literal470_tree=null;
		CommonTree string_literal474_tree=null;

		try {
			// CIL.g:609:25: ( '.event' eventAttr typeSpec dottedName | '.event' eventAttr dottedName )
			int alt42=2;
			int LA42_0 = input.LA(1);
			if ( (LA42_0==276) ) {
				int LA42_1 = input.LA(2);
				if ( (synpred157_CIL()) ) {
					alt42=1;
				}
				else if ( (true) ) {
					alt42=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 42, 0, input);
				throw nvae;
			}

			switch (alt42) {
				case 1 :
					// CIL.g:609:27: '.event' eventAttr typeSpec dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal470=(Token)match(input,276,FOLLOW_276_in_eventHead13273); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal470_tree = (CommonTree)adaptor.create(string_literal470);
					adaptor.addChild(root_0, string_literal470_tree);
					}

					pushFollow(FOLLOW_eventAttr_in_eventHead13275);
					eventAttr471=eventAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, eventAttr471.getTree());

					pushFollow(FOLLOW_typeSpec_in_eventHead13277);
					typeSpec472=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec472.getTree());

					pushFollow(FOLLOW_dottedName_in_eventHead13279);
					dottedName473=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName473.getTree());

					}
					break;
				case 2 :
					// CIL.g:610:27: '.event' eventAttr dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal474=(Token)match(input,276,FOLLOW_276_in_eventHead13308); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal474_tree = (CommonTree)adaptor.create(string_literal474);
					adaptor.addChild(root_0, string_literal474_tree);
					}

					pushFollow(FOLLOW_eventAttr_in_eventHead13310);
					eventAttr475=eventAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, eventAttr475.getTree());

					pushFollow(FOLLOW_dottedName_in_eventHead13312);
					dottedName476=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName476.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "eventHead"


	public static class eventAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "eventAttr"
	// CIL.g:614:1: eventAttr : () ( 'rtspecialname' | 'specialname' )* ;
	public final CILParser.eventAttr_return eventAttr() throws RecognitionException {
		CILParser.eventAttr_return retval = new CILParser.eventAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set477=null;

		CommonTree set477_tree=null;

		try {
			// CIL.g:614:25: ( () ( 'rtspecialname' | 'specialname' )* )
			// CIL.g:614:27: () ( 'rtspecialname' | 'specialname' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:614:27: ()
			// CIL.g:614:39: 
			{
			}

			// CIL.g:614:41: ( 'rtspecialname' | 'specialname' )*
			loop43:
			while (true) {
				int alt43=2;
				int LA43_0 = input.LA(1);
				if ( (LA43_0==448||LA43_0==454) ) {
					alt43=1;
				}

				switch (alt43) {
				case 1 :
					// CIL.g:
					{
					set477=input.LT(1);
					if ( input.LA(1)==448||input.LA(1)==454 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set477));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

				default :
					break loop43;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "eventAttr"


	public static class eventDecls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "eventDecls"
	// CIL.g:617:1: eventDecls : () ( eventDecl )* ;
	public final CILParser.eventDecls_return eventDecls() throws RecognitionException {
		CILParser.eventDecls_return retval = new CILParser.eventDecls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope eventDecl478 =null;


		try {
			// CIL.g:617:25: ( () ( eventDecl )* )
			// CIL.g:617:27: () ( eventDecl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:617:27: ()
			// CIL.g:617:39: 
			{
			}

			// CIL.g:617:41: ( eventDecl )*
			loop44:
			while (true) {
				int alt44=2;
				int LA44_0 = input.LA(1);
				if ( (LA44_0==265||LA44_0==272||LA44_0==280||(LA44_0 >= 284 && LA44_0 <= 285)||LA44_0==295||LA44_0==303||LA44_0==310) ) {
					alt44=1;
				}

				switch (alt44) {
				case 1 :
					// CIL.g:617:42: eventDecl
					{
					pushFollow(FOLLOW_eventDecl_in_eventDecls13426);
					eventDecl478=eventDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, eventDecl478.getTree());

					}
					break;

				default :
					break loop44;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "eventDecls"


	public static class eventDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "eventDecl"
	// CIL.g:620:1: eventDecl : ( '.addon' methodRef | '.removeon' methodRef | '.fire' methodRef | '.other' methodRef | extSourceSpec | customAttrDecl | languageDecl );
	public final CILParser.eventDecl_return eventDecl() throws RecognitionException {
		CILParser.eventDecl_return retval = new CILParser.eventDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal479=null;
		Token string_literal481=null;
		Token string_literal483=null;
		Token string_literal485=null;
		ParserRuleReturnScope methodRef480 =null;
		ParserRuleReturnScope methodRef482 =null;
		ParserRuleReturnScope methodRef484 =null;
		ParserRuleReturnScope methodRef486 =null;
		ParserRuleReturnScope extSourceSpec487 =null;
		ParserRuleReturnScope customAttrDecl488 =null;
		ParserRuleReturnScope languageDecl489 =null;

		CommonTree string_literal479_tree=null;
		CommonTree string_literal481_tree=null;
		CommonTree string_literal483_tree=null;
		CommonTree string_literal485_tree=null;

		try {
			// CIL.g:620:25: ( '.addon' methodRef | '.removeon' methodRef | '.fire' methodRef | '.other' methodRef | extSourceSpec | customAttrDecl | languageDecl )
			int alt45=7;
			switch ( input.LA(1) ) {
			case 265:
				{
				alt45=1;
				}
				break;
			case 303:
				{
				alt45=2;
				}
				break;
			case 280:
				{
				alt45=3;
				}
				break;
			case 295:
				{
				alt45=4;
				}
				break;
			case 285:
				{
				alt45=5;
				}
				break;
			case 272:
			case 310:
				{
				alt45=6;
				}
				break;
			case 284:
				{
				alt45=7;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 45, 0, input);
				throw nvae;
			}
			switch (alt45) {
				case 1 :
					// CIL.g:620:27: '.addon' methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal479=(Token)match(input,265,FOLLOW_265_in_eventDecl13475); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal479_tree = (CommonTree)adaptor.create(string_literal479);
					adaptor.addChild(root_0, string_literal479_tree);
					}

					pushFollow(FOLLOW_methodRef_in_eventDecl13477);
					methodRef480=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef480.getTree());

					}
					break;
				case 2 :
					// CIL.g:621:27: '.removeon' methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal481=(Token)match(input,303,FOLLOW_303_in_eventDecl13506); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal481_tree = (CommonTree)adaptor.create(string_literal481);
					adaptor.addChild(root_0, string_literal481_tree);
					}

					pushFollow(FOLLOW_methodRef_in_eventDecl13508);
					methodRef482=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef482.getTree());

					}
					break;
				case 3 :
					// CIL.g:622:27: '.fire' methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal483=(Token)match(input,280,FOLLOW_280_in_eventDecl13537); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal483_tree = (CommonTree)adaptor.create(string_literal483);
					adaptor.addChild(root_0, string_literal483_tree);
					}

					pushFollow(FOLLOW_methodRef_in_eventDecl13539);
					methodRef484=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef484.getTree());

					}
					break;
				case 4 :
					// CIL.g:623:27: '.other' methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal485=(Token)match(input,295,FOLLOW_295_in_eventDecl13568); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal485_tree = (CommonTree)adaptor.create(string_literal485);
					adaptor.addChild(root_0, string_literal485_tree);
					}

					pushFollow(FOLLOW_methodRef_in_eventDecl13570);
					methodRef486=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef486.getTree());

					}
					break;
				case 5 :
					// CIL.g:624:27: extSourceSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_extSourceSpec_in_eventDecl13599);
					extSourceSpec487=extSourceSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, extSourceSpec487.getTree());

					}
					break;
				case 6 :
					// CIL.g:625:27: customAttrDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customAttrDecl_in_eventDecl13627);
					customAttrDecl488=customAttrDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customAttrDecl488.getTree());

					}
					break;
				case 7 :
					// CIL.g:626:27: languageDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_languageDecl_in_eventDecl13655);
					languageDecl489=languageDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, languageDecl489.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "eventDecl"


	public static class propHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "propHead"
	// CIL.g:630:1: propHead : '.property' propAttr callConv type dottedName '(' sigArgs0 ')' initOpt ;
	public final CILParser.propHead_return propHead() throws RecognitionException {
		CILParser.propHead_return retval = new CILParser.propHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal490=null;
		Token char_literal495=null;
		Token char_literal497=null;
		ParserRuleReturnScope propAttr491 =null;
		ParserRuleReturnScope callConv492 =null;
		ParserRuleReturnScope type493 =null;
		ParserRuleReturnScope dottedName494 =null;
		ParserRuleReturnScope sigArgs0496 =null;
		ParserRuleReturnScope initOpt498 =null;

		CommonTree string_literal490_tree=null;
		CommonTree char_literal495_tree=null;
		CommonTree char_literal497_tree=null;

		try {
			// CIL.g:630:25: ( '.property' propAttr callConv type dottedName '(' sigArgs0 ')' initOpt )
			// CIL.g:630:27: '.property' propAttr callConv type dottedName '(' sigArgs0 ')' initOpt
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal490=(Token)match(input,300,FOLLOW_300_in_propHead13730); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal490_tree = (CommonTree)adaptor.create(string_literal490);
			adaptor.addChild(root_0, string_literal490_tree);
			}

			pushFollow(FOLLOW_propAttr_in_propHead13732);
			propAttr491=propAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, propAttr491.getTree());

			pushFollow(FOLLOW_callConv_in_propHead13734);
			callConv492=callConv();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv492.getTree());

			pushFollow(FOLLOW_type_in_propHead13736);
			type493=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type493.getTree());

			pushFollow(FOLLOW_dottedName_in_propHead13738);
			dottedName494=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName494.getTree());

			char_literal495=(Token)match(input,258,FOLLOW_258_in_propHead13740); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal495_tree = (CommonTree)adaptor.create(char_literal495);
			adaptor.addChild(root_0, char_literal495_tree);
			}

			pushFollow(FOLLOW_sigArgs0_in_propHead13742);
			sigArgs0496=sigArgs0();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0496.getTree());

			char_literal497=(Token)match(input,259,FOLLOW_259_in_propHead13744); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal497_tree = (CommonTree)adaptor.create(char_literal497);
			adaptor.addChild(root_0, char_literal497_tree);
			}

			pushFollow(FOLLOW_initOpt_in_propHead13746);
			initOpt498=initOpt();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, initOpt498.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "propHead"


	public static class propAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "propAttr"
	// CIL.g:633:1: propAttr : () ( 'rtspecialname' | 'specialname' )* ;
	public final CILParser.propAttr_return propAttr() throws RecognitionException {
		CILParser.propAttr_return retval = new CILParser.propAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set499=null;

		CommonTree set499_tree=null;

		try {
			// CIL.g:633:25: ( () ( 'rtspecialname' | 'specialname' )* )
			// CIL.g:633:27: () ( 'rtspecialname' | 'specialname' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:633:27: ()
			// CIL.g:633:39: 
			{
			}

			// CIL.g:633:41: ( 'rtspecialname' | 'specialname' )*
			loop46:
			while (true) {
				int alt46=2;
				int LA46_0 = input.LA(1);
				if ( (LA46_0==448||LA46_0==454) ) {
					alt46=1;
				}

				switch (alt46) {
				case 1 :
					// CIL.g:
					{
					set499=input.LT(1);
					if ( input.LA(1)==448||input.LA(1)==454 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set499));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

				default :
					break loop46;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "propAttr"


	public static class propDecls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "propDecls"
	// CIL.g:636:1: propDecls : () ( propDecl )* ;
	public final CILParser.propDecls_return propDecls() throws RecognitionException {
		CILParser.propDecls_return retval = new CILParser.propDecls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope propDecl500 =null;


		try {
			// CIL.g:636:25: ( () ( propDecl )* )
			// CIL.g:636:27: () ( propDecl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:636:27: ()
			// CIL.g:636:39: 
			{
			}

			// CIL.g:636:41: ( propDecl )*
			loop47:
			while (true) {
				int alt47=2;
				int LA47_0 = input.LA(1);
				if ( (LA47_0==272||LA47_0==281||(LA47_0 >= 284 && LA47_0 <= 285)||LA47_0==295||LA47_0==304||LA47_0==310) ) {
					alt47=1;
				}

				switch (alt47) {
				case 1 :
					// CIL.g:636:42: propDecl
					{
					pushFollow(FOLLOW_propDecl_in_propDecls13861);
					propDecl500=propDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, propDecl500.getTree());

					}
					break;

				default :
					break loop47;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "propDecls"


	public static class propDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "propDecl"
	// CIL.g:640:1: propDecl : ( '.set' methodRef | '.get' methodRef | '.other' methodRef | customAttrDecl | extSourceSpec | languageDecl );
	public final CILParser.propDecl_return propDecl() throws RecognitionException {
		CILParser.propDecl_return retval = new CILParser.propDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal501=null;
		Token string_literal503=null;
		Token string_literal505=null;
		ParserRuleReturnScope methodRef502 =null;
		ParserRuleReturnScope methodRef504 =null;
		ParserRuleReturnScope methodRef506 =null;
		ParserRuleReturnScope customAttrDecl507 =null;
		ParserRuleReturnScope extSourceSpec508 =null;
		ParserRuleReturnScope languageDecl509 =null;

		CommonTree string_literal501_tree=null;
		CommonTree string_literal503_tree=null;
		CommonTree string_literal505_tree=null;

		try {
			// CIL.g:640:25: ( '.set' methodRef | '.get' methodRef | '.other' methodRef | customAttrDecl | extSourceSpec | languageDecl )
			int alt48=6;
			switch ( input.LA(1) ) {
			case 304:
				{
				alt48=1;
				}
				break;
			case 281:
				{
				alt48=2;
				}
				break;
			case 295:
				{
				alt48=3;
				}
				break;
			case 272:
			case 310:
				{
				alt48=4;
				}
				break;
			case 285:
				{
				alt48=5;
				}
				break;
			case 284:
				{
				alt48=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 48, 0, input);
				throw nvae;
			}
			switch (alt48) {
				case 1 :
					// CIL.g:640:27: '.set' methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal501=(Token)match(input,304,FOLLOW_304_in_propDecl13912); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal501_tree = (CommonTree)adaptor.create(string_literal501);
					adaptor.addChild(root_0, string_literal501_tree);
					}

					pushFollow(FOLLOW_methodRef_in_propDecl13914);
					methodRef502=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef502.getTree());

					}
					break;
				case 2 :
					// CIL.g:641:27: '.get' methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal503=(Token)match(input,281,FOLLOW_281_in_propDecl13943); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal503_tree = (CommonTree)adaptor.create(string_literal503);
					adaptor.addChild(root_0, string_literal503_tree);
					}

					pushFollow(FOLLOW_methodRef_in_propDecl13945);
					methodRef504=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef504.getTree());

					}
					break;
				case 3 :
					// CIL.g:642:27: '.other' methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal505=(Token)match(input,295,FOLLOW_295_in_propDecl13974); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal505_tree = (CommonTree)adaptor.create(string_literal505);
					adaptor.addChild(root_0, string_literal505_tree);
					}

					pushFollow(FOLLOW_methodRef_in_propDecl13976);
					methodRef506=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef506.getTree());

					}
					break;
				case 4 :
					// CIL.g:643:27: customAttrDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customAttrDecl_in_propDecl14005);
					customAttrDecl507=customAttrDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customAttrDecl507.getTree());

					}
					break;
				case 5 :
					// CIL.g:644:27: extSourceSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_extSourceSpec_in_propDecl14033);
					extSourceSpec508=extSourceSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, extSourceSpec508.getTree());

					}
					break;
				case 6 :
					// CIL.g:645:27: languageDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_languageDecl_in_propDecl14061);
					languageDecl509=languageDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, languageDecl509.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "propDecl"


	public static class methodHeadPart1_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "methodHeadPart1"
	// CIL.g:649:1: methodHeadPart1 : '.method' ;
	public final CILParser.methodHeadPart1_return methodHeadPart1() throws RecognitionException {
		CILParser.methodHeadPart1_return retval = new CILParser.methodHeadPart1_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal510=null;

		CommonTree string_literal510_tree=null;

		try {
			// CIL.g:649:25: ( '.method' )
			// CIL.g:649:27: '.method'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal510=(Token)match(input,289,FOLLOW_289_in_methodHeadPart114104); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal510_tree = (CommonTree)adaptor.create(string_literal510);
			adaptor.addChild(root_0, string_literal510_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "methodHeadPart1"


	public static class marshalClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "marshalClause"
	// CIL.g:652:1: marshalClause : (| 'marshal' '(' nativeType ')' );
	public final CILParser.marshalClause_return marshalClause() throws RecognitionException {
		CILParser.marshalClause_return retval = new CILParser.marshalClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal511=null;
		Token char_literal512=null;
		Token char_literal514=null;
		ParserRuleReturnScope nativeType513 =null;

		CommonTree string_literal511_tree=null;
		CommonTree char_literal512_tree=null;
		CommonTree char_literal514_tree=null;

		try {
			// CIL.g:652:25: (| 'marshal' '(' nativeType ')' )
			int alt49=2;
			int LA49_0 = input.LA(1);
			if ( (LA49_0==EOF||LA49_0==DOTTEDNAME||LA49_0==ID||LA49_0==SQSTRING||LA49_0==259||LA49_0==262||LA49_0==268||LA49_0==271) ) {
				alt49=1;
			}
			else if ( (LA49_0==405) ) {
				alt49=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 49, 0, input);
				throw nvae;
			}

			switch (alt49) {
				case 1 :
					// CIL.g:653:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:653:27: 'marshal' '(' nativeType ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal511=(Token)match(input,405,FOLLOW_405_in_marshalClause14201); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal511_tree = (CommonTree)adaptor.create(string_literal511);
					adaptor.addChild(root_0, string_literal511_tree);
					}

					char_literal512=(Token)match(input,258,FOLLOW_258_in_marshalClause14203); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal512_tree = (CommonTree)adaptor.create(char_literal512);
					adaptor.addChild(root_0, char_literal512_tree);
					}

					pushFollow(FOLLOW_nativeType_in_marshalClause14205);
					nativeType513=nativeType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, nativeType513.getTree());

					char_literal514=(Token)match(input,259,FOLLOW_259_in_marshalClause14207); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal514_tree = (CommonTree)adaptor.create(char_literal514);
					adaptor.addChild(root_0, char_literal514_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "marshalClause"


	public static class methodHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "methodHead"
	// CIL.g:656:1: methodHead : methodHeadPart1 methAttr callConv paramAttr type marshalClause methodName typarsClause '(' sigArgs0 ')' implAttr '{' ;
	public final CILParser.methodHead_return methodHead() throws RecognitionException {
		CILParser.methodHead_return retval = new CILParser.methodHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal523=null;
		Token char_literal525=null;
		Token char_literal527=null;
		ParserRuleReturnScope methodHeadPart1515 =null;
		ParserRuleReturnScope methAttr516 =null;
		ParserRuleReturnScope callConv517 =null;
		ParserRuleReturnScope paramAttr518 =null;
		ParserRuleReturnScope type519 =null;
		ParserRuleReturnScope marshalClause520 =null;
		ParserRuleReturnScope methodName521 =null;
		ParserRuleReturnScope typarsClause522 =null;
		ParserRuleReturnScope sigArgs0524 =null;
		ParserRuleReturnScope implAttr526 =null;

		CommonTree char_literal523_tree=null;
		CommonTree char_literal525_tree=null;
		CommonTree char_literal527_tree=null;

		try {
			// CIL.g:656:25: ( methodHeadPart1 methAttr callConv paramAttr type marshalClause methodName typarsClause '(' sigArgs0 ')' implAttr '{' )
			// CIL.g:656:27: methodHeadPart1 methAttr callConv paramAttr type marshalClause methodName typarsClause '(' sigArgs0 ')' implAttr '{'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_methodHeadPart1_in_methodHead14254);
			methodHeadPart1515=methodHeadPart1();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, methodHeadPart1515.getTree());

			pushFollow(FOLLOW_methAttr_in_methodHead14256);
			methAttr516=methAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, methAttr516.getTree());

			pushFollow(FOLLOW_callConv_in_methodHead14258);
			callConv517=callConv();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv517.getTree());

			pushFollow(FOLLOW_paramAttr_in_methodHead14260);
			paramAttr518=paramAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, paramAttr518.getTree());

			pushFollow(FOLLOW_type_in_methodHead14262);
			type519=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type519.getTree());

			pushFollow(FOLLOW_marshalClause_in_methodHead14264);
			marshalClause520=marshalClause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, marshalClause520.getTree());

			pushFollow(FOLLOW_methodName_in_methodHead14266);
			methodName521=methodName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName521.getTree());

			pushFollow(FOLLOW_typarsClause_in_methodHead14268);
			typarsClause522=typarsClause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, typarsClause522.getTree());

			char_literal523=(Token)match(input,258,FOLLOW_258_in_methodHead14269); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal523_tree = (CommonTree)adaptor.create(char_literal523);
			adaptor.addChild(root_0, char_literal523_tree);
			}

			pushFollow(FOLLOW_sigArgs0_in_methodHead14271);
			sigArgs0524=sigArgs0();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0524.getTree());

			char_literal525=(Token)match(input,259,FOLLOW_259_in_methodHead14273); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal525_tree = (CommonTree)adaptor.create(char_literal525);
			adaptor.addChild(root_0, char_literal525_tree);
			}

			pushFollow(FOLLOW_implAttr_in_methodHead14275);
			implAttr526=implAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, implAttr526.getTree());

			char_literal527=(Token)match(input,494,FOLLOW_494_in_methodHead14277); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal527_tree = (CommonTree)adaptor.create(char_literal527);
			adaptor.addChild(root_0, char_literal527_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "methodHead"


	public static class methAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "methAttr"
	// CIL.g:659:1: methAttr : () ( 'static' | 'public' | 'private' | 'family' | 'final' | 'specialname' | 'virtual' | 'strict' | 'abstract' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'hidebysig' | 'newslot' | 'rtspecialname' | 'unmanagedexp' | 'reqsecobj' | 'flags' '(' int32 ')' | 'pinvokeimpl' '(' compQstring 'as' compQstring pinvAttr ')' | 'pinvokeimpl' '(' compQstring pinvAttr ')' | 'pinvokeimpl' '(' pinvAttr ')' )* ;
	public final CILParser.methAttr_return methAttr() throws RecognitionException {
		CILParser.methAttr_return retval = new CILParser.methAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal528=null;
		Token string_literal529=null;
		Token string_literal530=null;
		Token string_literal531=null;
		Token string_literal532=null;
		Token string_literal533=null;
		Token string_literal534=null;
		Token string_literal535=null;
		Token string_literal536=null;
		Token string_literal537=null;
		Token string_literal538=null;
		Token string_literal539=null;
		Token string_literal540=null;
		Token string_literal541=null;
		Token string_literal542=null;
		Token string_literal543=null;
		Token string_literal544=null;
		Token string_literal545=null;
		Token string_literal546=null;
		Token char_literal547=null;
		Token char_literal549=null;
		Token string_literal550=null;
		Token char_literal551=null;
		Token string_literal553=null;
		Token char_literal556=null;
		Token string_literal557=null;
		Token char_literal558=null;
		Token char_literal561=null;
		Token string_literal562=null;
		Token char_literal563=null;
		Token char_literal565=null;
		ParserRuleReturnScope int32548 =null;
		ParserRuleReturnScope compQstring552 =null;
		ParserRuleReturnScope compQstring554 =null;
		ParserRuleReturnScope pinvAttr555 =null;
		ParserRuleReturnScope compQstring559 =null;
		ParserRuleReturnScope pinvAttr560 =null;
		ParserRuleReturnScope pinvAttr564 =null;

		CommonTree string_literal528_tree=null;
		CommonTree string_literal529_tree=null;
		CommonTree string_literal530_tree=null;
		CommonTree string_literal531_tree=null;
		CommonTree string_literal532_tree=null;
		CommonTree string_literal533_tree=null;
		CommonTree string_literal534_tree=null;
		CommonTree string_literal535_tree=null;
		CommonTree string_literal536_tree=null;
		CommonTree string_literal537_tree=null;
		CommonTree string_literal538_tree=null;
		CommonTree string_literal539_tree=null;
		CommonTree string_literal540_tree=null;
		CommonTree string_literal541_tree=null;
		CommonTree string_literal542_tree=null;
		CommonTree string_literal543_tree=null;
		CommonTree string_literal544_tree=null;
		CommonTree string_literal545_tree=null;
		CommonTree string_literal546_tree=null;
		CommonTree char_literal547_tree=null;
		CommonTree char_literal549_tree=null;
		CommonTree string_literal550_tree=null;
		CommonTree char_literal551_tree=null;
		CommonTree string_literal553_tree=null;
		CommonTree char_literal556_tree=null;
		CommonTree string_literal557_tree=null;
		CommonTree char_literal558_tree=null;
		CommonTree char_literal561_tree=null;
		CommonTree string_literal562_tree=null;
		CommonTree char_literal563_tree=null;
		CommonTree char_literal565_tree=null;

		try {
			// CIL.g:659:25: ( () ( 'static' | 'public' | 'private' | 'family' | 'final' | 'specialname' | 'virtual' | 'strict' | 'abstract' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'hidebysig' | 'newslot' | 'rtspecialname' | 'unmanagedexp' | 'reqsecobj' | 'flags' '(' int32 ')' | 'pinvokeimpl' '(' compQstring 'as' compQstring pinvAttr ')' | 'pinvokeimpl' '(' compQstring pinvAttr ')' | 'pinvokeimpl' '(' pinvAttr ')' )* )
			// CIL.g:659:27: () ( 'static' | 'public' | 'private' | 'family' | 'final' | 'specialname' | 'virtual' | 'strict' | 'abstract' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'hidebysig' | 'newslot' | 'rtspecialname' | 'unmanagedexp' | 'reqsecobj' | 'flags' '(' int32 ')' | 'pinvokeimpl' '(' compQstring 'as' compQstring pinvAttr ')' | 'pinvokeimpl' '(' compQstring pinvAttr ')' | 'pinvokeimpl' '(' pinvAttr ')' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:659:27: ()
			// CIL.g:659:39: 
			{
			}

			// CIL.g:659:41: ( 'static' | 'public' | 'private' | 'family' | 'final' | 'specialname' | 'virtual' | 'strict' | 'abstract' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'hidebysig' | 'newslot' | 'rtspecialname' | 'unmanagedexp' | 'reqsecobj' | 'flags' '(' int32 ')' | 'pinvokeimpl' '(' compQstring 'as' compQstring pinvAttr ')' | 'pinvokeimpl' '(' compQstring pinvAttr ')' | 'pinvokeimpl' '(' pinvAttr ')' )*
			loop50:
			while (true) {
				int alt50=23;
				alt50 = dfa50.predict(input);
				switch (alt50) {
				case 1 :
					// CIL.g:659:42: 'static'
					{
					string_literal528=(Token)match(input,455,FOLLOW_455_in_methAttr14331); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal528_tree = (CommonTree)adaptor.create(string_literal528);
					adaptor.addChild(root_0, string_literal528_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:659:53: 'public'
					{
					string_literal529=(Token)match(input,440,FOLLOW_440_in_methAttr14335); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal529_tree = (CommonTree)adaptor.create(string_literal529);
					adaptor.addChild(root_0, string_literal529_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:659:64: 'private'
					{
					string_literal530=(Token)match(input,437,FOLLOW_437_in_methAttr14339); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal530_tree = (CommonTree)adaptor.create(string_literal530);
					adaptor.addChild(root_0, string_literal530_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:659:76: 'family'
					{
					string_literal531=(Token)match(input,357,FOLLOW_357_in_methAttr14343); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal531_tree = (CommonTree)adaptor.create(string_literal531);
					adaptor.addChild(root_0, string_literal531_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:659:87: 'final'
					{
					string_literal532=(Token)match(input,364,FOLLOW_364_in_methAttr14347); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal532_tree = (CommonTree)adaptor.create(string_literal532);
					adaptor.addChild(root_0, string_literal532_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:659:97: 'specialname'
					{
					string_literal533=(Token)match(input,454,FOLLOW_454_in_methAttr14351); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal533_tree = (CommonTree)adaptor.create(string_literal533);
					adaptor.addChild(root_0, string_literal533_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:659:113: 'virtual'
					{
					string_literal534=(Token)match(input,489,FOLLOW_489_in_methAttr14355); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal534_tree = (CommonTree)adaptor.create(string_literal534);
					adaptor.addChild(root_0, string_literal534_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:659:125: 'strict'
					{
					string_literal535=(Token)match(input,461,FOLLOW_461_in_methAttr14359); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal535_tree = (CommonTree)adaptor.create(string_literal535);
					adaptor.addChild(root_0, string_literal535_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:659:136: 'abstract'
					{
					string_literal536=(Token)match(input,325,FOLLOW_325_in_methAttr14363); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal536_tree = (CommonTree)adaptor.create(string_literal536);
					adaptor.addChild(root_0, string_literal536_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:659:149: 'assembly'
					{
					string_literal537=(Token)match(input,333,FOLLOW_333_in_methAttr14367); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal537_tree = (CommonTree)adaptor.create(string_literal537);
					adaptor.addChild(root_0, string_literal537_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:659:162: 'famandassem'
					{
					string_literal538=(Token)match(input,356,FOLLOW_356_in_methAttr14371); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal538_tree = (CommonTree)adaptor.create(string_literal538);
					adaptor.addChild(root_0, string_literal538_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:659:178: 'famorassem'
					{
					string_literal539=(Token)match(input,358,FOLLOW_358_in_methAttr14375); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal539_tree = (CommonTree)adaptor.create(string_literal539);
					adaptor.addChild(root_0, string_literal539_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:659:193: 'privatescope'
					{
					string_literal540=(Token)match(input,438,FOLLOW_438_in_methAttr14379); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal540_tree = (CommonTree)adaptor.create(string_literal540);
					adaptor.addChild(root_0, string_literal540_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:659:210: 'hidebysig'
					{
					string_literal541=(Token)match(input,375,FOLLOW_375_in_methAttr14383); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal541_tree = (CommonTree)adaptor.create(string_literal541);
					adaptor.addChild(root_0, string_literal541_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:659:224: 'newslot'
					{
					string_literal542=(Token)match(input,412,FOLLOW_412_in_methAttr14387); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal542_tree = (CommonTree)adaptor.create(string_literal542);
					adaptor.addChild(root_0, string_literal542_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:659:236: 'rtspecialname'
					{
					string_literal543=(Token)match(input,448,FOLLOW_448_in_methAttr14391); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal543_tree = (CommonTree)adaptor.create(string_literal543);
					adaptor.addChild(root_0, string_literal543_tree);
					}

					}
					break;
				case 17 :
					// CIL.g:659:259: 'unmanagedexp'
					{
					string_literal544=(Token)match(input,481,FOLLOW_481_in_methAttr14397); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal544_tree = (CommonTree)adaptor.create(string_literal544);
					adaptor.addChild(root_0, string_literal544_tree);
					}

					}
					break;
				case 18 :
					// CIL.g:659:276: 'reqsecobj'
					{
					string_literal545=(Token)match(input,445,FOLLOW_445_in_methAttr14401); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal545_tree = (CommonTree)adaptor.create(string_literal545);
					adaptor.addChild(root_0, string_literal545_tree);
					}

					}
					break;
				case 19 :
					// CIL.g:659:290: 'flags' '(' int32 ')'
					{
					string_literal546=(Token)match(input,367,FOLLOW_367_in_methAttr14405); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal546_tree = (CommonTree)adaptor.create(string_literal546);
					adaptor.addChild(root_0, string_literal546_tree);
					}

					char_literal547=(Token)match(input,258,FOLLOW_258_in_methAttr14407); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal547_tree = (CommonTree)adaptor.create(char_literal547);
					adaptor.addChild(root_0, char_literal547_tree);
					}

					pushFollow(FOLLOW_int32_in_methAttr14409);
					int32548=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32548.getTree());

					char_literal549=(Token)match(input,259,FOLLOW_259_in_methAttr14411); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal549_tree = (CommonTree)adaptor.create(char_literal549);
					adaptor.addChild(root_0, char_literal549_tree);
					}

					}
					break;
				case 20 :
					// CIL.g:659:314: 'pinvokeimpl' '(' compQstring 'as' compQstring pinvAttr ')'
					{
					string_literal550=(Token)match(input,433,FOLLOW_433_in_methAttr14415); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal550_tree = (CommonTree)adaptor.create(string_literal550);
					adaptor.addChild(root_0, string_literal550_tree);
					}

					char_literal551=(Token)match(input,258,FOLLOW_258_in_methAttr14417); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal551_tree = (CommonTree)adaptor.create(char_literal551);
					adaptor.addChild(root_0, char_literal551_tree);
					}

					pushFollow(FOLLOW_compQstring_in_methAttr14419);
					compQstring552=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring552.getTree());

					string_literal553=(Token)match(input,332,FOLLOW_332_in_methAttr14421); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal553_tree = (CommonTree)adaptor.create(string_literal553);
					adaptor.addChild(root_0, string_literal553_tree);
					}

					pushFollow(FOLLOW_compQstring_in_methAttr14423);
					compQstring554=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring554.getTree());

					pushFollow(FOLLOW_pinvAttr_in_methAttr14425);
					pinvAttr555=pinvAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pinvAttr555.getTree());

					char_literal556=(Token)match(input,259,FOLLOW_259_in_methAttr14427); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal556_tree = (CommonTree)adaptor.create(char_literal556);
					adaptor.addChild(root_0, char_literal556_tree);
					}

					}
					break;
				case 21 :
					// CIL.g:659:376: 'pinvokeimpl' '(' compQstring pinvAttr ')'
					{
					string_literal557=(Token)match(input,433,FOLLOW_433_in_methAttr14431); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal557_tree = (CommonTree)adaptor.create(string_literal557);
					adaptor.addChild(root_0, string_literal557_tree);
					}

					char_literal558=(Token)match(input,258,FOLLOW_258_in_methAttr14433); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal558_tree = (CommonTree)adaptor.create(char_literal558);
					adaptor.addChild(root_0, char_literal558_tree);
					}

					pushFollow(FOLLOW_compQstring_in_methAttr14435);
					compQstring559=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring559.getTree());

					pushFollow(FOLLOW_pinvAttr_in_methAttr14438);
					pinvAttr560=pinvAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pinvAttr560.getTree());

					char_literal561=(Token)match(input,259,FOLLOW_259_in_methAttr14440); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal561_tree = (CommonTree)adaptor.create(char_literal561);
					adaptor.addChild(root_0, char_literal561_tree);
					}

					}
					break;
				case 22 :
					// CIL.g:659:422: 'pinvokeimpl' '(' pinvAttr ')'
					{
					string_literal562=(Token)match(input,433,FOLLOW_433_in_methAttr14444); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal562_tree = (CommonTree)adaptor.create(string_literal562);
					adaptor.addChild(root_0, string_literal562_tree);
					}

					char_literal563=(Token)match(input,258,FOLLOW_258_in_methAttr14446); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal563_tree = (CommonTree)adaptor.create(char_literal563);
					adaptor.addChild(root_0, char_literal563_tree);
					}

					pushFollow(FOLLOW_pinvAttr_in_methAttr14448);
					pinvAttr564=pinvAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pinvAttr564.getTree());

					char_literal565=(Token)match(input,259,FOLLOW_259_in_methAttr14450); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal565_tree = (CommonTree)adaptor.create(char_literal565);
					adaptor.addChild(root_0, char_literal565_tree);
					}

					}
					break;

				default :
					break loop50;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "methAttr"


	public static class pinvAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pinvAttr"
	// CIL.g:662:1: pinvAttr : () ( 'nomangle' | 'ansi' | 'unicode' | 'autochar' | 'lasterr' | 'winapi' | 'cdecl' | 'stdcall' | 'thiscall' | 'fastcall' | 'bestfit' ':' 'on' | 'bestfit' ':' 'off' | 'charmaperror' ':' 'on' | 'charmaperror' ':' 'off' | 'flags' '(' int32 ')' )* ;
	public final CILParser.pinvAttr_return pinvAttr() throws RecognitionException {
		CILParser.pinvAttr_return retval = new CILParser.pinvAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal566=null;
		Token string_literal567=null;
		Token string_literal568=null;
		Token string_literal569=null;
		Token string_literal570=null;
		Token string_literal571=null;
		Token string_literal572=null;
		Token string_literal573=null;
		Token string_literal574=null;
		Token string_literal575=null;
		Token string_literal576=null;
		Token char_literal577=null;
		Token string_literal578=null;
		Token string_literal579=null;
		Token char_literal580=null;
		Token string_literal581=null;
		Token string_literal582=null;
		Token char_literal583=null;
		Token string_literal584=null;
		Token string_literal585=null;
		Token char_literal586=null;
		Token string_literal587=null;
		Token string_literal588=null;
		Token char_literal589=null;
		Token char_literal591=null;
		ParserRuleReturnScope int32590 =null;

		CommonTree string_literal566_tree=null;
		CommonTree string_literal567_tree=null;
		CommonTree string_literal568_tree=null;
		CommonTree string_literal569_tree=null;
		CommonTree string_literal570_tree=null;
		CommonTree string_literal571_tree=null;
		CommonTree string_literal572_tree=null;
		CommonTree string_literal573_tree=null;
		CommonTree string_literal574_tree=null;
		CommonTree string_literal575_tree=null;
		CommonTree string_literal576_tree=null;
		CommonTree char_literal577_tree=null;
		CommonTree string_literal578_tree=null;
		CommonTree string_literal579_tree=null;
		CommonTree char_literal580_tree=null;
		CommonTree string_literal581_tree=null;
		CommonTree string_literal582_tree=null;
		CommonTree char_literal583_tree=null;
		CommonTree string_literal584_tree=null;
		CommonTree string_literal585_tree=null;
		CommonTree char_literal586_tree=null;
		CommonTree string_literal587_tree=null;
		CommonTree string_literal588_tree=null;
		CommonTree char_literal589_tree=null;
		CommonTree char_literal591_tree=null;

		try {
			// CIL.g:662:25: ( () ( 'nomangle' | 'ansi' | 'unicode' | 'autochar' | 'lasterr' | 'winapi' | 'cdecl' | 'stdcall' | 'thiscall' | 'fastcall' | 'bestfit' ':' 'on' | 'bestfit' ':' 'off' | 'charmaperror' ':' 'on' | 'charmaperror' ':' 'off' | 'flags' '(' int32 ')' )* )
			// CIL.g:662:27: () ( 'nomangle' | 'ansi' | 'unicode' | 'autochar' | 'lasterr' | 'winapi' | 'cdecl' | 'stdcall' | 'thiscall' | 'fastcall' | 'bestfit' ':' 'on' | 'bestfit' ':' 'off' | 'charmaperror' ':' 'on' | 'charmaperror' ':' 'off' | 'flags' '(' int32 ')' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:662:27: ()
			// CIL.g:662:39: 
			{
			}

			// CIL.g:662:41: ( 'nomangle' | 'ansi' | 'unicode' | 'autochar' | 'lasterr' | 'winapi' | 'cdecl' | 'stdcall' | 'thiscall' | 'fastcall' | 'bestfit' ':' 'on' | 'bestfit' ':' 'off' | 'charmaperror' ':' 'on' | 'charmaperror' ':' 'off' | 'flags' '(' int32 ')' )*
			loop51:
			while (true) {
				int alt51=16;
				switch ( input.LA(1) ) {
				case 414:
					{
					alt51=1;
					}
					break;
				case 329:
					{
					alt51=2;
					}
					break;
				case 479:
					{
					alt51=3;
					}
					break;
				case 337:
					{
					alt51=4;
					}
					break;
				case 395:
					{
					alt51=5;
					}
					break;
				case 491:
					{
					alt51=6;
					}
					break;
				case CDECL:
					{
					alt51=7;
					}
					break;
				case 456:
					{
					alt51=8;
					}
					break;
				case 468:
					{
					alt51=9;
					}
					break;
				case 359:
					{
					alt51=10;
					}
					break;
				case 339:
					{
					int LA51_12 = input.LA(2);
					if ( (LA51_12==318) ) {
						int LA51_15 = input.LA(3);
						if ( (LA51_15==426) ) {
							alt51=11;
						}
						else if ( (LA51_15==425) ) {
							alt51=12;
						}

					}

					}
					break;
				case 342:
					{
					int LA51_13 = input.LA(2);
					if ( (LA51_13==318) ) {
						int LA51_16 = input.LA(3);
						if ( (LA51_16==426) ) {
							alt51=13;
						}
						else if ( (LA51_16==425) ) {
							alt51=14;
						}

					}

					}
					break;
				case 367:
					{
					alt51=15;
					}
					break;
				}
				switch (alt51) {
				case 1 :
					// CIL.g:662:42: 'nomangle'
					{
					string_literal566=(Token)match(input,414,FOLLOW_414_in_pinvAttr14506); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal566_tree = (CommonTree)adaptor.create(string_literal566);
					adaptor.addChild(root_0, string_literal566_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:662:55: 'ansi'
					{
					string_literal567=(Token)match(input,329,FOLLOW_329_in_pinvAttr14510); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal567_tree = (CommonTree)adaptor.create(string_literal567);
					adaptor.addChild(root_0, string_literal567_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:662:64: 'unicode'
					{
					string_literal568=(Token)match(input,479,FOLLOW_479_in_pinvAttr14514); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal568_tree = (CommonTree)adaptor.create(string_literal568);
					adaptor.addChild(root_0, string_literal568_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:662:76: 'autochar'
					{
					string_literal569=(Token)match(input,337,FOLLOW_337_in_pinvAttr14518); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal569_tree = (CommonTree)adaptor.create(string_literal569);
					adaptor.addChild(root_0, string_literal569_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:662:89: 'lasterr'
					{
					string_literal570=(Token)match(input,395,FOLLOW_395_in_pinvAttr14522); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal570_tree = (CommonTree)adaptor.create(string_literal570);
					adaptor.addChild(root_0, string_literal570_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:662:101: 'winapi'
					{
					string_literal571=(Token)match(input,491,FOLLOW_491_in_pinvAttr14526); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal571_tree = (CommonTree)adaptor.create(string_literal571);
					adaptor.addChild(root_0, string_literal571_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:662:112: 'cdecl'
					{
					string_literal572=(Token)match(input,CDECL,FOLLOW_CDECL_in_pinvAttr14530); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal572_tree = (CommonTree)adaptor.create(string_literal572);
					adaptor.addChild(root_0, string_literal572_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:662:122: 'stdcall'
					{
					string_literal573=(Token)match(input,456,FOLLOW_456_in_pinvAttr14534); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal573_tree = (CommonTree)adaptor.create(string_literal573);
					adaptor.addChild(root_0, string_literal573_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:662:134: 'thiscall'
					{
					string_literal574=(Token)match(input,468,FOLLOW_468_in_pinvAttr14538); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal574_tree = (CommonTree)adaptor.create(string_literal574);
					adaptor.addChild(root_0, string_literal574_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:662:147: 'fastcall'
					{
					string_literal575=(Token)match(input,359,FOLLOW_359_in_pinvAttr14542); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal575_tree = (CommonTree)adaptor.create(string_literal575);
					adaptor.addChild(root_0, string_literal575_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:662:160: 'bestfit' ':' 'on'
					{
					string_literal576=(Token)match(input,339,FOLLOW_339_in_pinvAttr14546); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal576_tree = (CommonTree)adaptor.create(string_literal576);
					adaptor.addChild(root_0, string_literal576_tree);
					}

					char_literal577=(Token)match(input,318,FOLLOW_318_in_pinvAttr14548); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal577_tree = (CommonTree)adaptor.create(char_literal577);
					adaptor.addChild(root_0, char_literal577_tree);
					}

					string_literal578=(Token)match(input,426,FOLLOW_426_in_pinvAttr14550); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal578_tree = (CommonTree)adaptor.create(string_literal578);
					adaptor.addChild(root_0, string_literal578_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:662:181: 'bestfit' ':' 'off'
					{
					string_literal579=(Token)match(input,339,FOLLOW_339_in_pinvAttr14554); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal579_tree = (CommonTree)adaptor.create(string_literal579);
					adaptor.addChild(root_0, string_literal579_tree);
					}

					char_literal580=(Token)match(input,318,FOLLOW_318_in_pinvAttr14556); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal580_tree = (CommonTree)adaptor.create(char_literal580);
					adaptor.addChild(root_0, char_literal580_tree);
					}

					string_literal581=(Token)match(input,425,FOLLOW_425_in_pinvAttr14558); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal581_tree = (CommonTree)adaptor.create(string_literal581);
					adaptor.addChild(root_0, string_literal581_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:662:203: 'charmaperror' ':' 'on'
					{
					string_literal582=(Token)match(input,342,FOLLOW_342_in_pinvAttr14562); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal582_tree = (CommonTree)adaptor.create(string_literal582);
					adaptor.addChild(root_0, string_literal582_tree);
					}

					char_literal583=(Token)match(input,318,FOLLOW_318_in_pinvAttr14564); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal583_tree = (CommonTree)adaptor.create(char_literal583);
					adaptor.addChild(root_0, char_literal583_tree);
					}

					string_literal584=(Token)match(input,426,FOLLOW_426_in_pinvAttr14566); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal584_tree = (CommonTree)adaptor.create(string_literal584);
					adaptor.addChild(root_0, string_literal584_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:662:229: 'charmaperror' ':' 'off'
					{
					string_literal585=(Token)match(input,342,FOLLOW_342_in_pinvAttr14570); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal585_tree = (CommonTree)adaptor.create(string_literal585);
					adaptor.addChild(root_0, string_literal585_tree);
					}

					char_literal586=(Token)match(input,318,FOLLOW_318_in_pinvAttr14572); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal586_tree = (CommonTree)adaptor.create(char_literal586);
					adaptor.addChild(root_0, char_literal586_tree);
					}

					string_literal587=(Token)match(input,425,FOLLOW_425_in_pinvAttr14574); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal587_tree = (CommonTree)adaptor.create(string_literal587);
					adaptor.addChild(root_0, string_literal587_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:662:256: 'flags' '(' int32 ')'
					{
					string_literal588=(Token)match(input,367,FOLLOW_367_in_pinvAttr14578); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal588_tree = (CommonTree)adaptor.create(string_literal588);
					adaptor.addChild(root_0, string_literal588_tree);
					}

					char_literal589=(Token)match(input,258,FOLLOW_258_in_pinvAttr14580); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal589_tree = (CommonTree)adaptor.create(char_literal589);
					adaptor.addChild(root_0, char_literal589_tree);
					}

					pushFollow(FOLLOW_int32_in_pinvAttr14582);
					int32590=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32590.getTree());

					char_literal591=(Token)match(input,259,FOLLOW_259_in_pinvAttr14584); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal591_tree = (CommonTree)adaptor.create(char_literal591);
					adaptor.addChild(root_0, char_literal591_tree);
					}

					}
					break;

				default :
					break loop51;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pinvAttr"


	public static class methodName_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "methodName"
	// CIL.g:665:1: methodName : ( '.ctor' | '.cctor' | dottedName );
	public final CILParser.methodName_return methodName() throws RecognitionException {
		CILParser.methodName_return retval = new CILParser.methodName_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal592=null;
		Token string_literal593=null;
		ParserRuleReturnScope dottedName594 =null;

		CommonTree string_literal592_tree=null;
		CommonTree string_literal593_tree=null;

		try {
			// CIL.g:665:25: ( '.ctor' | '.cctor' | dottedName )
			int alt52=3;
			switch ( input.LA(1) ) {
			case 271:
				{
				alt52=1;
				}
				break;
			case 268:
				{
				alt52=2;
				}
				break;
			case DOTTEDNAME:
			case ID:
			case SQSTRING:
				{
				alt52=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 52, 0, input);
				throw nvae;
			}
			switch (alt52) {
				case 1 :
					// CIL.g:665:27: '.ctor'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal592=(Token)match(input,271,FOLLOW_271_in_methodName14633); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal592_tree = (CommonTree)adaptor.create(string_literal592);
					adaptor.addChild(root_0, string_literal592_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:666:27: '.cctor'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal593=(Token)match(input,268,FOLLOW_268_in_methodName14662); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal593_tree = (CommonTree)adaptor.create(string_literal593);
					adaptor.addChild(root_0, string_literal593_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:667:27: dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_dottedName_in_methodName14691);
					dottedName594=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName594.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "methodName"


	public static class paramAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "paramAttr"
	// CIL.g:670:1: paramAttr : () ( '[' 'in' ']' | '[' 'out' ']' | '[' 'opt' ']' | '[' int32 ']' )* ;
	public final CILParser.paramAttr_return paramAttr() throws RecognitionException {
		CILParser.paramAttr_return retval = new CILParser.paramAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal595=null;
		Token string_literal596=null;
		Token char_literal597=null;
		Token char_literal598=null;
		Token string_literal599=null;
		Token char_literal600=null;
		Token char_literal601=null;
		Token string_literal602=null;
		Token char_literal603=null;
		Token char_literal604=null;
		Token char_literal606=null;
		ParserRuleReturnScope int32605 =null;

		CommonTree char_literal595_tree=null;
		CommonTree string_literal596_tree=null;
		CommonTree char_literal597_tree=null;
		CommonTree char_literal598_tree=null;
		CommonTree string_literal599_tree=null;
		CommonTree char_literal600_tree=null;
		CommonTree char_literal601_tree=null;
		CommonTree string_literal602_tree=null;
		CommonTree char_literal603_tree=null;
		CommonTree char_literal604_tree=null;
		CommonTree char_literal606_tree=null;

		try {
			// CIL.g:670:25: ( () ( '[' 'in' ']' | '[' 'out' ']' | '[' 'opt' ']' | '[' int32 ']' )* )
			// CIL.g:670:27: () ( '[' 'in' ']' | '[' 'out' ']' | '[' 'opt' ']' | '[' int32 ']' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:670:27: ()
			// CIL.g:670:39: 
			{
			}

			// CIL.g:670:41: ( '[' 'in' ']' | '[' 'out' ']' | '[' 'opt' ']' | '[' int32 ']' )*
			loop53:
			while (true) {
				int alt53=5;
				int LA53_0 = input.LA(1);
				if ( (LA53_0==323) ) {
					switch ( input.LA(2) ) {
					case 382:
						{
						alt53=1;
						}
						break;
					case 429:
						{
						alt53=2;
						}
						break;
					case 427:
						{
						alt53=3;
						}
						break;
					case INT32:
						{
						alt53=4;
						}
						break;
					}
				}

				switch (alt53) {
				case 1 :
					// CIL.g:670:42: '[' 'in' ']'
					{
					char_literal595=(Token)match(input,323,FOLLOW_323_in_paramAttr14744); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal595_tree = (CommonTree)adaptor.create(char_literal595);
					adaptor.addChild(root_0, char_literal595_tree);
					}

					string_literal596=(Token)match(input,382,FOLLOW_382_in_paramAttr14746); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal596_tree = (CommonTree)adaptor.create(string_literal596);
					adaptor.addChild(root_0, string_literal596_tree);
					}

					char_literal597=(Token)match(input,324,FOLLOW_324_in_paramAttr14748); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal597_tree = (CommonTree)adaptor.create(char_literal597);
					adaptor.addChild(root_0, char_literal597_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:670:57: '[' 'out' ']'
					{
					char_literal598=(Token)match(input,323,FOLLOW_323_in_paramAttr14752); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal598_tree = (CommonTree)adaptor.create(char_literal598);
					adaptor.addChild(root_0, char_literal598_tree);
					}

					string_literal599=(Token)match(input,429,FOLLOW_429_in_paramAttr14754); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal599_tree = (CommonTree)adaptor.create(string_literal599);
					adaptor.addChild(root_0, string_literal599_tree);
					}

					char_literal600=(Token)match(input,324,FOLLOW_324_in_paramAttr14756); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal600_tree = (CommonTree)adaptor.create(char_literal600);
					adaptor.addChild(root_0, char_literal600_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:670:73: '[' 'opt' ']'
					{
					char_literal601=(Token)match(input,323,FOLLOW_323_in_paramAttr14760); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal601_tree = (CommonTree)adaptor.create(char_literal601);
					adaptor.addChild(root_0, char_literal601_tree);
					}

					string_literal602=(Token)match(input,427,FOLLOW_427_in_paramAttr14762); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal602_tree = (CommonTree)adaptor.create(string_literal602);
					adaptor.addChild(root_0, string_literal602_tree);
					}

					char_literal603=(Token)match(input,324,FOLLOW_324_in_paramAttr14764); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal603_tree = (CommonTree)adaptor.create(char_literal603);
					adaptor.addChild(root_0, char_literal603_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:670:89: '[' int32 ']'
					{
					char_literal604=(Token)match(input,323,FOLLOW_323_in_paramAttr14768); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal604_tree = (CommonTree)adaptor.create(char_literal604);
					adaptor.addChild(root_0, char_literal604_tree);
					}

					pushFollow(FOLLOW_int32_in_paramAttr14770);
					int32605=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32605.getTree());

					char_literal606=(Token)match(input,324,FOLLOW_324_in_paramAttr14772); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal606_tree = (CommonTree)adaptor.create(char_literal606);
					adaptor.addChild(root_0, char_literal606_tree);
					}

					}
					break;

				default :
					break loop53;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "paramAttr"


	public static class implAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "implAttr"
	// CIL.g:673:1: implAttr : () ( 'native' | 'cil' | 'optil' | 'managed' | 'unmanaged' | 'forwardref' | 'preservesig' | 'runtime' | 'internalcall' | 'synchronized' | 'noinlining' | 'nooptimization' | 'flags' '(' int32 ')' )* ;
	public final CILParser.implAttr_return implAttr() throws RecognitionException {
		CILParser.implAttr_return retval = new CILParser.implAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal607=null;
		Token string_literal608=null;
		Token string_literal609=null;
		Token string_literal610=null;
		Token string_literal611=null;
		Token string_literal612=null;
		Token string_literal613=null;
		Token string_literal614=null;
		Token string_literal615=null;
		Token string_literal616=null;
		Token string_literal617=null;
		Token string_literal618=null;
		Token string_literal619=null;
		Token char_literal620=null;
		Token char_literal622=null;
		ParserRuleReturnScope int32621 =null;

		CommonTree string_literal607_tree=null;
		CommonTree string_literal608_tree=null;
		CommonTree string_literal609_tree=null;
		CommonTree string_literal610_tree=null;
		CommonTree string_literal611_tree=null;
		CommonTree string_literal612_tree=null;
		CommonTree string_literal613_tree=null;
		CommonTree string_literal614_tree=null;
		CommonTree string_literal615_tree=null;
		CommonTree string_literal616_tree=null;
		CommonTree string_literal617_tree=null;
		CommonTree string_literal618_tree=null;
		CommonTree string_literal619_tree=null;
		CommonTree char_literal620_tree=null;
		CommonTree char_literal622_tree=null;

		try {
			// CIL.g:673:25: ( () ( 'native' | 'cil' | 'optil' | 'managed' | 'unmanaged' | 'forwardref' | 'preservesig' | 'runtime' | 'internalcall' | 'synchronized' | 'noinlining' | 'nooptimization' | 'flags' '(' int32 ')' )* )
			// CIL.g:673:27: () ( 'native' | 'cil' | 'optil' | 'managed' | 'unmanaged' | 'forwardref' | 'preservesig' | 'runtime' | 'internalcall' | 'synchronized' | 'noinlining' | 'nooptimization' | 'flags' '(' int32 ')' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:673:27: ()
			// CIL.g:673:39: 
			{
			}

			// CIL.g:673:41: ( 'native' | 'cil' | 'optil' | 'managed' | 'unmanaged' | 'forwardref' | 'preservesig' | 'runtime' | 'internalcall' | 'synchronized' | 'noinlining' | 'nooptimization' | 'flags' '(' int32 ')' )*
			loop54:
			while (true) {
				int alt54=14;
				switch ( input.LA(1) ) {
				case 410:
					{
					alt54=1;
					}
					break;
				case CIL:
					{
					alt54=2;
					}
					break;
				case 428:
					{
					alt54=3;
					}
					break;
				case 404:
					{
					alt54=4;
					}
					break;
				case 480:
					{
					alt54=5;
					}
					break;
				case 372:
					{
					alt54=6;
					}
					break;
				case 436:
					{
					alt54=7;
					}
					break;
				case 449:
					{
					alt54=8;
					}
					break;
				case 393:
					{
					alt54=9;
					}
					break;
				case 464:
					{
					alt54=10;
					}
					break;
				case 413:
					{
					alt54=11;
					}
					break;
				case 419:
					{
					alt54=12;
					}
					break;
				case 367:
					{
					alt54=13;
					}
					break;
				}
				switch (alt54) {
				case 1 :
					// CIL.g:673:42: 'native'
					{
					string_literal607=(Token)match(input,410,FOLLOW_410_in_implAttr14837); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal607_tree = (CommonTree)adaptor.create(string_literal607);
					adaptor.addChild(root_0, string_literal607_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:673:53: 'cil'
					{
					string_literal608=(Token)match(input,CIL,FOLLOW_CIL_in_implAttr14841); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal608_tree = (CommonTree)adaptor.create(string_literal608);
					adaptor.addChild(root_0, string_literal608_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:673:61: 'optil'
					{
					string_literal609=(Token)match(input,428,FOLLOW_428_in_implAttr14845); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal609_tree = (CommonTree)adaptor.create(string_literal609);
					adaptor.addChild(root_0, string_literal609_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:673:71: 'managed'
					{
					string_literal610=(Token)match(input,404,FOLLOW_404_in_implAttr14849); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal610_tree = (CommonTree)adaptor.create(string_literal610);
					adaptor.addChild(root_0, string_literal610_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:673:83: 'unmanaged'
					{
					string_literal611=(Token)match(input,480,FOLLOW_480_in_implAttr14853); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal611_tree = (CommonTree)adaptor.create(string_literal611);
					adaptor.addChild(root_0, string_literal611_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:673:97: 'forwardref'
					{
					string_literal612=(Token)match(input,372,FOLLOW_372_in_implAttr14857); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal612_tree = (CommonTree)adaptor.create(string_literal612);
					adaptor.addChild(root_0, string_literal612_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:673:112: 'preservesig'
					{
					string_literal613=(Token)match(input,436,FOLLOW_436_in_implAttr14861); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal613_tree = (CommonTree)adaptor.create(string_literal613);
					adaptor.addChild(root_0, string_literal613_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:673:128: 'runtime'
					{
					string_literal614=(Token)match(input,449,FOLLOW_449_in_implAttr14865); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal614_tree = (CommonTree)adaptor.create(string_literal614);
					adaptor.addChild(root_0, string_literal614_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:673:140: 'internalcall'
					{
					string_literal615=(Token)match(input,393,FOLLOW_393_in_implAttr14869); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal615_tree = (CommonTree)adaptor.create(string_literal615);
					adaptor.addChild(root_0, string_literal615_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:673:157: 'synchronized'
					{
					string_literal616=(Token)match(input,464,FOLLOW_464_in_implAttr14873); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal616_tree = (CommonTree)adaptor.create(string_literal616);
					adaptor.addChild(root_0, string_literal616_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:673:174: 'noinlining'
					{
					string_literal617=(Token)match(input,413,FOLLOW_413_in_implAttr14877); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal617_tree = (CommonTree)adaptor.create(string_literal617);
					adaptor.addChild(root_0, string_literal617_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:673:189: 'nooptimization'
					{
					string_literal618=(Token)match(input,419,FOLLOW_419_in_implAttr14881); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal618_tree = (CommonTree)adaptor.create(string_literal618);
					adaptor.addChild(root_0, string_literal618_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:673:208: 'flags' '(' int32 ')'
					{
					string_literal619=(Token)match(input,367,FOLLOW_367_in_implAttr14885); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal619_tree = (CommonTree)adaptor.create(string_literal619);
					adaptor.addChild(root_0, string_literal619_tree);
					}

					char_literal620=(Token)match(input,258,FOLLOW_258_in_implAttr14887); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal620_tree = (CommonTree)adaptor.create(char_literal620);
					adaptor.addChild(root_0, char_literal620_tree);
					}

					pushFollow(FOLLOW_int32_in_implAttr14889);
					int32621=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32621.getTree());

					char_literal622=(Token)match(input,259,FOLLOW_259_in_implAttr14891); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal622_tree = (CommonTree)adaptor.create(char_literal622);
					adaptor.addChild(root_0, char_literal622_tree);
					}

					}
					break;

				default :
					break loop54;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "implAttr"


	public static class localsHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "localsHead"
	// CIL.g:676:1: localsHead : '.locals' ;
	public final CILParser.localsHead_return localsHead() throws RecognitionException {
		CILParser.localsHead_return retval = new CILParser.localsHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal623=null;

		CommonTree string_literal623_tree=null;

		try {
			// CIL.g:676:25: ( '.locals' )
			// CIL.g:676:27: '.locals'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal623=(Token)match(input,287,FOLLOW_287_in_localsHead14940); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal623_tree = (CommonTree)adaptor.create(string_literal623);
			adaptor.addChild(root_0, string_literal623_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "localsHead"


	public static class methodDecls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "methodDecls"
	// CIL.g:679:1: methodDecls : () ( methodDecl )* ;
	public final CILParser.methodDecls_return methodDecls() throws RecognitionException {
		CILParser.methodDecls_return retval = new CILParser.methodDecls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope methodDecl624 =null;


		try {
			// CIL.g:679:25: ( () ( methodDecl )* )
			// CIL.g:679:27: () ( methodDecl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:679:27: ()
			// CIL.g:679:39: 
			{
			}

			// CIL.g:679:41: ( methodDecl )*
			loop55:
			while (true) {
				int alt55=2;
				int LA55_0 = input.LA(1);
				if ( ((LA55_0 >= ADD && LA55_0 <= BLE_UN_S)||(LA55_0 >= BLT && LA55_0 <= BRFALSE_S)||(LA55_0 >= BRTRUE && LA55_0 <= BRTRUE_S)||LA55_0==BR_S||(LA55_0 >= CALL && LA55_0 <= CALLI)||LA55_0==CALLVIRT||LA55_0==CASTCLASS||LA55_0==CEQ||(LA55_0 >= CGT && LA55_0 <= CGT_UN)||LA55_0==CKFINITE||(LA55_0 >= CLT && LA55_0 <= CLT_UN)||(LA55_0 >= CONV_I && LA55_0 <= CPOBJ)||(LA55_0 >= DIV && LA55_0 <= DIV_UN)||(LA55_0 >= DUP && LA55_0 <= ENDFINALLY)||(LA55_0 >= ID && LA55_0 <= INITOBJ)||(LA55_0 >= ISINST && LA55_0 <= LDELEM_U4)||(LA55_0 >= LDFLD && LA55_0 <= LDIND_U4)||(LA55_0 >= LDLEN && LA55_0 <= LEAVE_S)||(LA55_0 >= LOCALLOC && LA55_0 <= POP)||(LA55_0 >= REFANYTYPE && LA55_0 <= REM_UN)||(LA55_0 >= RET && LA55_0 <= VOLATILE_)||LA55_0==XOR||(LA55_0 >= 272 && LA55_0 <= 275)||LA55_0==277||(LA55_0 >= 284 && LA55_0 <= 285)||(LA55_0 >= 287 && LA55_0 <= 288)||LA55_0==296||(LA55_0 >= 298 && LA55_0 <= 299)||(LA55_0 >= 309 && LA55_0 <= 310)||LA55_0==314||LA55_0==316||LA55_0==430||LA55_0==494) ) {
					alt55=1;
				}

				switch (alt55) {
				case 1 :
					// CIL.g:679:42: methodDecl
					{
					pushFollow(FOLLOW_methodDecl_in_methodDecls14991);
					methodDecl624=methodDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodDecl624.getTree());

					}
					break;

				default :
					break loop55;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "methodDecls"


	public static class methodDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "methodDecl"
	// CIL.g:682:1: methodDecl : ( '.emitbyte' int32 | sehBlock | '.maxstack' int32 | localsHead '(' sigArgs0 ')' | localsHead 'init' '(' sigArgs0 ')' | '.entrypoint' | '.zeroinit' | dataDecl | instr | id ':' | secDecl | extSourceSpec | languageDecl | customAttrDecl | '.export' '[' int32 ']' | '.export' '[' int32 ']' 'as' id | '.vtentry' int32 ':' int32 | '.override' typeSpec '::' methodName | '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' | scopeBlock | 'param' 'type' '[' int32 ']' | 'param' 'type' dottedName | 'param' '[' int32 ']' initOpt );
	public final CILParser.methodDecl_return methodDecl() throws RecognitionException {
		CILParser.methodDecl_return retval = new CILParser.methodDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal625=null;
		Token string_literal628=null;
		Token char_literal631=null;
		Token char_literal633=null;
		Token string_literal635=null;
		Token char_literal636=null;
		Token char_literal638=null;
		Token string_literal639=null;
		Token string_literal640=null;
		Token char_literal644=null;
		Token string_literal649=null;
		Token char_literal650=null;
		Token char_literal652=null;
		Token string_literal653=null;
		Token char_literal654=null;
		Token char_literal656=null;
		Token string_literal657=null;
		Token string_literal659=null;
		Token char_literal661=null;
		Token string_literal663=null;
		Token string_literal665=null;
		Token string_literal667=null;
		Token string_literal668=null;
		Token string_literal672=null;
		Token char_literal675=null;
		Token char_literal677=null;
		Token string_literal679=null;
		Token string_literal680=null;
		Token char_literal681=null;
		Token char_literal683=null;
		Token string_literal684=null;
		Token string_literal685=null;
		Token string_literal687=null;
		Token char_literal688=null;
		Token char_literal690=null;
		ParserRuleReturnScope int32626 =null;
		ParserRuleReturnScope sehBlock627 =null;
		ParserRuleReturnScope int32629 =null;
		ParserRuleReturnScope localsHead630 =null;
		ParserRuleReturnScope sigArgs0632 =null;
		ParserRuleReturnScope localsHead634 =null;
		ParserRuleReturnScope sigArgs0637 =null;
		ParserRuleReturnScope dataDecl641 =null;
		ParserRuleReturnScope instr642 =null;
		ParserRuleReturnScope id643 =null;
		ParserRuleReturnScope secDecl645 =null;
		ParserRuleReturnScope extSourceSpec646 =null;
		ParserRuleReturnScope languageDecl647 =null;
		ParserRuleReturnScope customAttrDecl648 =null;
		ParserRuleReturnScope int32651 =null;
		ParserRuleReturnScope int32655 =null;
		ParserRuleReturnScope id658 =null;
		ParserRuleReturnScope int32660 =null;
		ParserRuleReturnScope int32662 =null;
		ParserRuleReturnScope typeSpec664 =null;
		ParserRuleReturnScope methodName666 =null;
		ParserRuleReturnScope callConv669 =null;
		ParserRuleReturnScope type670 =null;
		ParserRuleReturnScope typeSpec671 =null;
		ParserRuleReturnScope methodName673 =null;
		ParserRuleReturnScope genArity674 =null;
		ParserRuleReturnScope sigArgs0676 =null;
		ParserRuleReturnScope scopeBlock678 =null;
		ParserRuleReturnScope int32682 =null;
		ParserRuleReturnScope dottedName686 =null;
		ParserRuleReturnScope int32689 =null;
		ParserRuleReturnScope initOpt691 =null;

		CommonTree string_literal625_tree=null;
		CommonTree string_literal628_tree=null;
		CommonTree char_literal631_tree=null;
		CommonTree char_literal633_tree=null;
		CommonTree string_literal635_tree=null;
		CommonTree char_literal636_tree=null;
		CommonTree char_literal638_tree=null;
		CommonTree string_literal639_tree=null;
		CommonTree string_literal640_tree=null;
		CommonTree char_literal644_tree=null;
		CommonTree string_literal649_tree=null;
		CommonTree char_literal650_tree=null;
		CommonTree char_literal652_tree=null;
		CommonTree string_literal653_tree=null;
		CommonTree char_literal654_tree=null;
		CommonTree char_literal656_tree=null;
		CommonTree string_literal657_tree=null;
		CommonTree string_literal659_tree=null;
		CommonTree char_literal661_tree=null;
		CommonTree string_literal663_tree=null;
		CommonTree string_literal665_tree=null;
		CommonTree string_literal667_tree=null;
		CommonTree string_literal668_tree=null;
		CommonTree string_literal672_tree=null;
		CommonTree char_literal675_tree=null;
		CommonTree char_literal677_tree=null;
		CommonTree string_literal679_tree=null;
		CommonTree string_literal680_tree=null;
		CommonTree char_literal681_tree=null;
		CommonTree char_literal683_tree=null;
		CommonTree string_literal684_tree=null;
		CommonTree string_literal685_tree=null;
		CommonTree string_literal687_tree=null;
		CommonTree char_literal688_tree=null;
		CommonTree char_literal690_tree=null;

		try {
			// CIL.g:682:25: ( '.emitbyte' int32 | sehBlock | '.maxstack' int32 | localsHead '(' sigArgs0 ')' | localsHead 'init' '(' sigArgs0 ')' | '.entrypoint' | '.zeroinit' | dataDecl | instr | id ':' | secDecl | extSourceSpec | languageDecl | customAttrDecl | '.export' '[' int32 ']' | '.export' '[' int32 ']' 'as' id | '.vtentry' int32 ':' int32 | '.override' typeSpec '::' methodName | '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' | scopeBlock | 'param' 'type' '[' int32 ']' | 'param' 'type' dottedName | 'param' '[' int32 ']' initOpt )
			int alt56=23;
			switch ( input.LA(1) ) {
			case 274:
				{
				alt56=1;
				}
				break;
			case 309:
				{
				alt56=2;
				}
				break;
			case 288:
				{
				alt56=3;
				}
				break;
			case 287:
				{
				int LA56_4 = input.LA(2);
				if ( (synpred236_CIL()) ) {
					alt56=4;
				}
				else if ( (synpred237_CIL()) ) {
					alt56=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 56, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 275:
				{
				alt56=6;
				}
				break;
			case 316:
				{
				alt56=7;
				}
				break;
			case 273:
				{
				alt56=8;
				}
				break;
			case ADD:
			case ADD_OVF:
			case ADD_OVF_UN:
			case AND:
			case ARGLIST:
			case BEQ:
			case BEQ_S:
			case BGE:
			case BGE_S:
			case BGE_UN:
			case BGE_UN_S:
			case BGT:
			case BGT_S:
			case BGT_UN:
			case BGT_UN_S:
			case BLE:
			case BLE_S:
			case BLE_UN:
			case BLE_UN_S:
			case BLT:
			case BLT_S:
			case BLT_UN:
			case BLT_UN_S:
			case BNE_UN:
			case BNE_UN_S:
			case BOX:
			case BR:
			case BREAK:
			case BRFALSE:
			case BRFALSE_S:
			case BRTRUE:
			case BRTRUE_S:
			case BR_S:
			case CALL:
			case CALLI:
			case CALLVIRT:
			case CASTCLASS:
			case CEQ:
			case CGT:
			case CGT_UN:
			case CKFINITE:
			case CLT:
			case CLT_UN:
			case CONV_I:
			case CONV_I1:
			case CONV_I2:
			case CONV_I4:
			case CONV_I8:
			case CONV_OVF_I:
			case CONV_OVF_I1:
			case CONV_OVF_I1_UN:
			case CONV_OVF_I2:
			case CONV_OVF_I2_UN:
			case CONV_OVF_I4:
			case CONV_OVF_I4_UN:
			case CONV_OVF_I8:
			case CONV_OVF_I8_UN:
			case CONV_OVF_I_UN:
			case CONV_OVF_U:
			case CONV_OVF_U1:
			case CONV_OVF_U1_UN:
			case CONV_OVF_U2:
			case CONV_OVF_U2_UN:
			case CONV_OVF_U4:
			case CONV_OVF_U4_UN:
			case CONV_OVF_U8:
			case CONV_OVF_U8_UN:
			case CONV_OVF_U_UN:
			case CONV_R4:
			case CONV_R8:
			case CONV_R_UN:
			case CONV_U:
			case CONV_U1:
			case CONV_U2:
			case CONV_U4:
			case CONV_U8:
			case CPBLK:
			case CPOBJ:
			case DIV:
			case DIV_UN:
			case DUP:
			case ENDFAULT:
			case ENDFILTER:
			case ENDFINALLY:
			case INITBLK:
			case INITOBJ:
			case ISINST:
			case JMP:
			case LDARG:
			case LDARGA:
			case LDARGA_S:
			case LDARG_0:
			case LDARG_1:
			case LDARG_2:
			case LDARG_3:
			case LDARG_S:
			case LDC_I4:
			case LDC_I4_0:
			case LDC_I4_1:
			case LDC_I4_2:
			case LDC_I4_3:
			case LDC_I4_4:
			case LDC_I4_5:
			case LDC_I4_6:
			case LDC_I4_7:
			case LDC_I4_8:
			case LDC_I4_M1:
			case LDC_I4_S:
			case LDC_I8:
			case LDC_R4:
			case LDC_R8:
			case LDELEMA:
			case LDELEM_I:
			case LDELEM_I1:
			case LDELEM_I2:
			case LDELEM_I4:
			case LDELEM_I8:
			case LDELEM_R4:
			case LDELEM_R8:
			case LDELEM_REF:
			case LDELEM_U1:
			case LDELEM_U2:
			case LDELEM_U4:
			case LDFLD:
			case LDFLDA:
			case LDFTN:
			case LDIND_I:
			case LDIND_I1:
			case LDIND_I2:
			case LDIND_I4:
			case LDIND_I8:
			case LDIND_R4:
			case LDIND_R8:
			case LDIND_REF:
			case LDIND_U1:
			case LDIND_U2:
			case LDIND_U4:
			case LDLEN:
			case LDLOC:
			case LDLOCA:
			case LDLOCA_S:
			case LDLOC_0:
			case LDLOC_1:
			case LDLOC_2:
			case LDLOC_3:
			case LDLOC_S:
			case LDNULL:
			case LDOBJ:
			case LDSFLD:
			case LDSFLDA:
			case LDSTR:
			case LDTOKEN:
			case LDVIRTFTN:
			case LEAVE:
			case LEAVE_S:
			case LOCALLOC:
			case MKREFANY:
			case MUL:
			case MUL_OVF:
			case MUL_OVF_UN:
			case NEG:
			case NEWARR:
			case NEWOBJ:
			case NOP:
			case NOT:
			case OR:
			case POP:
			case REFANYTYPE:
			case REFANYVAL:
			case REM:
			case REM_UN:
			case RET:
			case RETHROW:
			case SHL:
			case SHR:
			case SHR_UN:
			case SIZEOF:
			case STARG:
			case STARG_S:
			case STELEM_I:
			case STELEM_I1:
			case STELEM_I2:
			case STELEM_I4:
			case STELEM_I8:
			case STELEM_R4:
			case STELEM_R8:
			case STELEM_REF:
			case STFLD:
			case STIND_I:
			case STIND_I1:
			case STIND_I2:
			case STIND_I4:
			case STIND_I8:
			case STIND_R4:
			case STIND_R8:
			case STIND_REF:
			case STLOC:
			case STLOC_0:
			case STLOC_1:
			case STLOC_2:
			case STLOC_3:
			case STLOC_S:
			case STOBJ:
			case STSFLD:
			case SUB:
			case SUB_OVF:
			case SUB_OVF_UN:
			case SWITCH:
			case TAIL_:
			case THROW:
			case UNALIGNED_:
			case UNBOX:
			case VOLATILE_:
			case XOR:
				{
				alt56=9;
				}
				break;
			case ID:
			case SQSTRING:
				{
				alt56=10;
				}
				break;
			case 298:
			case 299:
				{
				alt56=11;
				}
				break;
			case 285:
				{
				alt56=12;
				}
				break;
			case 284:
				{
				alt56=13;
				}
				break;
			case 272:
			case 310:
				{
				alt56=14;
				}
				break;
			case 277:
				{
				int LA56_28 = input.LA(2);
				if ( (synpred247_CIL()) ) {
					alt56=15;
				}
				else if ( (synpred248_CIL()) ) {
					alt56=16;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 56, 28, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 314:
				{
				alt56=17;
				}
				break;
			case 296:
				{
				int LA56_30 = input.LA(2);
				if ( (synpred250_CIL()) ) {
					alt56=18;
				}
				else if ( (synpred251_CIL()) ) {
					alt56=19;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 56, 30, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 494:
				{
				alt56=20;
				}
				break;
			case 430:
				{
				int LA56_32 = input.LA(2);
				if ( (synpred253_CIL()) ) {
					alt56=21;
				}
				else if ( (synpred254_CIL()) ) {
					alt56=22;
				}
				else if ( (true) ) {
					alt56=23;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 56, 0, input);
				throw nvae;
			}
			switch (alt56) {
				case 1 :
					// CIL.g:682:27: '.emitbyte' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal625=(Token)match(input,274,FOLLOW_274_in_methodDecl15039); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal625_tree = (CommonTree)adaptor.create(string_literal625);
					adaptor.addChild(root_0, string_literal625_tree);
					}

					pushFollow(FOLLOW_int32_in_methodDecl15041);
					int32626=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32626.getTree());

					}
					break;
				case 2 :
					// CIL.g:683:27: sehBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_sehBlock_in_methodDecl15070);
					sehBlock627=sehBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sehBlock627.getTree());

					}
					break;
				case 3 :
					// CIL.g:684:27: '.maxstack' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal628=(Token)match(input,288,FOLLOW_288_in_methodDecl15099); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal628_tree = (CommonTree)adaptor.create(string_literal628);
					adaptor.addChild(root_0, string_literal628_tree);
					}

					pushFollow(FOLLOW_int32_in_methodDecl15101);
					int32629=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32629.getTree());

					}
					break;
				case 4 :
					// CIL.g:685:27: localsHead '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_localsHead_in_methodDecl15130);
					localsHead630=localsHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, localsHead630.getTree());

					char_literal631=(Token)match(input,258,FOLLOW_258_in_methodDecl15132); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal631_tree = (CommonTree)adaptor.create(char_literal631);
					adaptor.addChild(root_0, char_literal631_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_methodDecl15134);
					sigArgs0632=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0632.getTree());

					char_literal633=(Token)match(input,259,FOLLOW_259_in_methodDecl15136); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal633_tree = (CommonTree)adaptor.create(char_literal633);
					adaptor.addChild(root_0, char_literal633_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:686:27: localsHead 'init' '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_localsHead_in_methodDecl15165);
					localsHead634=localsHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, localsHead634.getTree());

					string_literal635=(Token)match(input,384,FOLLOW_384_in_methodDecl15167); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal635_tree = (CommonTree)adaptor.create(string_literal635);
					adaptor.addChild(root_0, string_literal635_tree);
					}

					char_literal636=(Token)match(input,258,FOLLOW_258_in_methodDecl15169); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal636_tree = (CommonTree)adaptor.create(char_literal636);
					adaptor.addChild(root_0, char_literal636_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_methodDecl15171);
					sigArgs0637=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0637.getTree());

					char_literal638=(Token)match(input,259,FOLLOW_259_in_methodDecl15173); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal638_tree = (CommonTree)adaptor.create(char_literal638);
					adaptor.addChild(root_0, char_literal638_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:687:27: '.entrypoint'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal639=(Token)match(input,275,FOLLOW_275_in_methodDecl15202); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal639_tree = (CommonTree)adaptor.create(string_literal639);
					adaptor.addChild(root_0, string_literal639_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:688:27: '.zeroinit'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal640=(Token)match(input,316,FOLLOW_316_in_methodDecl15231); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal640_tree = (CommonTree)adaptor.create(string_literal640);
					adaptor.addChild(root_0, string_literal640_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:689:27: dataDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_dataDecl_in_methodDecl15260);
					dataDecl641=dataDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dataDecl641.getTree());

					}
					break;
				case 9 :
					// CIL.g:690:27: instr
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_in_methodDecl15288);
					instr642=instr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr642.getTree());

					}
					break;
				case 10 :
					// CIL.g:691:27: id ':'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_id_in_methodDecl15316);
					id643=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id643.getTree());

					char_literal644=(Token)match(input,318,FOLLOW_318_in_methodDecl15318); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal644_tree = (CommonTree)adaptor.create(char_literal644);
					adaptor.addChild(root_0, char_literal644_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:692:27: secDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_secDecl_in_methodDecl15347);
					secDecl645=secDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secDecl645.getTree());

					}
					break;
				case 12 :
					// CIL.g:693:27: extSourceSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_extSourceSpec_in_methodDecl15375);
					extSourceSpec646=extSourceSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, extSourceSpec646.getTree());

					}
					break;
				case 13 :
					// CIL.g:694:27: languageDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_languageDecl_in_methodDecl15403);
					languageDecl647=languageDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, languageDecl647.getTree());

					}
					break;
				case 14 :
					// CIL.g:695:27: customAttrDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customAttrDecl_in_methodDecl15431);
					customAttrDecl648=customAttrDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customAttrDecl648.getTree());

					}
					break;
				case 15 :
					// CIL.g:696:27: '.export' '[' int32 ']'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal649=(Token)match(input,277,FOLLOW_277_in_methodDecl15459); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal649_tree = (CommonTree)adaptor.create(string_literal649);
					adaptor.addChild(root_0, string_literal649_tree);
					}

					char_literal650=(Token)match(input,323,FOLLOW_323_in_methodDecl15461); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal650_tree = (CommonTree)adaptor.create(char_literal650);
					adaptor.addChild(root_0, char_literal650_tree);
					}

					pushFollow(FOLLOW_int32_in_methodDecl15463);
					int32651=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32651.getTree());

					char_literal652=(Token)match(input,324,FOLLOW_324_in_methodDecl15465); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal652_tree = (CommonTree)adaptor.create(char_literal652);
					adaptor.addChild(root_0, char_literal652_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:697:27: '.export' '[' int32 ']' 'as' id
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal653=(Token)match(input,277,FOLLOW_277_in_methodDecl15494); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal653_tree = (CommonTree)adaptor.create(string_literal653);
					adaptor.addChild(root_0, string_literal653_tree);
					}

					char_literal654=(Token)match(input,323,FOLLOW_323_in_methodDecl15496); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal654_tree = (CommonTree)adaptor.create(char_literal654);
					adaptor.addChild(root_0, char_literal654_tree);
					}

					pushFollow(FOLLOW_int32_in_methodDecl15498);
					int32655=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32655.getTree());

					char_literal656=(Token)match(input,324,FOLLOW_324_in_methodDecl15500); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal656_tree = (CommonTree)adaptor.create(char_literal656);
					adaptor.addChild(root_0, char_literal656_tree);
					}

					string_literal657=(Token)match(input,332,FOLLOW_332_in_methodDecl15502); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal657_tree = (CommonTree)adaptor.create(string_literal657);
					adaptor.addChild(root_0, string_literal657_tree);
					}

					pushFollow(FOLLOW_id_in_methodDecl15504);
					id658=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id658.getTree());

					}
					break;
				case 17 :
					// CIL.g:698:27: '.vtentry' int32 ':' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal659=(Token)match(input,314,FOLLOW_314_in_methodDecl15533); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal659_tree = (CommonTree)adaptor.create(string_literal659);
					adaptor.addChild(root_0, string_literal659_tree);
					}

					pushFollow(FOLLOW_int32_in_methodDecl15535);
					int32660=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32660.getTree());

					char_literal661=(Token)match(input,318,FOLLOW_318_in_methodDecl15537); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal661_tree = (CommonTree)adaptor.create(char_literal661);
					adaptor.addChild(root_0, char_literal661_tree);
					}

					pushFollow(FOLLOW_int32_in_methodDecl15539);
					int32662=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32662.getTree());

					}
					break;
				case 18 :
					// CIL.g:699:27: '.override' typeSpec '::' methodName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal663=(Token)match(input,296,FOLLOW_296_in_methodDecl15568); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal663_tree = (CommonTree)adaptor.create(string_literal663);
					adaptor.addChild(root_0, string_literal663_tree);
					}

					pushFollow(FOLLOW_typeSpec_in_methodDecl15570);
					typeSpec664=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec664.getTree());

					string_literal665=(Token)match(input,319,FOLLOW_319_in_methodDecl15572); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal665_tree = (CommonTree)adaptor.create(string_literal665);
					adaptor.addChild(root_0, string_literal665_tree);
					}

					pushFollow(FOLLOW_methodName_in_methodDecl15574);
					methodName666=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName666.getTree());

					}
					break;
				case 19 :
					// CIL.g:701:27: '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal667=(Token)match(input,296,FOLLOW_296_in_methodDecl15604); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal667_tree = (CommonTree)adaptor.create(string_literal667);
					adaptor.addChild(root_0, string_literal667_tree);
					}

					string_literal668=(Token)match(input,407,FOLLOW_407_in_methodDecl15606); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal668_tree = (CommonTree)adaptor.create(string_literal668);
					adaptor.addChild(root_0, string_literal668_tree);
					}

					pushFollow(FOLLOW_callConv_in_methodDecl15608);
					callConv669=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv669.getTree());

					pushFollow(FOLLOW_type_in_methodDecl15610);
					type670=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type670.getTree());

					pushFollow(FOLLOW_typeSpec_in_methodDecl15612);
					typeSpec671=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec671.getTree());

					string_literal672=(Token)match(input,319,FOLLOW_319_in_methodDecl15614); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal672_tree = (CommonTree)adaptor.create(string_literal672);
					adaptor.addChild(root_0, string_literal672_tree);
					}

					pushFollow(FOLLOW_methodName_in_methodDecl15616);
					methodName673=methodName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodName673.getTree());

					pushFollow(FOLLOW_genArity_in_methodDecl15618);
					genArity674=genArity();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, genArity674.getTree());

					char_literal675=(Token)match(input,258,FOLLOW_258_in_methodDecl15620); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal675_tree = (CommonTree)adaptor.create(char_literal675);
					adaptor.addChild(root_0, char_literal675_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_methodDecl15622);
					sigArgs0676=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs0676.getTree());

					char_literal677=(Token)match(input,259,FOLLOW_259_in_methodDecl15624); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal677_tree = (CommonTree)adaptor.create(char_literal677);
					adaptor.addChild(root_0, char_literal677_tree);
					}

					}
					break;
				case 20 :
					// CIL.g:702:27: scopeBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_scopeBlock_in_methodDecl15653);
					scopeBlock678=scopeBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, scopeBlock678.getTree());

					}
					break;
				case 21 :
					// CIL.g:703:27: 'param' 'type' '[' int32 ']'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal679=(Token)match(input,430,FOLLOW_430_in_methodDecl15681); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal679_tree = (CommonTree)adaptor.create(string_literal679);
					adaptor.addChild(root_0, string_literal679_tree);
					}

					string_literal680=(Token)match(input,472,FOLLOW_472_in_methodDecl15683); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal680_tree = (CommonTree)adaptor.create(string_literal680);
					adaptor.addChild(root_0, string_literal680_tree);
					}

					char_literal681=(Token)match(input,323,FOLLOW_323_in_methodDecl15685); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal681_tree = (CommonTree)adaptor.create(char_literal681);
					adaptor.addChild(root_0, char_literal681_tree);
					}

					pushFollow(FOLLOW_int32_in_methodDecl15687);
					int32682=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32682.getTree());

					char_literal683=(Token)match(input,324,FOLLOW_324_in_methodDecl15689); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal683_tree = (CommonTree)adaptor.create(char_literal683);
					adaptor.addChild(root_0, char_literal683_tree);
					}

					}
					break;
				case 22 :
					// CIL.g:704:27: 'param' 'type' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal684=(Token)match(input,430,FOLLOW_430_in_methodDecl15718); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal684_tree = (CommonTree)adaptor.create(string_literal684);
					adaptor.addChild(root_0, string_literal684_tree);
					}

					string_literal685=(Token)match(input,472,FOLLOW_472_in_methodDecl15720); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal685_tree = (CommonTree)adaptor.create(string_literal685);
					adaptor.addChild(root_0, string_literal685_tree);
					}

					pushFollow(FOLLOW_dottedName_in_methodDecl15722);
					dottedName686=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName686.getTree());

					}
					break;
				case 23 :
					// CIL.g:705:27: 'param' '[' int32 ']' initOpt
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal687=(Token)match(input,430,FOLLOW_430_in_methodDecl15751); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal687_tree = (CommonTree)adaptor.create(string_literal687);
					adaptor.addChild(root_0, string_literal687_tree);
					}

					char_literal688=(Token)match(input,323,FOLLOW_323_in_methodDecl15753); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal688_tree = (CommonTree)adaptor.create(char_literal688);
					adaptor.addChild(root_0, char_literal688_tree);
					}

					pushFollow(FOLLOW_int32_in_methodDecl15755);
					int32689=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32689.getTree());

					char_literal690=(Token)match(input,324,FOLLOW_324_in_methodDecl15757); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal690_tree = (CommonTree)adaptor.create(char_literal690);
					adaptor.addChild(root_0, char_literal690_tree);
					}

					pushFollow(FOLLOW_initOpt_in_methodDecl15759);
					initOpt691=initOpt();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, initOpt691.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "methodDecl"


	public static class scopeBlock_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "scopeBlock"
	// CIL.g:708:1: scopeBlock : scopeOpen methodDecls '}' ;
	public final CILParser.scopeBlock_return scopeBlock() throws RecognitionException {
		CILParser.scopeBlock_return retval = new CILParser.scopeBlock_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal694=null;
		ParserRuleReturnScope scopeOpen692 =null;
		ParserRuleReturnScope methodDecls693 =null;

		CommonTree char_literal694_tree=null;

		try {
			// CIL.g:708:25: ( scopeOpen methodDecls '}' )
			// CIL.g:708:27: scopeOpen methodDecls '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_scopeOpen_in_scopeBlock15806);
			scopeOpen692=scopeOpen();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, scopeOpen692.getTree());

			pushFollow(FOLLOW_methodDecls_in_scopeBlock15808);
			methodDecls693=methodDecls();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, methodDecls693.getTree());

			char_literal694=(Token)match(input,495,FOLLOW_495_in_scopeBlock15810); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal694_tree = (CommonTree)adaptor.create(char_literal694);
			adaptor.addChild(root_0, char_literal694_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "scopeBlock"


	public static class scopeOpen_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "scopeOpen"
	// CIL.g:711:1: scopeOpen : '{' ;
	public final CILParser.scopeOpen_return scopeOpen() throws RecognitionException {
		CILParser.scopeOpen_return retval = new CILParser.scopeOpen_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal695=null;

		CommonTree char_literal695_tree=null;

		try {
			// CIL.g:711:25: ( '{' )
			// CIL.g:711:27: '{'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal695=(Token)match(input,494,FOLLOW_494_in_scopeOpen15858); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal695_tree = (CommonTree)adaptor.create(char_literal695);
			adaptor.addChild(root_0, char_literal695_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "scopeOpen"


	public static class sehBlock_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sehBlock"
	// CIL.g:715:1: sehBlock : tryBlock sehClauses ;
	public final CILParser.sehBlock_return sehBlock() throws RecognitionException {
		CILParser.sehBlock_return retval = new CILParser.sehBlock_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope tryBlock696 =null;
		ParserRuleReturnScope sehClauses697 =null;


		try {
			// CIL.g:715:25: ( tryBlock sehClauses )
			// CIL.g:715:27: tryBlock sehClauses
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_tryBlock_in_sehBlock15935);
			tryBlock696=tryBlock();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, tryBlock696.getTree());

			pushFollow(FOLLOW_sehClauses_in_sehBlock15937);
			sehClauses697=sehClauses();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, sehClauses697.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sehBlock"


	public static class sehClauses_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sehClauses"
	// CIL.g:718:1: sehClauses : ( sehClause sehClauses | sehClause );
	public final CILParser.sehClauses_return sehClauses() throws RecognitionException {
		CILParser.sehClauses_return retval = new CILParser.sehClauses_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope sehClause698 =null;
		ParserRuleReturnScope sehClauses699 =null;
		ParserRuleReturnScope sehClause700 =null;


		try {
			// CIL.g:718:25: ( sehClause sehClauses | sehClause )
			int alt57=2;
			switch ( input.LA(1) ) {
			case CATCH:
				{
				int LA57_1 = input.LA(2);
				if ( (synpred255_CIL()) ) {
					alt57=1;
				}
				else if ( (true) ) {
					alt57=2;
				}

				}
				break;
			case 363:
				{
				int LA57_2 = input.LA(2);
				if ( (synpred255_CIL()) ) {
					alt57=1;
				}
				else if ( (true) ) {
					alt57=2;
				}

				}
				break;
			case 365:
				{
				int LA57_3 = input.LA(2);
				if ( (synpred255_CIL()) ) {
					alt57=1;
				}
				else if ( (true) ) {
					alt57=2;
				}

				}
				break;
			case 360:
				{
				int LA57_4 = input.LA(2);
				if ( (synpred255_CIL()) ) {
					alt57=1;
				}
				else if ( (true) ) {
					alt57=2;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 57, 0, input);
				throw nvae;
			}
			switch (alt57) {
				case 1 :
					// CIL.g:718:27: sehClause sehClauses
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_sehClause_in_sehClauses15983);
					sehClause698=sehClause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sehClause698.getTree());

					pushFollow(FOLLOW_sehClauses_in_sehClauses15985);
					sehClauses699=sehClauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sehClauses699.getTree());

					}
					break;
				case 2 :
					// CIL.g:719:27: sehClause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_sehClause_in_sehClauses16013);
					sehClause700=sehClause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sehClause700.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sehClauses"


	public static class tryBlock_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "tryBlock"
	// CIL.g:722:1: tryBlock : ( tryHead scopeBlock | tryHead id 'to' id | tryHead int32 'to' int32 );
	public final CILParser.tryBlock_return tryBlock() throws RecognitionException {
		CILParser.tryBlock_return retval = new CILParser.tryBlock_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal705=null;
		Token string_literal709=null;
		ParserRuleReturnScope tryHead701 =null;
		ParserRuleReturnScope scopeBlock702 =null;
		ParserRuleReturnScope tryHead703 =null;
		ParserRuleReturnScope id704 =null;
		ParserRuleReturnScope id706 =null;
		ParserRuleReturnScope tryHead707 =null;
		ParserRuleReturnScope int32708 =null;
		ParserRuleReturnScope int32710 =null;

		CommonTree string_literal705_tree=null;
		CommonTree string_literal709_tree=null;

		try {
			// CIL.g:722:25: ( tryHead scopeBlock | tryHead id 'to' id | tryHead int32 'to' int32 )
			int alt58=3;
			int LA58_0 = input.LA(1);
			if ( (LA58_0==309) ) {
				switch ( input.LA(2) ) {
				case 494:
					{
					alt58=1;
					}
					break;
				case ID:
				case SQSTRING:
					{
					alt58=2;
					}
					break;
				case INT32:
					{
					alt58=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 58, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 58, 0, input);
				throw nvae;
			}

			switch (alt58) {
				case 1 :
					// CIL.g:722:27: tryHead scopeBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_tryHead_in_tryBlock16061);
					tryHead701=tryHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tryHead701.getTree());

					pushFollow(FOLLOW_scopeBlock_in_tryBlock16063);
					scopeBlock702=scopeBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, scopeBlock702.getTree());

					}
					break;
				case 2 :
					// CIL.g:723:27: tryHead id 'to' id
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_tryHead_in_tryBlock16092);
					tryHead703=tryHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tryHead703.getTree());

					pushFollow(FOLLOW_id_in_tryBlock16094);
					id704=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id704.getTree());

					string_literal705=(Token)match(input,470,FOLLOW_470_in_tryBlock16096); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal705_tree = (CommonTree)adaptor.create(string_literal705);
					adaptor.addChild(root_0, string_literal705_tree);
					}

					pushFollow(FOLLOW_id_in_tryBlock16098);
					id706=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id706.getTree());

					}
					break;
				case 3 :
					// CIL.g:724:27: tryHead int32 'to' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_tryHead_in_tryBlock16127);
					tryHead707=tryHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tryHead707.getTree());

					pushFollow(FOLLOW_int32_in_tryBlock16129);
					int32708=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32708.getTree());

					string_literal709=(Token)match(input,470,FOLLOW_470_in_tryBlock16131); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal709_tree = (CommonTree)adaptor.create(string_literal709);
					adaptor.addChild(root_0, string_literal709_tree);
					}

					pushFollow(FOLLOW_int32_in_tryBlock16133);
					int32710=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32710.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tryBlock"


	public static class tryHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "tryHead"
	// CIL.g:727:1: tryHead : '.try' ;
	public final CILParser.tryHead_return tryHead() throws RecognitionException {
		CILParser.tryHead_return retval = new CILParser.tryHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal711=null;

		CommonTree string_literal711_tree=null;

		try {
			// CIL.g:727:25: ( '.try' )
			// CIL.g:727:27: '.try'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal711=(Token)match(input,309,FOLLOW_309_in_tryHead16183); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal711_tree = (CommonTree)adaptor.create(string_literal711);
			adaptor.addChild(root_0, string_literal711_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tryHead"


	public static class sehClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sehClause"
	// CIL.g:731:1: sehClause : ( catchClause handlerBlock | filterClause handlerBlock | finallyClause handlerBlock | faultClause handlerBlock );
	public final CILParser.sehClause_return sehClause() throws RecognitionException {
		CILParser.sehClause_return retval = new CILParser.sehClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope catchClause712 =null;
		ParserRuleReturnScope handlerBlock713 =null;
		ParserRuleReturnScope filterClause714 =null;
		ParserRuleReturnScope handlerBlock715 =null;
		ParserRuleReturnScope finallyClause716 =null;
		ParserRuleReturnScope handlerBlock717 =null;
		ParserRuleReturnScope faultClause718 =null;
		ParserRuleReturnScope handlerBlock719 =null;


		try {
			// CIL.g:731:25: ( catchClause handlerBlock | filterClause handlerBlock | finallyClause handlerBlock | faultClause handlerBlock )
			int alt59=4;
			switch ( input.LA(1) ) {
			case CATCH:
				{
				alt59=1;
				}
				break;
			case 363:
				{
				alt59=2;
				}
				break;
			case 365:
				{
				alt59=3;
				}
				break;
			case 360:
				{
				alt59=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 59, 0, input);
				throw nvae;
			}
			switch (alt59) {
				case 1 :
					// CIL.g:731:27: catchClause handlerBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_catchClause_in_sehClause16232);
					catchClause712=catchClause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, catchClause712.getTree());

					pushFollow(FOLLOW_handlerBlock_in_sehClause16234);
					handlerBlock713=handlerBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, handlerBlock713.getTree());

					}
					break;
				case 2 :
					// CIL.g:732:27: filterClause handlerBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_filterClause_in_sehClause16263);
					filterClause714=filterClause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, filterClause714.getTree());

					pushFollow(FOLLOW_handlerBlock_in_sehClause16265);
					handlerBlock715=handlerBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, handlerBlock715.getTree());

					}
					break;
				case 3 :
					// CIL.g:733:27: finallyClause handlerBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_finallyClause_in_sehClause16294);
					finallyClause716=finallyClause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, finallyClause716.getTree());

					pushFollow(FOLLOW_handlerBlock_in_sehClause16296);
					handlerBlock717=handlerBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, handlerBlock717.getTree());

					}
					break;
				case 4 :
					// CIL.g:734:27: faultClause handlerBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_faultClause_in_sehClause16325);
					faultClause718=faultClause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, faultClause718.getTree());

					pushFollow(FOLLOW_handlerBlock_in_sehClause16327);
					handlerBlock719=handlerBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, handlerBlock719.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sehClause"


	public static class filterClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "filterClause"
	// CIL.g:738:1: filterClause : ( filterHead scopeBlock | filterHead id | filterHead int32 );
	public final CILParser.filterClause_return filterClause() throws RecognitionException {
		CILParser.filterClause_return retval = new CILParser.filterClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope filterHead720 =null;
		ParserRuleReturnScope scopeBlock721 =null;
		ParserRuleReturnScope filterHead722 =null;
		ParserRuleReturnScope id723 =null;
		ParserRuleReturnScope filterHead724 =null;
		ParserRuleReturnScope int32725 =null;


		try {
			// CIL.g:738:25: ( filterHead scopeBlock | filterHead id | filterHead int32 )
			int alt60=3;
			int LA60_0 = input.LA(1);
			if ( (LA60_0==363) ) {
				switch ( input.LA(2) ) {
				case 494:
					{
					alt60=1;
					}
					break;
				case ID:
				case SQSTRING:
					{
					alt60=2;
					}
					break;
				case INT32:
					{
					alt60=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 60, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				throw nvae;
			}

			switch (alt60) {
				case 1 :
					// CIL.g:738:27: filterHead scopeBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_filterHead_in_filterClause16501);
					filterHead720=filterHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, filterHead720.getTree());

					pushFollow(FOLLOW_scopeBlock_in_filterClause16503);
					scopeBlock721=scopeBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, scopeBlock721.getTree());

					}
					break;
				case 2 :
					// CIL.g:739:27: filterHead id
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_filterHead_in_filterClause16532);
					filterHead722=filterHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, filterHead722.getTree());

					pushFollow(FOLLOW_id_in_filterClause16534);
					id723=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id723.getTree());

					}
					break;
				case 3 :
					// CIL.g:740:27: filterHead int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_filterHead_in_filterClause16563);
					filterHead724=filterHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, filterHead724.getTree());

					pushFollow(FOLLOW_int32_in_filterClause16565);
					int32725=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32725.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "filterClause"


	public static class filterHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "filterHead"
	// CIL.g:743:1: filterHead : 'filter' ;
	public final CILParser.filterHead_return filterHead() throws RecognitionException {
		CILParser.filterHead_return retval = new CILParser.filterHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal726=null;

		CommonTree string_literal726_tree=null;

		try {
			// CIL.g:743:25: ( 'filter' )
			// CIL.g:743:27: 'filter'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal726=(Token)match(input,363,FOLLOW_363_in_filterHead16612); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal726_tree = (CommonTree)adaptor.create(string_literal726);
			adaptor.addChild(root_0, string_literal726_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "filterHead"


	public static class catchClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "catchClause"
	// CIL.g:746:1: catchClause : 'catch' typeSpec ;
	public final CILParser.catchClause_return catchClause() throws RecognitionException {
		CILParser.catchClause_return retval = new CILParser.catchClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal727=null;
		ParserRuleReturnScope typeSpec728 =null;

		CommonTree string_literal727_tree=null;

		try {
			// CIL.g:746:25: ( 'catch' typeSpec )
			// CIL.g:746:27: 'catch' typeSpec
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal727=(Token)match(input,CATCH,FOLLOW_CATCH_in_catchClause16659); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal727_tree = (CommonTree)adaptor.create(string_literal727);
			adaptor.addChild(root_0, string_literal727_tree);
			}

			pushFollow(FOLLOW_typeSpec_in_catchClause16661);
			typeSpec728=typeSpec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec728.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "catchClause"


	public static class finallyClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "finallyClause"
	// CIL.g:749:1: finallyClause : 'finally' ;
	public final CILParser.finallyClause_return finallyClause() throws RecognitionException {
		CILParser.finallyClause_return retval = new CILParser.finallyClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal729=null;

		CommonTree string_literal729_tree=null;

		try {
			// CIL.g:749:25: ( 'finally' )
			// CIL.g:749:27: 'finally'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal729=(Token)match(input,365,FOLLOW_365_in_finallyClause16705); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal729_tree = (CommonTree)adaptor.create(string_literal729);
			adaptor.addChild(root_0, string_literal729_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "finallyClause"


	public static class faultClause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "faultClause"
	// CIL.g:752:1: faultClause : 'fault' ;
	public final CILParser.faultClause_return faultClause() throws RecognitionException {
		CILParser.faultClause_return retval = new CILParser.faultClause_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal730=null;

		CommonTree string_literal730_tree=null;

		try {
			// CIL.g:752:25: ( 'fault' )
			// CIL.g:752:27: 'fault'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal730=(Token)match(input,360,FOLLOW_360_in_faultClause16751); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal730_tree = (CommonTree)adaptor.create(string_literal730);
			adaptor.addChild(root_0, string_literal730_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "faultClause"


	public static class handlerBlock_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "handlerBlock"
	// CIL.g:755:1: handlerBlock : ( scopeBlock | 'handler' id 'to' id | 'handler' int32 'to' int32 );
	public final CILParser.handlerBlock_return handlerBlock() throws RecognitionException {
		CILParser.handlerBlock_return retval = new CILParser.handlerBlock_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal732=null;
		Token string_literal734=null;
		Token string_literal736=null;
		Token string_literal738=null;
		ParserRuleReturnScope scopeBlock731 =null;
		ParserRuleReturnScope id733 =null;
		ParserRuleReturnScope id735 =null;
		ParserRuleReturnScope int32737 =null;
		ParserRuleReturnScope int32739 =null;

		CommonTree string_literal732_tree=null;
		CommonTree string_literal734_tree=null;
		CommonTree string_literal736_tree=null;
		CommonTree string_literal738_tree=null;

		try {
			// CIL.g:755:25: ( scopeBlock | 'handler' id 'to' id | 'handler' int32 'to' int32 )
			int alt61=3;
			int LA61_0 = input.LA(1);
			if ( (LA61_0==494) ) {
				alt61=1;
			}
			else if ( (LA61_0==374) ) {
				int LA61_2 = input.LA(2);
				if ( (LA61_2==ID||LA61_2==SQSTRING) ) {
					alt61=2;
				}
				else if ( (LA61_2==INT32) ) {
					alt61=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 61, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 61, 0, input);
				throw nvae;
			}

			switch (alt61) {
				case 1 :
					// CIL.g:755:27: scopeBlock
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_scopeBlock_in_handlerBlock16796);
					scopeBlock731=scopeBlock();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, scopeBlock731.getTree());

					}
					break;
				case 2 :
					// CIL.g:756:27: 'handler' id 'to' id
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal732=(Token)match(input,374,FOLLOW_374_in_handlerBlock16842); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal732_tree = (CommonTree)adaptor.create(string_literal732);
					adaptor.addChild(root_0, string_literal732_tree);
					}

					pushFollow(FOLLOW_id_in_handlerBlock16844);
					id733=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id733.getTree());

					string_literal734=(Token)match(input,470,FOLLOW_470_in_handlerBlock16846); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal734_tree = (CommonTree)adaptor.create(string_literal734);
					adaptor.addChild(root_0, string_literal734_tree);
					}

					pushFollow(FOLLOW_id_in_handlerBlock16848);
					id735=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id735.getTree());

					}
					break;
				case 3 :
					// CIL.g:757:27: 'handler' int32 'to' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal736=(Token)match(input,374,FOLLOW_374_in_handlerBlock16877); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal736_tree = (CommonTree)adaptor.create(string_literal736);
					adaptor.addChild(root_0, string_literal736_tree);
					}

					pushFollow(FOLLOW_int32_in_handlerBlock16879);
					int32737=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32737.getTree());

					string_literal738=(Token)match(input,470,FOLLOW_470_in_handlerBlock16881); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal738_tree = (CommonTree)adaptor.create(string_literal738);
					adaptor.addChild(root_0, string_literal738_tree);
					}

					pushFollow(FOLLOW_int32_in_handlerBlock16883);
					int32739=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32739.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "handlerBlock"


	public static class dataDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "dataDecl"
	// CIL.g:761:1: dataDecl : ddHead ddBody ;
	public final CILParser.dataDecl_return dataDecl() throws RecognitionException {
		CILParser.dataDecl_return retval = new CILParser.dataDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope ddHead740 =null;
		ParserRuleReturnScope ddBody741 =null;


		try {
			// CIL.g:761:25: ( ddHead ddBody )
			// CIL.g:761:27: ddHead ddBody
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_ddHead_in_dataDecl16934);
			ddHead740=ddHead();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ddHead740.getTree());

			pushFollow(FOLLOW_ddBody_in_dataDecl16936);
			ddBody741=ddBody();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ddBody741.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dataDecl"


	public static class ddHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ddHead"
	// CIL.g:764:1: ddHead : ( '.data' tls id '=' | '.data' tls );
	public final CILParser.ddHead_return ddHead() throws RecognitionException {
		CILParser.ddHead_return retval = new CILParser.ddHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal742=null;
		Token char_literal745=null;
		Token string_literal746=null;
		ParserRuleReturnScope tls743 =null;
		ParserRuleReturnScope id744 =null;
		ParserRuleReturnScope tls747 =null;

		CommonTree string_literal742_tree=null;
		CommonTree char_literal745_tree=null;
		CommonTree string_literal746_tree=null;

		try {
			// CIL.g:764:25: ( '.data' tls id '=' | '.data' tls )
			int alt62=2;
			int LA62_0 = input.LA(1);
			if ( (LA62_0==273) ) {
				switch ( input.LA(2) ) {
				case ID:
				case SQSTRING:
					{
					alt62=1;
					}
					break;
				case 469:
					{
					int LA62_3 = input.LA(3);
					if ( (LA62_3==ID||LA62_3==SQSTRING) ) {
						alt62=1;
					}
					else if ( (LA62_3==BYTEARRAY||LA62_3==CHAR||LA62_3==257||(LA62_3 >= 369 && LA62_3 <= 370)||(LA62_3 >= 388 && LA62_3 <= 391)||LA62_3==494) ) {
						alt62=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 62, 3, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case CIL:
					{
					int LA62_4 = input.LA(3);
					if ( (LA62_4==ID||LA62_4==SQSTRING) ) {
						alt62=1;
					}
					else if ( (LA62_4==BYTEARRAY||LA62_4==CHAR||LA62_4==257||(LA62_4 >= 369 && LA62_4 <= 370)||(LA62_4 >= 388 && LA62_4 <= 391)||LA62_4==494) ) {
						alt62=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 62, 4, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case BYTEARRAY:
				case CHAR:
				case 257:
				case 369:
				case 370:
				case 388:
				case 389:
				case 390:
				case 391:
				case 494:
					{
					alt62=2;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 62, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 62, 0, input);
				throw nvae;
			}

			switch (alt62) {
				case 1 :
					// CIL.g:764:27: '.data' tls id '='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal742=(Token)match(input,273,FOLLOW_273_in_ddHead16986); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal742_tree = (CommonTree)adaptor.create(string_literal742);
					adaptor.addChild(root_0, string_literal742_tree);
					}

					pushFollow(FOLLOW_tls_in_ddHead16988);
					tls743=tls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tls743.getTree());

					pushFollow(FOLLOW_id_in_ddHead16990);
					id744=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id744.getTree());

					char_literal745=(Token)match(input,321,FOLLOW_321_in_ddHead16992); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal745_tree = (CommonTree)adaptor.create(char_literal745);
					adaptor.addChild(root_0, char_literal745_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:765:27: '.data' tls
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal746=(Token)match(input,273,FOLLOW_273_in_ddHead17021); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal746_tree = (CommonTree)adaptor.create(string_literal746);
					adaptor.addChild(root_0, string_literal746_tree);
					}

					pushFollow(FOLLOW_tls_in_ddHead17023);
					tls747=tls();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tls747.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "ddHead"


	public static class tls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "tls"
	// CIL.g:768:1: tls : (| 'tls' | 'cil' );
	public final CILParser.tls_return tls() throws RecognitionException {
		CILParser.tls_return retval = new CILParser.tls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal748=null;
		Token string_literal749=null;

		CommonTree string_literal748_tree=null;
		CommonTree string_literal749_tree=null;

		try {
			// CIL.g:768:25: (| 'tls' | 'cil' )
			int alt63=3;
			switch ( input.LA(1) ) {
			case BYTEARRAY:
			case CHAR:
			case ID:
			case SQSTRING:
			case 257:
			case 369:
			case 370:
			case 388:
			case 389:
			case 390:
			case 391:
			case 494:
				{
				alt63=1;
				}
				break;
			case 469:
				{
				alt63=2;
				}
				break;
			case CIL:
				{
				alt63=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 63, 0, input);
				throw nvae;
			}
			switch (alt63) {
				case 1 :
					// CIL.g:769:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:769:27: 'tls'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal748=(Token)match(input,469,FOLLOW_469_in_tls17107); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal748_tree = (CommonTree)adaptor.create(string_literal748);
					adaptor.addChild(root_0, string_literal748_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:770:27: 'cil'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal749=(Token)match(input,CIL,FOLLOW_CIL_in_tls17136); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal749_tree = (CommonTree)adaptor.create(string_literal749);
					adaptor.addChild(root_0, string_literal749_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tls"


	public static class ddBody_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ddBody"
	// CIL.g:773:1: ddBody : ( '{' ddItemList '}' | ddItem );
	public final CILParser.ddBody_return ddBody() throws RecognitionException {
		CILParser.ddBody_return retval = new CILParser.ddBody_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal750=null;
		Token char_literal752=null;
		ParserRuleReturnScope ddItemList751 =null;
		ParserRuleReturnScope ddItem753 =null;

		CommonTree char_literal750_tree=null;
		CommonTree char_literal752_tree=null;

		try {
			// CIL.g:773:25: ( '{' ddItemList '}' | ddItem )
			int alt64=2;
			int LA64_0 = input.LA(1);
			if ( (LA64_0==494) ) {
				alt64=1;
			}
			else if ( (LA64_0==BYTEARRAY||LA64_0==CHAR||LA64_0==257||(LA64_0 >= 369 && LA64_0 <= 370)||(LA64_0 >= 388 && LA64_0 <= 391)) ) {
				alt64=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 64, 0, input);
				throw nvae;
			}

			switch (alt64) {
				case 1 :
					// CIL.g:773:27: '{' ddItemList '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal750=(Token)match(input,494,FOLLOW_494_in_ddBody17187); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal750_tree = (CommonTree)adaptor.create(char_literal750);
					adaptor.addChild(root_0, char_literal750_tree);
					}

					pushFollow(FOLLOW_ddItemList_in_ddBody17189);
					ddItemList751=ddItemList();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemList751.getTree());

					char_literal752=(Token)match(input,495,FOLLOW_495_in_ddBody17191); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal752_tree = (CommonTree)adaptor.create(char_literal752);
					adaptor.addChild(root_0, char_literal752_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:774:27: ddItem
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_ddItem_in_ddBody17219);
					ddItem753=ddItem();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItem753.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "ddBody"


	public static class ddItemList_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ddItemList"
	// CIL.g:777:1: ddItemList : ( ddItem ',' ddItemList | ddItem );
	public final CILParser.ddItemList_return ddItemList() throws RecognitionException {
		CILParser.ddItemList_return retval = new CILParser.ddItemList_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal755=null;
		ParserRuleReturnScope ddItem754 =null;
		ParserRuleReturnScope ddItemList756 =null;
		ParserRuleReturnScope ddItem757 =null;

		CommonTree char_literal755_tree=null;

		try {
			// CIL.g:777:25: ( ddItem ',' ddItemList | ddItem )
			int alt65=2;
			alt65 = dfa65.predict(input);
			switch (alt65) {
				case 1 :
					// CIL.g:777:27: ddItem ',' ddItemList
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_ddItem_in_ddItemList17265);
					ddItem754=ddItem();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItem754.getTree());

					char_literal755=(Token)match(input,262,FOLLOW_262_in_ddItemList17267); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal755_tree = (CommonTree)adaptor.create(char_literal755);
					adaptor.addChild(root_0, char_literal755_tree);
					}

					pushFollow(FOLLOW_ddItemList_in_ddItemList17269);
					ddItemList756=ddItemList();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemList756.getTree());

					}
					break;
				case 2 :
					// CIL.g:778:27: ddItem
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_ddItem_in_ddItemList17297);
					ddItem757=ddItem();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItem757.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "ddItemList"


	public static class ddItemCount_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ddItemCount"
	// CIL.g:781:1: ddItemCount : (| '[' int32 ']' );
	public final CILParser.ddItemCount_return ddItemCount() throws RecognitionException {
		CILParser.ddItemCount_return retval = new CILParser.ddItemCount_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal758=null;
		Token char_literal760=null;
		ParserRuleReturnScope int32759 =null;

		CommonTree char_literal758_tree=null;
		CommonTree char_literal760_tree=null;

		try {
			// CIL.g:781:25: (| '[' int32 ']' )
			int alt66=2;
			int LA66_0 = input.LA(1);
			if ( (LA66_0==EOF||(LA66_0 >= ADD && LA66_0 <= BLE_UN_S)||(LA66_0 >= BLT && LA66_0 <= BRFALSE_S)||(LA66_0 >= BRTRUE && LA66_0 <= BRTRUE_S)||LA66_0==BR_S||(LA66_0 >= CALL && LA66_0 <= CALLI)||LA66_0==CALLVIRT||LA66_0==CASTCLASS||LA66_0==CEQ||(LA66_0 >= CGT && LA66_0 <= CGT_UN)||LA66_0==CKFINITE||(LA66_0 >= CLT && LA66_0 <= CLT_UN)||(LA66_0 >= CONV_I && LA66_0 <= CPOBJ)||(LA66_0 >= DIV && LA66_0 <= DIV_UN)||(LA66_0 >= DUP && LA66_0 <= ENDFINALLY)||(LA66_0 >= ID && LA66_0 <= INITOBJ)||(LA66_0 >= ISINST && LA66_0 <= LDELEM_U4)||(LA66_0 >= LDFLD && LA66_0 <= LDIND_U4)||(LA66_0 >= LDLEN && LA66_0 <= LEAVE_S)||(LA66_0 >= LOCALLOC && LA66_0 <= POP)||(LA66_0 >= REFANYTYPE && LA66_0 <= REM_UN)||(LA66_0 >= RET && LA66_0 <= VOLATILE_)||LA66_0==XOR||LA66_0==262||LA66_0==266||(LA66_0 >= 269 && LA66_0 <= 270)||(LA66_0 >= 272 && LA66_0 <= 279)||(LA66_0 >= 283 && LA66_0 <= 285)||(LA66_0 >= 287 && LA66_0 <= 293)||(LA66_0 >= 296 && LA66_0 <= 300)||(LA66_0 >= 305 && LA66_0 <= 307)||(LA66_0 >= 309 && LA66_0 <= 311)||(LA66_0 >= 313 && LA66_0 <= 316)||LA66_0==430||(LA66_0 >= 494 && LA66_0 <= 495)) ) {
				alt66=1;
			}
			else if ( (LA66_0==323) ) {
				alt66=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 66, 0, input);
				throw nvae;
			}

			switch (alt66) {
				case 1 :
					// CIL.g:782:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:782:27: '[' int32 ']'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal758=(Token)match(input,323,FOLLOW_323_in_ddItemCount17371); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal758_tree = (CommonTree)adaptor.create(char_literal758);
					adaptor.addChild(root_0, char_literal758_tree);
					}

					pushFollow(FOLLOW_int32_in_ddItemCount17373);
					int32759=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32759.getTree());

					char_literal760=(Token)match(input,324,FOLLOW_324_in_ddItemCount17375); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal760_tree = (CommonTree)adaptor.create(char_literal760);
					adaptor.addChild(root_0, char_literal760_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "ddItemCount"


	public static class ddItem_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ddItem"
	// CIL.g:785:1: ddItem : ( 'char' '*' '(' compQstring ')' | '&' '(' id ')' | bytearrayhead bytes ')' | 'float32' '(' float64 ')' ddItemCount | 'float64' '(' float64 ')' ddItemCount | 'int64' '(' int64 ')' ddItemCount | 'int32' '(' int32 ')' ddItemCount | 'int16' '(' int32 ')' ddItemCount | 'int8' '(' int32 ')' ddItemCount | 'float32' ddItemCount | 'float64' ddItemCount | 'int64' ddItemCount | 'int32' ddItemCount | 'int16' ddItemCount | 'int8' ddItemCount );
	public final CILParser.ddItem_return ddItem() throws RecognitionException {
		CILParser.ddItem_return retval = new CILParser.ddItem_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal761=null;
		Token char_literal762=null;
		Token char_literal763=null;
		Token char_literal765=null;
		Token char_literal766=null;
		Token char_literal767=null;
		Token char_literal769=null;
		Token char_literal772=null;
		Token string_literal773=null;
		Token char_literal774=null;
		Token char_literal776=null;
		Token string_literal778=null;
		Token char_literal779=null;
		Token char_literal781=null;
		Token string_literal783=null;
		Token char_literal784=null;
		Token char_literal786=null;
		Token string_literal788=null;
		Token char_literal789=null;
		Token char_literal791=null;
		Token string_literal793=null;
		Token char_literal794=null;
		Token char_literal796=null;
		Token string_literal798=null;
		Token char_literal799=null;
		Token char_literal801=null;
		Token string_literal803=null;
		Token string_literal805=null;
		Token string_literal807=null;
		Token string_literal809=null;
		Token string_literal811=null;
		Token string_literal813=null;
		ParserRuleReturnScope compQstring764 =null;
		ParserRuleReturnScope id768 =null;
		ParserRuleReturnScope bytearrayhead770 =null;
		ParserRuleReturnScope bytes771 =null;
		ParserRuleReturnScope float64775 =null;
		ParserRuleReturnScope ddItemCount777 =null;
		ParserRuleReturnScope float64780 =null;
		ParserRuleReturnScope ddItemCount782 =null;
		ParserRuleReturnScope int64785 =null;
		ParserRuleReturnScope ddItemCount787 =null;
		ParserRuleReturnScope int32790 =null;
		ParserRuleReturnScope ddItemCount792 =null;
		ParserRuleReturnScope int32795 =null;
		ParserRuleReturnScope ddItemCount797 =null;
		ParserRuleReturnScope int32800 =null;
		ParserRuleReturnScope ddItemCount802 =null;
		ParserRuleReturnScope ddItemCount804 =null;
		ParserRuleReturnScope ddItemCount806 =null;
		ParserRuleReturnScope ddItemCount808 =null;
		ParserRuleReturnScope ddItemCount810 =null;
		ParserRuleReturnScope ddItemCount812 =null;
		ParserRuleReturnScope ddItemCount814 =null;

		CommonTree string_literal761_tree=null;
		CommonTree char_literal762_tree=null;
		CommonTree char_literal763_tree=null;
		CommonTree char_literal765_tree=null;
		CommonTree char_literal766_tree=null;
		CommonTree char_literal767_tree=null;
		CommonTree char_literal769_tree=null;
		CommonTree char_literal772_tree=null;
		CommonTree string_literal773_tree=null;
		CommonTree char_literal774_tree=null;
		CommonTree char_literal776_tree=null;
		CommonTree string_literal778_tree=null;
		CommonTree char_literal779_tree=null;
		CommonTree char_literal781_tree=null;
		CommonTree string_literal783_tree=null;
		CommonTree char_literal784_tree=null;
		CommonTree char_literal786_tree=null;
		CommonTree string_literal788_tree=null;
		CommonTree char_literal789_tree=null;
		CommonTree char_literal791_tree=null;
		CommonTree string_literal793_tree=null;
		CommonTree char_literal794_tree=null;
		CommonTree char_literal796_tree=null;
		CommonTree string_literal798_tree=null;
		CommonTree char_literal799_tree=null;
		CommonTree char_literal801_tree=null;
		CommonTree string_literal803_tree=null;
		CommonTree string_literal805_tree=null;
		CommonTree string_literal807_tree=null;
		CommonTree string_literal809_tree=null;
		CommonTree string_literal811_tree=null;
		CommonTree string_literal813_tree=null;

		try {
			// CIL.g:785:25: ( 'char' '*' '(' compQstring ')' | '&' '(' id ')' | bytearrayhead bytes ')' | 'float32' '(' float64 ')' ddItemCount | 'float64' '(' float64 ')' ddItemCount | 'int64' '(' int64 ')' ddItemCount | 'int32' '(' int32 ')' ddItemCount | 'int16' '(' int32 ')' ddItemCount | 'int8' '(' int32 ')' ddItemCount | 'float32' ddItemCount | 'float64' ddItemCount | 'int64' ddItemCount | 'int32' ddItemCount | 'int16' ddItemCount | 'int8' ddItemCount )
			int alt67=15;
			switch ( input.LA(1) ) {
			case CHAR:
				{
				alt67=1;
				}
				break;
			case 257:
				{
				alt67=2;
				}
				break;
			case BYTEARRAY:
				{
				alt67=3;
				}
				break;
			case 369:
				{
				int LA67_4 = input.LA(2);
				if ( (LA67_4==258) ) {
					alt67=4;
				}
				else if ( (LA67_4==EOF||(LA67_4 >= ADD && LA67_4 <= BLE_UN_S)||(LA67_4 >= BLT && LA67_4 <= BRFALSE_S)||(LA67_4 >= BRTRUE && LA67_4 <= BRTRUE_S)||LA67_4==BR_S||(LA67_4 >= CALL && LA67_4 <= CALLI)||LA67_4==CALLVIRT||LA67_4==CASTCLASS||LA67_4==CEQ||(LA67_4 >= CGT && LA67_4 <= CGT_UN)||LA67_4==CKFINITE||(LA67_4 >= CLT && LA67_4 <= CLT_UN)||(LA67_4 >= CONV_I && LA67_4 <= CPOBJ)||(LA67_4 >= DIV && LA67_4 <= DIV_UN)||(LA67_4 >= DUP && LA67_4 <= ENDFINALLY)||(LA67_4 >= ID && LA67_4 <= INITOBJ)||(LA67_4 >= ISINST && LA67_4 <= LDELEM_U4)||(LA67_4 >= LDFLD && LA67_4 <= LDIND_U4)||(LA67_4 >= LDLEN && LA67_4 <= LEAVE_S)||(LA67_4 >= LOCALLOC && LA67_4 <= POP)||(LA67_4 >= REFANYTYPE && LA67_4 <= REM_UN)||(LA67_4 >= RET && LA67_4 <= VOLATILE_)||LA67_4==XOR||LA67_4==262||LA67_4==266||(LA67_4 >= 269 && LA67_4 <= 270)||(LA67_4 >= 272 && LA67_4 <= 279)||(LA67_4 >= 283 && LA67_4 <= 285)||(LA67_4 >= 287 && LA67_4 <= 293)||(LA67_4 >= 296 && LA67_4 <= 300)||(LA67_4 >= 305 && LA67_4 <= 307)||(LA67_4 >= 309 && LA67_4 <= 311)||(LA67_4 >= 313 && LA67_4 <= 316)||LA67_4==323||LA67_4==430||(LA67_4 >= 494 && LA67_4 <= 495)) ) {
					alt67=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 370:
				{
				int LA67_5 = input.LA(2);
				if ( (LA67_5==258) ) {
					alt67=5;
				}
				else if ( (LA67_5==EOF||(LA67_5 >= ADD && LA67_5 <= BLE_UN_S)||(LA67_5 >= BLT && LA67_5 <= BRFALSE_S)||(LA67_5 >= BRTRUE && LA67_5 <= BRTRUE_S)||LA67_5==BR_S||(LA67_5 >= CALL && LA67_5 <= CALLI)||LA67_5==CALLVIRT||LA67_5==CASTCLASS||LA67_5==CEQ||(LA67_5 >= CGT && LA67_5 <= CGT_UN)||LA67_5==CKFINITE||(LA67_5 >= CLT && LA67_5 <= CLT_UN)||(LA67_5 >= CONV_I && LA67_5 <= CPOBJ)||(LA67_5 >= DIV && LA67_5 <= DIV_UN)||(LA67_5 >= DUP && LA67_5 <= ENDFINALLY)||(LA67_5 >= ID && LA67_5 <= INITOBJ)||(LA67_5 >= ISINST && LA67_5 <= LDELEM_U4)||(LA67_5 >= LDFLD && LA67_5 <= LDIND_U4)||(LA67_5 >= LDLEN && LA67_5 <= LEAVE_S)||(LA67_5 >= LOCALLOC && LA67_5 <= POP)||(LA67_5 >= REFANYTYPE && LA67_5 <= REM_UN)||(LA67_5 >= RET && LA67_5 <= VOLATILE_)||LA67_5==XOR||LA67_5==262||LA67_5==266||(LA67_5 >= 269 && LA67_5 <= 270)||(LA67_5 >= 272 && LA67_5 <= 279)||(LA67_5 >= 283 && LA67_5 <= 285)||(LA67_5 >= 287 && LA67_5 <= 293)||(LA67_5 >= 296 && LA67_5 <= 300)||(LA67_5 >= 305 && LA67_5 <= 307)||(LA67_5 >= 309 && LA67_5 <= 311)||(LA67_5 >= 313 && LA67_5 <= 316)||LA67_5==323||LA67_5==430||(LA67_5 >= 494 && LA67_5 <= 495)) ) {
					alt67=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 5, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 390:
				{
				int LA67_6 = input.LA(2);
				if ( (LA67_6==258) ) {
					alt67=6;
				}
				else if ( (LA67_6==EOF||(LA67_6 >= ADD && LA67_6 <= BLE_UN_S)||(LA67_6 >= BLT && LA67_6 <= BRFALSE_S)||(LA67_6 >= BRTRUE && LA67_6 <= BRTRUE_S)||LA67_6==BR_S||(LA67_6 >= CALL && LA67_6 <= CALLI)||LA67_6==CALLVIRT||LA67_6==CASTCLASS||LA67_6==CEQ||(LA67_6 >= CGT && LA67_6 <= CGT_UN)||LA67_6==CKFINITE||(LA67_6 >= CLT && LA67_6 <= CLT_UN)||(LA67_6 >= CONV_I && LA67_6 <= CPOBJ)||(LA67_6 >= DIV && LA67_6 <= DIV_UN)||(LA67_6 >= DUP && LA67_6 <= ENDFINALLY)||(LA67_6 >= ID && LA67_6 <= INITOBJ)||(LA67_6 >= ISINST && LA67_6 <= LDELEM_U4)||(LA67_6 >= LDFLD && LA67_6 <= LDIND_U4)||(LA67_6 >= LDLEN && LA67_6 <= LEAVE_S)||(LA67_6 >= LOCALLOC && LA67_6 <= POP)||(LA67_6 >= REFANYTYPE && LA67_6 <= REM_UN)||(LA67_6 >= RET && LA67_6 <= VOLATILE_)||LA67_6==XOR||LA67_6==262||LA67_6==266||(LA67_6 >= 269 && LA67_6 <= 270)||(LA67_6 >= 272 && LA67_6 <= 279)||(LA67_6 >= 283 && LA67_6 <= 285)||(LA67_6 >= 287 && LA67_6 <= 293)||(LA67_6 >= 296 && LA67_6 <= 300)||(LA67_6 >= 305 && LA67_6 <= 307)||(LA67_6 >= 309 && LA67_6 <= 311)||(LA67_6 >= 313 && LA67_6 <= 316)||LA67_6==323||LA67_6==430||(LA67_6 >= 494 && LA67_6 <= 495)) ) {
					alt67=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 389:
				{
				int LA67_7 = input.LA(2);
				if ( (LA67_7==258) ) {
					alt67=7;
				}
				else if ( (LA67_7==EOF||(LA67_7 >= ADD && LA67_7 <= BLE_UN_S)||(LA67_7 >= BLT && LA67_7 <= BRFALSE_S)||(LA67_7 >= BRTRUE && LA67_7 <= BRTRUE_S)||LA67_7==BR_S||(LA67_7 >= CALL && LA67_7 <= CALLI)||LA67_7==CALLVIRT||LA67_7==CASTCLASS||LA67_7==CEQ||(LA67_7 >= CGT && LA67_7 <= CGT_UN)||LA67_7==CKFINITE||(LA67_7 >= CLT && LA67_7 <= CLT_UN)||(LA67_7 >= CONV_I && LA67_7 <= CPOBJ)||(LA67_7 >= DIV && LA67_7 <= DIV_UN)||(LA67_7 >= DUP && LA67_7 <= ENDFINALLY)||(LA67_7 >= ID && LA67_7 <= INITOBJ)||(LA67_7 >= ISINST && LA67_7 <= LDELEM_U4)||(LA67_7 >= LDFLD && LA67_7 <= LDIND_U4)||(LA67_7 >= LDLEN && LA67_7 <= LEAVE_S)||(LA67_7 >= LOCALLOC && LA67_7 <= POP)||(LA67_7 >= REFANYTYPE && LA67_7 <= REM_UN)||(LA67_7 >= RET && LA67_7 <= VOLATILE_)||LA67_7==XOR||LA67_7==262||LA67_7==266||(LA67_7 >= 269 && LA67_7 <= 270)||(LA67_7 >= 272 && LA67_7 <= 279)||(LA67_7 >= 283 && LA67_7 <= 285)||(LA67_7 >= 287 && LA67_7 <= 293)||(LA67_7 >= 296 && LA67_7 <= 300)||(LA67_7 >= 305 && LA67_7 <= 307)||(LA67_7 >= 309 && LA67_7 <= 311)||(LA67_7 >= 313 && LA67_7 <= 316)||LA67_7==323||LA67_7==430||(LA67_7 >= 494 && LA67_7 <= 495)) ) {
					alt67=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 7, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 388:
				{
				int LA67_8 = input.LA(2);
				if ( (LA67_8==258) ) {
					alt67=8;
				}
				else if ( (LA67_8==EOF||(LA67_8 >= ADD && LA67_8 <= BLE_UN_S)||(LA67_8 >= BLT && LA67_8 <= BRFALSE_S)||(LA67_8 >= BRTRUE && LA67_8 <= BRTRUE_S)||LA67_8==BR_S||(LA67_8 >= CALL && LA67_8 <= CALLI)||LA67_8==CALLVIRT||LA67_8==CASTCLASS||LA67_8==CEQ||(LA67_8 >= CGT && LA67_8 <= CGT_UN)||LA67_8==CKFINITE||(LA67_8 >= CLT && LA67_8 <= CLT_UN)||(LA67_8 >= CONV_I && LA67_8 <= CPOBJ)||(LA67_8 >= DIV && LA67_8 <= DIV_UN)||(LA67_8 >= DUP && LA67_8 <= ENDFINALLY)||(LA67_8 >= ID && LA67_8 <= INITOBJ)||(LA67_8 >= ISINST && LA67_8 <= LDELEM_U4)||(LA67_8 >= LDFLD && LA67_8 <= LDIND_U4)||(LA67_8 >= LDLEN && LA67_8 <= LEAVE_S)||(LA67_8 >= LOCALLOC && LA67_8 <= POP)||(LA67_8 >= REFANYTYPE && LA67_8 <= REM_UN)||(LA67_8 >= RET && LA67_8 <= VOLATILE_)||LA67_8==XOR||LA67_8==262||LA67_8==266||(LA67_8 >= 269 && LA67_8 <= 270)||(LA67_8 >= 272 && LA67_8 <= 279)||(LA67_8 >= 283 && LA67_8 <= 285)||(LA67_8 >= 287 && LA67_8 <= 293)||(LA67_8 >= 296 && LA67_8 <= 300)||(LA67_8 >= 305 && LA67_8 <= 307)||(LA67_8 >= 309 && LA67_8 <= 311)||(LA67_8 >= 313 && LA67_8 <= 316)||LA67_8==323||LA67_8==430||(LA67_8 >= 494 && LA67_8 <= 495)) ) {
					alt67=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 391:
				{
				int LA67_9 = input.LA(2);
				if ( (LA67_9==258) ) {
					alt67=9;
				}
				else if ( (LA67_9==EOF||(LA67_9 >= ADD && LA67_9 <= BLE_UN_S)||(LA67_9 >= BLT && LA67_9 <= BRFALSE_S)||(LA67_9 >= BRTRUE && LA67_9 <= BRTRUE_S)||LA67_9==BR_S||(LA67_9 >= CALL && LA67_9 <= CALLI)||LA67_9==CALLVIRT||LA67_9==CASTCLASS||LA67_9==CEQ||(LA67_9 >= CGT && LA67_9 <= CGT_UN)||LA67_9==CKFINITE||(LA67_9 >= CLT && LA67_9 <= CLT_UN)||(LA67_9 >= CONV_I && LA67_9 <= CPOBJ)||(LA67_9 >= DIV && LA67_9 <= DIV_UN)||(LA67_9 >= DUP && LA67_9 <= ENDFINALLY)||(LA67_9 >= ID && LA67_9 <= INITOBJ)||(LA67_9 >= ISINST && LA67_9 <= LDELEM_U4)||(LA67_9 >= LDFLD && LA67_9 <= LDIND_U4)||(LA67_9 >= LDLEN && LA67_9 <= LEAVE_S)||(LA67_9 >= LOCALLOC && LA67_9 <= POP)||(LA67_9 >= REFANYTYPE && LA67_9 <= REM_UN)||(LA67_9 >= RET && LA67_9 <= VOLATILE_)||LA67_9==XOR||LA67_9==262||LA67_9==266||(LA67_9 >= 269 && LA67_9 <= 270)||(LA67_9 >= 272 && LA67_9 <= 279)||(LA67_9 >= 283 && LA67_9 <= 285)||(LA67_9 >= 287 && LA67_9 <= 293)||(LA67_9 >= 296 && LA67_9 <= 300)||(LA67_9 >= 305 && LA67_9 <= 307)||(LA67_9 >= 309 && LA67_9 <= 311)||(LA67_9 >= 313 && LA67_9 <= 316)||LA67_9==323||LA67_9==430||(LA67_9 >= 494 && LA67_9 <= 495)) ) {
					alt67=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 9, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 67, 0, input);
				throw nvae;
			}
			switch (alt67) {
				case 1 :
					// CIL.g:785:27: 'char' '*' '(' compQstring ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal761=(Token)match(input,CHAR,FOLLOW_CHAR_in_ddItem17426); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal761_tree = (CommonTree)adaptor.create(string_literal761);
					adaptor.addChild(root_0, string_literal761_tree);
					}

					char_literal762=(Token)match(input,260,FOLLOW_260_in_ddItem17428); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal762_tree = (CommonTree)adaptor.create(char_literal762);
					adaptor.addChild(root_0, char_literal762_tree);
					}

					char_literal763=(Token)match(input,258,FOLLOW_258_in_ddItem17430); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal763_tree = (CommonTree)adaptor.create(char_literal763);
					adaptor.addChild(root_0, char_literal763_tree);
					}

					pushFollow(FOLLOW_compQstring_in_ddItem17432);
					compQstring764=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring764.getTree());

					char_literal765=(Token)match(input,259,FOLLOW_259_in_ddItem17434); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal765_tree = (CommonTree)adaptor.create(char_literal765);
					adaptor.addChild(root_0, char_literal765_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:786:27: '&' '(' id ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal766=(Token)match(input,257,FOLLOW_257_in_ddItem17463); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal766_tree = (CommonTree)adaptor.create(char_literal766);
					adaptor.addChild(root_0, char_literal766_tree);
					}

					char_literal767=(Token)match(input,258,FOLLOW_258_in_ddItem17465); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal767_tree = (CommonTree)adaptor.create(char_literal767);
					adaptor.addChild(root_0, char_literal767_tree);
					}

					pushFollow(FOLLOW_id_in_ddItem17467);
					id768=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id768.getTree());

					char_literal769=(Token)match(input,259,FOLLOW_259_in_ddItem17469); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal769_tree = (CommonTree)adaptor.create(char_literal769);
					adaptor.addChild(root_0, char_literal769_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:787:27: bytearrayhead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_bytearrayhead_in_ddItem17498);
					bytearrayhead770=bytearrayhead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytearrayhead770.getTree());

					pushFollow(FOLLOW_bytes_in_ddItem17500);
					bytes771=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes771.getTree());

					char_literal772=(Token)match(input,259,FOLLOW_259_in_ddItem17502); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal772_tree = (CommonTree)adaptor.create(char_literal772);
					adaptor.addChild(root_0, char_literal772_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:788:27: 'float32' '(' float64 ')' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal773=(Token)match(input,369,FOLLOW_369_in_ddItem17531); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal773_tree = (CommonTree)adaptor.create(string_literal773);
					adaptor.addChild(root_0, string_literal773_tree);
					}

					char_literal774=(Token)match(input,258,FOLLOW_258_in_ddItem17533); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal774_tree = (CommonTree)adaptor.create(char_literal774);
					adaptor.addChild(root_0, char_literal774_tree);
					}

					pushFollow(FOLLOW_float64_in_ddItem17535);
					float64775=float64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, float64775.getTree());

					char_literal776=(Token)match(input,259,FOLLOW_259_in_ddItem17537); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal776_tree = (CommonTree)adaptor.create(char_literal776);
					adaptor.addChild(root_0, char_literal776_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17539);
					ddItemCount777=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount777.getTree());

					}
					break;
				case 5 :
					// CIL.g:789:27: 'float64' '(' float64 ')' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal778=(Token)match(input,370,FOLLOW_370_in_ddItem17568); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal778_tree = (CommonTree)adaptor.create(string_literal778);
					adaptor.addChild(root_0, string_literal778_tree);
					}

					char_literal779=(Token)match(input,258,FOLLOW_258_in_ddItem17570); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal779_tree = (CommonTree)adaptor.create(char_literal779);
					adaptor.addChild(root_0, char_literal779_tree);
					}

					pushFollow(FOLLOW_float64_in_ddItem17572);
					float64780=float64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, float64780.getTree());

					char_literal781=(Token)match(input,259,FOLLOW_259_in_ddItem17574); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal781_tree = (CommonTree)adaptor.create(char_literal781);
					adaptor.addChild(root_0, char_literal781_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17576);
					ddItemCount782=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount782.getTree());

					}
					break;
				case 6 :
					// CIL.g:790:27: 'int64' '(' int64 ')' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal783=(Token)match(input,390,FOLLOW_390_in_ddItem17605); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal783_tree = (CommonTree)adaptor.create(string_literal783);
					adaptor.addChild(root_0, string_literal783_tree);
					}

					char_literal784=(Token)match(input,258,FOLLOW_258_in_ddItem17607); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal784_tree = (CommonTree)adaptor.create(char_literal784);
					adaptor.addChild(root_0, char_literal784_tree);
					}

					pushFollow(FOLLOW_int64_in_ddItem17609);
					int64785=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int64785.getTree());

					char_literal786=(Token)match(input,259,FOLLOW_259_in_ddItem17611); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal786_tree = (CommonTree)adaptor.create(char_literal786);
					adaptor.addChild(root_0, char_literal786_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17613);
					ddItemCount787=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount787.getTree());

					}
					break;
				case 7 :
					// CIL.g:791:27: 'int32' '(' int32 ')' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal788=(Token)match(input,389,FOLLOW_389_in_ddItem17642); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal788_tree = (CommonTree)adaptor.create(string_literal788);
					adaptor.addChild(root_0, string_literal788_tree);
					}

					char_literal789=(Token)match(input,258,FOLLOW_258_in_ddItem17644); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal789_tree = (CommonTree)adaptor.create(char_literal789);
					adaptor.addChild(root_0, char_literal789_tree);
					}

					pushFollow(FOLLOW_int32_in_ddItem17646);
					int32790=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32790.getTree());

					char_literal791=(Token)match(input,259,FOLLOW_259_in_ddItem17648); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal791_tree = (CommonTree)adaptor.create(char_literal791);
					adaptor.addChild(root_0, char_literal791_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17650);
					ddItemCount792=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount792.getTree());

					}
					break;
				case 8 :
					// CIL.g:792:27: 'int16' '(' int32 ')' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal793=(Token)match(input,388,FOLLOW_388_in_ddItem17679); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal793_tree = (CommonTree)adaptor.create(string_literal793);
					adaptor.addChild(root_0, string_literal793_tree);
					}

					char_literal794=(Token)match(input,258,FOLLOW_258_in_ddItem17681); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal794_tree = (CommonTree)adaptor.create(char_literal794);
					adaptor.addChild(root_0, char_literal794_tree);
					}

					pushFollow(FOLLOW_int32_in_ddItem17683);
					int32795=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32795.getTree());

					char_literal796=(Token)match(input,259,FOLLOW_259_in_ddItem17685); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal796_tree = (CommonTree)adaptor.create(char_literal796);
					adaptor.addChild(root_0, char_literal796_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17687);
					ddItemCount797=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount797.getTree());

					}
					break;
				case 9 :
					// CIL.g:793:27: 'int8' '(' int32 ')' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal798=(Token)match(input,391,FOLLOW_391_in_ddItem17716); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal798_tree = (CommonTree)adaptor.create(string_literal798);
					adaptor.addChild(root_0, string_literal798_tree);
					}

					char_literal799=(Token)match(input,258,FOLLOW_258_in_ddItem17718); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal799_tree = (CommonTree)adaptor.create(char_literal799);
					adaptor.addChild(root_0, char_literal799_tree);
					}

					pushFollow(FOLLOW_int32_in_ddItem17720);
					int32800=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32800.getTree());

					char_literal801=(Token)match(input,259,FOLLOW_259_in_ddItem17722); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal801_tree = (CommonTree)adaptor.create(char_literal801);
					adaptor.addChild(root_0, char_literal801_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17724);
					ddItemCount802=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount802.getTree());

					}
					break;
				case 10 :
					// CIL.g:794:27: 'float32' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal803=(Token)match(input,369,FOLLOW_369_in_ddItem17753); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal803_tree = (CommonTree)adaptor.create(string_literal803);
					adaptor.addChild(root_0, string_literal803_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17755);
					ddItemCount804=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount804.getTree());

					}
					break;
				case 11 :
					// CIL.g:795:27: 'float64' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal805=(Token)match(input,370,FOLLOW_370_in_ddItem17784); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal805_tree = (CommonTree)adaptor.create(string_literal805);
					adaptor.addChild(root_0, string_literal805_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17786);
					ddItemCount806=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount806.getTree());

					}
					break;
				case 12 :
					// CIL.g:796:27: 'int64' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal807=(Token)match(input,390,FOLLOW_390_in_ddItem17815); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal807_tree = (CommonTree)adaptor.create(string_literal807);
					adaptor.addChild(root_0, string_literal807_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17817);
					ddItemCount808=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount808.getTree());

					}
					break;
				case 13 :
					// CIL.g:797:27: 'int32' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal809=(Token)match(input,389,FOLLOW_389_in_ddItem17846); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal809_tree = (CommonTree)adaptor.create(string_literal809);
					adaptor.addChild(root_0, string_literal809_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17848);
					ddItemCount810=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount810.getTree());

					}
					break;
				case 14 :
					// CIL.g:798:27: 'int16' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal811=(Token)match(input,388,FOLLOW_388_in_ddItem17877); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal811_tree = (CommonTree)adaptor.create(string_literal811);
					adaptor.addChild(root_0, string_literal811_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17879);
					ddItemCount812=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount812.getTree());

					}
					break;
				case 15 :
					// CIL.g:799:27: 'int8' ddItemCount
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal813=(Token)match(input,391,FOLLOW_391_in_ddItem17908); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal813_tree = (CommonTree)adaptor.create(string_literal813);
					adaptor.addChild(root_0, string_literal813_tree);
					}

					pushFollow(FOLLOW_ddItemCount_in_ddItem17910);
					ddItemCount814=ddItemCount();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ddItemCount814.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "ddItem"


	public static class fieldSerInit_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fieldSerInit"
	// CIL.g:803:1: fieldSerInit : ( 'float32' '(' float64 ')' | 'float64' '(' float64 ')' | 'float32' '(' int32 ')' | 'float64' '(' int64 ')' | 'int64' '(' int64 ')' | 'int32' '(' int32 ')' | 'int16' '(' int32 ')' | 'int8' '(' int32 ')' | 'unsigned' 'int64' '(' int64 ')' | 'unsigned' 'int32' '(' int32 ')' | 'unsigned' 'int16' '(' int32 ')' | 'unsigned' 'int8' '(' int32 ')' | 'uint64' '(' int64 ')' | 'uint32' '(' int32 ')' | 'uint16' '(' int32 ')' | 'uint8' '(' int32 ')' | 'char' '(' int32 ')' | 'bool' '(' truefalse ')' | bytearrayhead bytes ')' );
	public final CILParser.fieldSerInit_return fieldSerInit() throws RecognitionException {
		CILParser.fieldSerInit_return retval = new CILParser.fieldSerInit_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal815=null;
		Token char_literal816=null;
		Token char_literal818=null;
		Token string_literal819=null;
		Token char_literal820=null;
		Token char_literal822=null;
		Token string_literal823=null;
		Token char_literal824=null;
		Token char_literal826=null;
		Token string_literal827=null;
		Token char_literal828=null;
		Token char_literal830=null;
		Token string_literal831=null;
		Token char_literal832=null;
		Token char_literal834=null;
		Token string_literal835=null;
		Token char_literal836=null;
		Token char_literal838=null;
		Token string_literal839=null;
		Token char_literal840=null;
		Token char_literal842=null;
		Token string_literal843=null;
		Token char_literal844=null;
		Token char_literal846=null;
		Token string_literal847=null;
		Token string_literal848=null;
		Token char_literal849=null;
		Token char_literal851=null;
		Token string_literal852=null;
		Token string_literal853=null;
		Token char_literal854=null;
		Token char_literal856=null;
		Token string_literal857=null;
		Token string_literal858=null;
		Token char_literal859=null;
		Token char_literal861=null;
		Token string_literal862=null;
		Token string_literal863=null;
		Token char_literal864=null;
		Token char_literal866=null;
		Token string_literal867=null;
		Token char_literal868=null;
		Token char_literal870=null;
		Token string_literal871=null;
		Token char_literal872=null;
		Token char_literal874=null;
		Token string_literal875=null;
		Token char_literal876=null;
		Token char_literal878=null;
		Token string_literal879=null;
		Token char_literal880=null;
		Token char_literal882=null;
		Token string_literal883=null;
		Token char_literal884=null;
		Token char_literal886=null;
		Token string_literal887=null;
		Token char_literal888=null;
		Token char_literal890=null;
		Token char_literal893=null;
		ParserRuleReturnScope float64817 =null;
		ParserRuleReturnScope float64821 =null;
		ParserRuleReturnScope int32825 =null;
		ParserRuleReturnScope int64829 =null;
		ParserRuleReturnScope int64833 =null;
		ParserRuleReturnScope int32837 =null;
		ParserRuleReturnScope int32841 =null;
		ParserRuleReturnScope int32845 =null;
		ParserRuleReturnScope int64850 =null;
		ParserRuleReturnScope int32855 =null;
		ParserRuleReturnScope int32860 =null;
		ParserRuleReturnScope int32865 =null;
		ParserRuleReturnScope int64869 =null;
		ParserRuleReturnScope int32873 =null;
		ParserRuleReturnScope int32877 =null;
		ParserRuleReturnScope int32881 =null;
		ParserRuleReturnScope int32885 =null;
		ParserRuleReturnScope truefalse889 =null;
		ParserRuleReturnScope bytearrayhead891 =null;
		ParserRuleReturnScope bytes892 =null;

		CommonTree string_literal815_tree=null;
		CommonTree char_literal816_tree=null;
		CommonTree char_literal818_tree=null;
		CommonTree string_literal819_tree=null;
		CommonTree char_literal820_tree=null;
		CommonTree char_literal822_tree=null;
		CommonTree string_literal823_tree=null;
		CommonTree char_literal824_tree=null;
		CommonTree char_literal826_tree=null;
		CommonTree string_literal827_tree=null;
		CommonTree char_literal828_tree=null;
		CommonTree char_literal830_tree=null;
		CommonTree string_literal831_tree=null;
		CommonTree char_literal832_tree=null;
		CommonTree char_literal834_tree=null;
		CommonTree string_literal835_tree=null;
		CommonTree char_literal836_tree=null;
		CommonTree char_literal838_tree=null;
		CommonTree string_literal839_tree=null;
		CommonTree char_literal840_tree=null;
		CommonTree char_literal842_tree=null;
		CommonTree string_literal843_tree=null;
		CommonTree char_literal844_tree=null;
		CommonTree char_literal846_tree=null;
		CommonTree string_literal847_tree=null;
		CommonTree string_literal848_tree=null;
		CommonTree char_literal849_tree=null;
		CommonTree char_literal851_tree=null;
		CommonTree string_literal852_tree=null;
		CommonTree string_literal853_tree=null;
		CommonTree char_literal854_tree=null;
		CommonTree char_literal856_tree=null;
		CommonTree string_literal857_tree=null;
		CommonTree string_literal858_tree=null;
		CommonTree char_literal859_tree=null;
		CommonTree char_literal861_tree=null;
		CommonTree string_literal862_tree=null;
		CommonTree string_literal863_tree=null;
		CommonTree char_literal864_tree=null;
		CommonTree char_literal866_tree=null;
		CommonTree string_literal867_tree=null;
		CommonTree char_literal868_tree=null;
		CommonTree char_literal870_tree=null;
		CommonTree string_literal871_tree=null;
		CommonTree char_literal872_tree=null;
		CommonTree char_literal874_tree=null;
		CommonTree string_literal875_tree=null;
		CommonTree char_literal876_tree=null;
		CommonTree char_literal878_tree=null;
		CommonTree string_literal879_tree=null;
		CommonTree char_literal880_tree=null;
		CommonTree char_literal882_tree=null;
		CommonTree string_literal883_tree=null;
		CommonTree char_literal884_tree=null;
		CommonTree char_literal886_tree=null;
		CommonTree string_literal887_tree=null;
		CommonTree char_literal888_tree=null;
		CommonTree char_literal890_tree=null;
		CommonTree char_literal893_tree=null;

		try {
			// CIL.g:803:25: ( 'float32' '(' float64 ')' | 'float64' '(' float64 ')' | 'float32' '(' int32 ')' | 'float64' '(' int64 ')' | 'int64' '(' int64 ')' | 'int32' '(' int32 ')' | 'int16' '(' int32 ')' | 'int8' '(' int32 ')' | 'unsigned' 'int64' '(' int64 ')' | 'unsigned' 'int32' '(' int32 ')' | 'unsigned' 'int16' '(' int32 ')' | 'unsigned' 'int8' '(' int32 ')' | 'uint64' '(' int64 ')' | 'uint32' '(' int32 ')' | 'uint16' '(' int32 ')' | 'uint8' '(' int32 ')' | 'char' '(' int32 ')' | 'bool' '(' truefalse ')' | bytearrayhead bytes ')' )
			int alt68=19;
			switch ( input.LA(1) ) {
			case 369:
				{
				int LA68_1 = input.LA(2);
				if ( (LA68_1==258) ) {
					int LA68_15 = input.LA(3);
					if ( (LA68_15==FLOAT64||(LA68_15 >= 369 && LA68_15 <= 370)) ) {
						alt68=1;
					}
					else if ( (LA68_15==INT32) ) {
						alt68=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 68, 15, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 68, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 370:
				{
				int LA68_2 = input.LA(2);
				if ( (LA68_2==258) ) {
					int LA68_16 = input.LA(3);
					if ( (LA68_16==FLOAT64||(LA68_16 >= 369 && LA68_16 <= 370)) ) {
						alt68=2;
					}
					else if ( (LA68_16==INT32) ) {
						alt68=4;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 68, 16, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 68, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 390:
				{
				alt68=5;
				}
				break;
			case 389:
				{
				alt68=6;
				}
				break;
			case 388:
				{
				alt68=7;
				}
				break;
			case 391:
				{
				alt68=8;
				}
				break;
			case 482:
				{
				switch ( input.LA(2) ) {
				case 390:
					{
					alt68=9;
					}
					break;
				case 389:
					{
					alt68=10;
					}
					break;
				case 388:
					{
					alt68=11;
					}
					break;
				case 391:
					{
					alt68=12;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 68, 7, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case 477:
				{
				alt68=13;
				}
				break;
			case 476:
				{
				alt68=14;
				}
				break;
			case 475:
				{
				alt68=15;
				}
				break;
			case 478:
				{
				alt68=16;
				}
				break;
			case CHAR:
				{
				alt68=17;
				}
				break;
			case 340:
				{
				alt68=18;
				}
				break;
			case BYTEARRAY:
				{
				alt68=19;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 68, 0, input);
				throw nvae;
			}
			switch (alt68) {
				case 1 :
					// CIL.g:803:27: 'float32' '(' float64 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal815=(Token)match(input,369,FOLLOW_369_in_fieldSerInit17957); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal815_tree = (CommonTree)adaptor.create(string_literal815);
					adaptor.addChild(root_0, string_literal815_tree);
					}

					char_literal816=(Token)match(input,258,FOLLOW_258_in_fieldSerInit17959); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal816_tree = (CommonTree)adaptor.create(char_literal816);
					adaptor.addChild(root_0, char_literal816_tree);
					}

					pushFollow(FOLLOW_float64_in_fieldSerInit17961);
					float64817=float64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, float64817.getTree());

					char_literal818=(Token)match(input,259,FOLLOW_259_in_fieldSerInit17963); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal818_tree = (CommonTree)adaptor.create(char_literal818);
					adaptor.addChild(root_0, char_literal818_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:804:27: 'float64' '(' float64 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal819=(Token)match(input,370,FOLLOW_370_in_fieldSerInit17992); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal819_tree = (CommonTree)adaptor.create(string_literal819);
					adaptor.addChild(root_0, string_literal819_tree);
					}

					char_literal820=(Token)match(input,258,FOLLOW_258_in_fieldSerInit17994); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal820_tree = (CommonTree)adaptor.create(char_literal820);
					adaptor.addChild(root_0, char_literal820_tree);
					}

					pushFollow(FOLLOW_float64_in_fieldSerInit17996);
					float64821=float64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, float64821.getTree());

					char_literal822=(Token)match(input,259,FOLLOW_259_in_fieldSerInit17998); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal822_tree = (CommonTree)adaptor.create(char_literal822);
					adaptor.addChild(root_0, char_literal822_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:805:27: 'float32' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal823=(Token)match(input,369,FOLLOW_369_in_fieldSerInit18027); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal823_tree = (CommonTree)adaptor.create(string_literal823);
					adaptor.addChild(root_0, string_literal823_tree);
					}

					char_literal824=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18029); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal824_tree = (CommonTree)adaptor.create(char_literal824);
					adaptor.addChild(root_0, char_literal824_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18031);
					int32825=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32825.getTree());

					char_literal826=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18033); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal826_tree = (CommonTree)adaptor.create(char_literal826);
					adaptor.addChild(root_0, char_literal826_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:806:27: 'float64' '(' int64 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal827=(Token)match(input,370,FOLLOW_370_in_fieldSerInit18062); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal827_tree = (CommonTree)adaptor.create(string_literal827);
					adaptor.addChild(root_0, string_literal827_tree);
					}

					char_literal828=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18064); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal828_tree = (CommonTree)adaptor.create(char_literal828);
					adaptor.addChild(root_0, char_literal828_tree);
					}

					pushFollow(FOLLOW_int64_in_fieldSerInit18066);
					int64829=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int64829.getTree());

					char_literal830=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18068); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal830_tree = (CommonTree)adaptor.create(char_literal830);
					adaptor.addChild(root_0, char_literal830_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:807:27: 'int64' '(' int64 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal831=(Token)match(input,390,FOLLOW_390_in_fieldSerInit18097); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal831_tree = (CommonTree)adaptor.create(string_literal831);
					adaptor.addChild(root_0, string_literal831_tree);
					}

					char_literal832=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18099); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal832_tree = (CommonTree)adaptor.create(char_literal832);
					adaptor.addChild(root_0, char_literal832_tree);
					}

					pushFollow(FOLLOW_int64_in_fieldSerInit18101);
					int64833=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int64833.getTree());

					char_literal834=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18103); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal834_tree = (CommonTree)adaptor.create(char_literal834);
					adaptor.addChild(root_0, char_literal834_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:808:27: 'int32' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal835=(Token)match(input,389,FOLLOW_389_in_fieldSerInit18133); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal835_tree = (CommonTree)adaptor.create(string_literal835);
					adaptor.addChild(root_0, string_literal835_tree);
					}

					char_literal836=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18135); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal836_tree = (CommonTree)adaptor.create(char_literal836);
					adaptor.addChild(root_0, char_literal836_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18137);
					int32837=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32837.getTree());

					char_literal838=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18139); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal838_tree = (CommonTree)adaptor.create(char_literal838);
					adaptor.addChild(root_0, char_literal838_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:809:27: 'int16' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal839=(Token)match(input,388,FOLLOW_388_in_fieldSerInit18168); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal839_tree = (CommonTree)adaptor.create(string_literal839);
					adaptor.addChild(root_0, string_literal839_tree);
					}

					char_literal840=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18170); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal840_tree = (CommonTree)adaptor.create(char_literal840);
					adaptor.addChild(root_0, char_literal840_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18172);
					int32841=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32841.getTree());

					char_literal842=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18174); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal842_tree = (CommonTree)adaptor.create(char_literal842);
					adaptor.addChild(root_0, char_literal842_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:810:27: 'int8' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal843=(Token)match(input,391,FOLLOW_391_in_fieldSerInit18203); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal843_tree = (CommonTree)adaptor.create(string_literal843);
					adaptor.addChild(root_0, string_literal843_tree);
					}

					char_literal844=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18205); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal844_tree = (CommonTree)adaptor.create(char_literal844);
					adaptor.addChild(root_0, char_literal844_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18207);
					int32845=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32845.getTree());

					char_literal846=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18209); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal846_tree = (CommonTree)adaptor.create(char_literal846);
					adaptor.addChild(root_0, char_literal846_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:811:27: 'unsigned' 'int64' '(' int64 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal847=(Token)match(input,482,FOLLOW_482_in_fieldSerInit18238); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal847_tree = (CommonTree)adaptor.create(string_literal847);
					adaptor.addChild(root_0, string_literal847_tree);
					}

					string_literal848=(Token)match(input,390,FOLLOW_390_in_fieldSerInit18240); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal848_tree = (CommonTree)adaptor.create(string_literal848);
					adaptor.addChild(root_0, string_literal848_tree);
					}

					char_literal849=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18242); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal849_tree = (CommonTree)adaptor.create(char_literal849);
					adaptor.addChild(root_0, char_literal849_tree);
					}

					pushFollow(FOLLOW_int64_in_fieldSerInit18244);
					int64850=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int64850.getTree());

					char_literal851=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18246); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal851_tree = (CommonTree)adaptor.create(char_literal851);
					adaptor.addChild(root_0, char_literal851_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:812:27: 'unsigned' 'int32' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal852=(Token)match(input,482,FOLLOW_482_in_fieldSerInit18276); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal852_tree = (CommonTree)adaptor.create(string_literal852);
					adaptor.addChild(root_0, string_literal852_tree);
					}

					string_literal853=(Token)match(input,389,FOLLOW_389_in_fieldSerInit18278); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal853_tree = (CommonTree)adaptor.create(string_literal853);
					adaptor.addChild(root_0, string_literal853_tree);
					}

					char_literal854=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18280); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal854_tree = (CommonTree)adaptor.create(char_literal854);
					adaptor.addChild(root_0, char_literal854_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18282);
					int32855=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32855.getTree());

					char_literal856=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18284); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal856_tree = (CommonTree)adaptor.create(char_literal856);
					adaptor.addChild(root_0, char_literal856_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:813:27: 'unsigned' 'int16' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal857=(Token)match(input,482,FOLLOW_482_in_fieldSerInit18313); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal857_tree = (CommonTree)adaptor.create(string_literal857);
					adaptor.addChild(root_0, string_literal857_tree);
					}

					string_literal858=(Token)match(input,388,FOLLOW_388_in_fieldSerInit18315); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal858_tree = (CommonTree)adaptor.create(string_literal858);
					adaptor.addChild(root_0, string_literal858_tree);
					}

					char_literal859=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18317); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal859_tree = (CommonTree)adaptor.create(char_literal859);
					adaptor.addChild(root_0, char_literal859_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18319);
					int32860=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32860.getTree());

					char_literal861=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18321); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal861_tree = (CommonTree)adaptor.create(char_literal861);
					adaptor.addChild(root_0, char_literal861_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:814:27: 'unsigned' 'int8' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal862=(Token)match(input,482,FOLLOW_482_in_fieldSerInit18350); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal862_tree = (CommonTree)adaptor.create(string_literal862);
					adaptor.addChild(root_0, string_literal862_tree);
					}

					string_literal863=(Token)match(input,391,FOLLOW_391_in_fieldSerInit18352); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal863_tree = (CommonTree)adaptor.create(string_literal863);
					adaptor.addChild(root_0, string_literal863_tree);
					}

					char_literal864=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18354); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal864_tree = (CommonTree)adaptor.create(char_literal864);
					adaptor.addChild(root_0, char_literal864_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18356);
					int32865=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32865.getTree());

					char_literal866=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18358); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal866_tree = (CommonTree)adaptor.create(char_literal866);
					adaptor.addChild(root_0, char_literal866_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:815:27: 'uint64' '(' int64 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal867=(Token)match(input,477,FOLLOW_477_in_fieldSerInit18387); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal867_tree = (CommonTree)adaptor.create(string_literal867);
					adaptor.addChild(root_0, string_literal867_tree);
					}

					char_literal868=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18389); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal868_tree = (CommonTree)adaptor.create(char_literal868);
					adaptor.addChild(root_0, char_literal868_tree);
					}

					pushFollow(FOLLOW_int64_in_fieldSerInit18391);
					int64869=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int64869.getTree());

					char_literal870=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18393); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal870_tree = (CommonTree)adaptor.create(char_literal870);
					adaptor.addChild(root_0, char_literal870_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:816:27: 'uint32' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal871=(Token)match(input,476,FOLLOW_476_in_fieldSerInit18423); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal871_tree = (CommonTree)adaptor.create(string_literal871);
					adaptor.addChild(root_0, string_literal871_tree);
					}

					char_literal872=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18425); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal872_tree = (CommonTree)adaptor.create(char_literal872);
					adaptor.addChild(root_0, char_literal872_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18427);
					int32873=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32873.getTree());

					char_literal874=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18429); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal874_tree = (CommonTree)adaptor.create(char_literal874);
					adaptor.addChild(root_0, char_literal874_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:817:27: 'uint16' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal875=(Token)match(input,475,FOLLOW_475_in_fieldSerInit18458); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal875_tree = (CommonTree)adaptor.create(string_literal875);
					adaptor.addChild(root_0, string_literal875_tree);
					}

					char_literal876=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18460); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal876_tree = (CommonTree)adaptor.create(char_literal876);
					adaptor.addChild(root_0, char_literal876_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18462);
					int32877=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32877.getTree());

					char_literal878=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18464); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal878_tree = (CommonTree)adaptor.create(char_literal878);
					adaptor.addChild(root_0, char_literal878_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:818:27: 'uint8' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal879=(Token)match(input,478,FOLLOW_478_in_fieldSerInit18493); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal879_tree = (CommonTree)adaptor.create(string_literal879);
					adaptor.addChild(root_0, string_literal879_tree);
					}

					char_literal880=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18495); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal880_tree = (CommonTree)adaptor.create(char_literal880);
					adaptor.addChild(root_0, char_literal880_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18497);
					int32881=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32881.getTree());

					char_literal882=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18499); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal882_tree = (CommonTree)adaptor.create(char_literal882);
					adaptor.addChild(root_0, char_literal882_tree);
					}

					}
					break;
				case 17 :
					// CIL.g:819:27: 'char' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal883=(Token)match(input,CHAR,FOLLOW_CHAR_in_fieldSerInit18528); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal883_tree = (CommonTree)adaptor.create(string_literal883);
					adaptor.addChild(root_0, string_literal883_tree);
					}

					char_literal884=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18530); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal884_tree = (CommonTree)adaptor.create(char_literal884);
					adaptor.addChild(root_0, char_literal884_tree);
					}

					pushFollow(FOLLOW_int32_in_fieldSerInit18532);
					int32885=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32885.getTree());

					char_literal886=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18534); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal886_tree = (CommonTree)adaptor.create(char_literal886);
					adaptor.addChild(root_0, char_literal886_tree);
					}

					}
					break;
				case 18 :
					// CIL.g:820:27: 'bool' '(' truefalse ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal887=(Token)match(input,340,FOLLOW_340_in_fieldSerInit18563); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal887_tree = (CommonTree)adaptor.create(string_literal887);
					adaptor.addChild(root_0, string_literal887_tree);
					}

					char_literal888=(Token)match(input,258,FOLLOW_258_in_fieldSerInit18565); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal888_tree = (CommonTree)adaptor.create(char_literal888);
					adaptor.addChild(root_0, char_literal888_tree);
					}

					pushFollow(FOLLOW_truefalse_in_fieldSerInit18567);
					truefalse889=truefalse();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, truefalse889.getTree());

					char_literal890=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18569); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal890_tree = (CommonTree)adaptor.create(char_literal890);
					adaptor.addChild(root_0, char_literal890_tree);
					}

					}
					break;
				case 19 :
					// CIL.g:821:27: bytearrayhead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_bytearrayhead_in_fieldSerInit18598);
					bytearrayhead891=bytearrayhead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytearrayhead891.getTree());

					pushFollow(FOLLOW_bytes_in_fieldSerInit18600);
					bytes892=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes892.getTree());

					char_literal893=(Token)match(input,259,FOLLOW_259_in_fieldSerInit18602); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal893_tree = (CommonTree)adaptor.create(char_literal893);
					adaptor.addChild(root_0, char_literal893_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fieldSerInit"


	public static class bytearrayhead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "bytearrayhead"
	// CIL.g:824:1: bytearrayhead : 'bytearray' '(' ;
	public final CILParser.bytearrayhead_return bytearrayhead() throws RecognitionException {
		CILParser.bytearrayhead_return retval = new CILParser.bytearrayhead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal894=null;
		Token char_literal895=null;

		CommonTree string_literal894_tree=null;
		CommonTree char_literal895_tree=null;

		try {
			// CIL.g:824:25: ( 'bytearray' '(' )
			// CIL.g:824:27: 'bytearray' '('
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal894=(Token)match(input,BYTEARRAY,FOLLOW_BYTEARRAY_in_bytearrayhead18670); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal894_tree = (CommonTree)adaptor.create(string_literal894);
			adaptor.addChild(root_0, string_literal894_tree);
			}

			char_literal895=(Token)match(input,258,FOLLOW_258_in_bytearrayhead18672); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal895_tree = (CommonTree)adaptor.create(char_literal895);
			adaptor.addChild(root_0, char_literal895_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bytearrayhead"


	public static class bytes_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "bytes"
	// CIL.g:827:1: bytes : (| hexbytes );
	public final CILParser.bytes_return bytes() throws RecognitionException {
		CILParser.bytes_return retval = new CILParser.bytes_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope hexbytes896 =null;


		try {
			// CIL.g:827:25: (| hexbytes )
			int alt69=2;
			int LA69_0 = input.LA(1);
			if ( (LA69_0==259) ) {
				alt69=1;
			}
			else if ( (LA69_0==HEXBYTE) ) {
				alt69=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 69, 0, input);
				throw nvae;
			}

			switch (alt69) {
				case 1 :
					// CIL.g:828:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:828:27: hexbytes
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_hexbytes_in_bytes18753);
					hexbytes896=hexbytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, hexbytes896.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bytes"


	public static class hexbytes_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "hexbytes"
	// CIL.g:831:1: hexbytes : ( HEXBYTE ) ( HEXBYTE )* ;
	public final CILParser.hexbytes_return hexbytes() throws RecognitionException {
		CILParser.hexbytes_return retval = new CILParser.hexbytes_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token HEXBYTE897=null;
		Token HEXBYTE898=null;

		CommonTree HEXBYTE897_tree=null;
		CommonTree HEXBYTE898_tree=null;

		try {
			// CIL.g:831:25: ( ( HEXBYTE ) ( HEXBYTE )* )
			// CIL.g:831:27: ( HEXBYTE ) ( HEXBYTE )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:831:27: ( HEXBYTE )
			// CIL.g:831:28: HEXBYTE
			{
			HEXBYTE897=(Token)match(input,HEXBYTE,FOLLOW_HEXBYTE_in_hexbytes18803); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			HEXBYTE897_tree = (CommonTree)adaptor.create(HEXBYTE897);
			adaptor.addChild(root_0, HEXBYTE897_tree);
			}

			}

			// CIL.g:831:37: ( HEXBYTE )*
			loop70:
			while (true) {
				int alt70=2;
				int LA70_0 = input.LA(1);
				if ( (LA70_0==HEXBYTE) ) {
					alt70=1;
				}

				switch (alt70) {
				case 1 :
					// CIL.g:831:38: HEXBYTE
					{
					HEXBYTE898=(Token)match(input,HEXBYTE,FOLLOW_HEXBYTE_in_hexbytes18807); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					HEXBYTE898_tree = (CommonTree)adaptor.create(HEXBYTE898);
					adaptor.addChild(root_0, HEXBYTE898_tree);
					}

					}
					break;

				default :
					break loop70;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "hexbytes"


	public static class fieldInit_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fieldInit"
	// CIL.g:835:1: fieldInit : ( fieldSerInit | compQstring | 'nullref' );
	public final CILParser.fieldInit_return fieldInit() throws RecognitionException {
		CILParser.fieldInit_return retval = new CILParser.fieldInit_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal901=null;
		ParserRuleReturnScope fieldSerInit899 =null;
		ParserRuleReturnScope compQstring900 =null;

		CommonTree string_literal901_tree=null;

		try {
			// CIL.g:835:25: ( fieldSerInit | compQstring | 'nullref' )
			int alt71=3;
			switch ( input.LA(1) ) {
			case BYTEARRAY:
			case CHAR:
			case 340:
			case 369:
			case 370:
			case 388:
			case 389:
			case 390:
			case 391:
			case 475:
			case 476:
			case 477:
			case 478:
			case 482:
				{
				alt71=1;
				}
				break;
			case QSTRING:
				{
				alt71=2;
				}
				break;
			case 422:
				{
				alt71=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 71, 0, input);
				throw nvae;
			}
			switch (alt71) {
				case 1 :
					// CIL.g:835:27: fieldSerInit
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_fieldSerInit_in_fieldInit18866);
					fieldSerInit899=fieldSerInit();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fieldSerInit899.getTree());

					}
					break;
				case 2 :
					// CIL.g:836:27: compQstring
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_compQstring_in_fieldInit18895);
					compQstring900=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring900.getTree());

					}
					break;
				case 3 :
					// CIL.g:837:27: 'nullref'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal901=(Token)match(input,422,FOLLOW_422_in_fieldInit18924); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal901_tree = (CommonTree)adaptor.create(string_literal901);
					adaptor.addChild(root_0, string_literal901_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fieldInit"


	public static class serInit_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "serInit"
	// CIL.g:841:1: serInit : ( fieldSerInit | 'string' '(' 'nullref' ')' | 'string' '(' SQSTRING ')' | 'type' '(' 'class' SQSTRING ')' | 'type' '(' className ')' | 'type' '(' 'nullref' ')' | 'object' '(' serInit ')' | 'float32' '[' int32 ']' '(' f32seq ')' | 'float64' '[' int32 ']' '(' f64seq ')' | 'int64' '[' int32 ']' '(' i64seq ')' | 'int32' '[' int32 ']' '(' i32seq ')' | 'int16' '[' int32 ']' '(' i16seq ')' | 'int8' '[' int32 ']' '(' i8seq ')' | 'uint64' '[' int32 ']' '(' i64seq ')' | 'uint32' '[' int32 ']' '(' i32seq ')' | 'uint16' '[' int32 ']' '(' i16seq ')' | 'uint8' '[' int32 ']' '(' i8seq ')' | 'unsigned' 'int64' '[' int32 ']' '(' i64seq ')' | 'unsigned' 'int32' '[' int32 ']' '(' i32seq ')' | 'unsigned' 'int16' '[' int32 ']' '(' i16seq ')' | 'unsigned' 'int8' '[' int32 ']' '(' i8seq ')' | 'char' '[' int32 ']' '(' i16seq ')' | 'bool' '[' int32 ']' '(' boolSeq ')' | 'string' '[' int32 ']' '(' sqstringSeq ')' | 'type' '[' int32 ']' '(' classSeq ')' | 'object' '[' int32 ']' '(' objSeq ')' );
	public final CILParser.serInit_return serInit() throws RecognitionException {
		CILParser.serInit_return retval = new CILParser.serInit_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal903=null;
		Token char_literal904=null;
		Token string_literal905=null;
		Token char_literal906=null;
		Token string_literal907=null;
		Token char_literal908=null;
		Token SQSTRING909=null;
		Token char_literal910=null;
		Token string_literal911=null;
		Token char_literal912=null;
		Token string_literal913=null;
		Token SQSTRING914=null;
		Token char_literal915=null;
		Token string_literal916=null;
		Token char_literal917=null;
		Token char_literal919=null;
		Token string_literal920=null;
		Token char_literal921=null;
		Token string_literal922=null;
		Token char_literal923=null;
		Token string_literal924=null;
		Token char_literal925=null;
		Token char_literal927=null;
		Token string_literal928=null;
		Token char_literal929=null;
		Token char_literal931=null;
		Token char_literal932=null;
		Token char_literal934=null;
		Token string_literal935=null;
		Token char_literal936=null;
		Token char_literal938=null;
		Token char_literal939=null;
		Token char_literal941=null;
		Token string_literal942=null;
		Token char_literal943=null;
		Token char_literal945=null;
		Token char_literal946=null;
		Token char_literal948=null;
		Token string_literal949=null;
		Token char_literal950=null;
		Token char_literal952=null;
		Token char_literal953=null;
		Token char_literal955=null;
		Token string_literal956=null;
		Token char_literal957=null;
		Token char_literal959=null;
		Token char_literal960=null;
		Token char_literal962=null;
		Token string_literal963=null;
		Token char_literal964=null;
		Token char_literal966=null;
		Token char_literal967=null;
		Token char_literal969=null;
		Token string_literal970=null;
		Token char_literal971=null;
		Token char_literal973=null;
		Token char_literal974=null;
		Token char_literal976=null;
		Token string_literal977=null;
		Token char_literal978=null;
		Token char_literal980=null;
		Token char_literal981=null;
		Token char_literal983=null;
		Token string_literal984=null;
		Token char_literal985=null;
		Token char_literal987=null;
		Token char_literal988=null;
		Token char_literal990=null;
		Token string_literal991=null;
		Token char_literal992=null;
		Token char_literal994=null;
		Token char_literal995=null;
		Token char_literal997=null;
		Token string_literal998=null;
		Token string_literal999=null;
		Token char_literal1000=null;
		Token char_literal1002=null;
		Token char_literal1003=null;
		Token char_literal1005=null;
		Token string_literal1006=null;
		Token string_literal1007=null;
		Token char_literal1008=null;
		Token char_literal1010=null;
		Token char_literal1011=null;
		Token char_literal1013=null;
		Token string_literal1014=null;
		Token string_literal1015=null;
		Token char_literal1016=null;
		Token char_literal1018=null;
		Token char_literal1019=null;
		Token char_literal1021=null;
		Token string_literal1022=null;
		Token string_literal1023=null;
		Token char_literal1024=null;
		Token char_literal1026=null;
		Token char_literal1027=null;
		Token char_literal1029=null;
		Token string_literal1030=null;
		Token char_literal1031=null;
		Token char_literal1033=null;
		Token char_literal1034=null;
		Token char_literal1036=null;
		Token string_literal1037=null;
		Token char_literal1038=null;
		Token char_literal1040=null;
		Token char_literal1041=null;
		Token char_literal1043=null;
		Token string_literal1044=null;
		Token char_literal1045=null;
		Token char_literal1047=null;
		Token char_literal1048=null;
		Token char_literal1050=null;
		Token string_literal1051=null;
		Token char_literal1052=null;
		Token char_literal1054=null;
		Token char_literal1055=null;
		Token char_literal1057=null;
		Token string_literal1058=null;
		Token char_literal1059=null;
		Token char_literal1061=null;
		Token char_literal1062=null;
		Token char_literal1064=null;
		ParserRuleReturnScope fieldSerInit902 =null;
		ParserRuleReturnScope className918 =null;
		ParserRuleReturnScope serInit926 =null;
		ParserRuleReturnScope int32930 =null;
		ParserRuleReturnScope f32seq933 =null;
		ParserRuleReturnScope int32937 =null;
		ParserRuleReturnScope f64seq940 =null;
		ParserRuleReturnScope int32944 =null;
		ParserRuleReturnScope i64seq947 =null;
		ParserRuleReturnScope int32951 =null;
		ParserRuleReturnScope i32seq954 =null;
		ParserRuleReturnScope int32958 =null;
		ParserRuleReturnScope i16seq961 =null;
		ParserRuleReturnScope int32965 =null;
		ParserRuleReturnScope i8seq968 =null;
		ParserRuleReturnScope int32972 =null;
		ParserRuleReturnScope i64seq975 =null;
		ParserRuleReturnScope int32979 =null;
		ParserRuleReturnScope i32seq982 =null;
		ParserRuleReturnScope int32986 =null;
		ParserRuleReturnScope i16seq989 =null;
		ParserRuleReturnScope int32993 =null;
		ParserRuleReturnScope i8seq996 =null;
		ParserRuleReturnScope int321001 =null;
		ParserRuleReturnScope i64seq1004 =null;
		ParserRuleReturnScope int321009 =null;
		ParserRuleReturnScope i32seq1012 =null;
		ParserRuleReturnScope int321017 =null;
		ParserRuleReturnScope i16seq1020 =null;
		ParserRuleReturnScope int321025 =null;
		ParserRuleReturnScope i8seq1028 =null;
		ParserRuleReturnScope int321032 =null;
		ParserRuleReturnScope i16seq1035 =null;
		ParserRuleReturnScope int321039 =null;
		ParserRuleReturnScope boolSeq1042 =null;
		ParserRuleReturnScope int321046 =null;
		ParserRuleReturnScope sqstringSeq1049 =null;
		ParserRuleReturnScope int321053 =null;
		ParserRuleReturnScope classSeq1056 =null;
		ParserRuleReturnScope int321060 =null;
		ParserRuleReturnScope objSeq1063 =null;

		CommonTree string_literal903_tree=null;
		CommonTree char_literal904_tree=null;
		CommonTree string_literal905_tree=null;
		CommonTree char_literal906_tree=null;
		CommonTree string_literal907_tree=null;
		CommonTree char_literal908_tree=null;
		CommonTree SQSTRING909_tree=null;
		CommonTree char_literal910_tree=null;
		CommonTree string_literal911_tree=null;
		CommonTree char_literal912_tree=null;
		CommonTree string_literal913_tree=null;
		CommonTree SQSTRING914_tree=null;
		CommonTree char_literal915_tree=null;
		CommonTree string_literal916_tree=null;
		CommonTree char_literal917_tree=null;
		CommonTree char_literal919_tree=null;
		CommonTree string_literal920_tree=null;
		CommonTree char_literal921_tree=null;
		CommonTree string_literal922_tree=null;
		CommonTree char_literal923_tree=null;
		CommonTree string_literal924_tree=null;
		CommonTree char_literal925_tree=null;
		CommonTree char_literal927_tree=null;
		CommonTree string_literal928_tree=null;
		CommonTree char_literal929_tree=null;
		CommonTree char_literal931_tree=null;
		CommonTree char_literal932_tree=null;
		CommonTree char_literal934_tree=null;
		CommonTree string_literal935_tree=null;
		CommonTree char_literal936_tree=null;
		CommonTree char_literal938_tree=null;
		CommonTree char_literal939_tree=null;
		CommonTree char_literal941_tree=null;
		CommonTree string_literal942_tree=null;
		CommonTree char_literal943_tree=null;
		CommonTree char_literal945_tree=null;
		CommonTree char_literal946_tree=null;
		CommonTree char_literal948_tree=null;
		CommonTree string_literal949_tree=null;
		CommonTree char_literal950_tree=null;
		CommonTree char_literal952_tree=null;
		CommonTree char_literal953_tree=null;
		CommonTree char_literal955_tree=null;
		CommonTree string_literal956_tree=null;
		CommonTree char_literal957_tree=null;
		CommonTree char_literal959_tree=null;
		CommonTree char_literal960_tree=null;
		CommonTree char_literal962_tree=null;
		CommonTree string_literal963_tree=null;
		CommonTree char_literal964_tree=null;
		CommonTree char_literal966_tree=null;
		CommonTree char_literal967_tree=null;
		CommonTree char_literal969_tree=null;
		CommonTree string_literal970_tree=null;
		CommonTree char_literal971_tree=null;
		CommonTree char_literal973_tree=null;
		CommonTree char_literal974_tree=null;
		CommonTree char_literal976_tree=null;
		CommonTree string_literal977_tree=null;
		CommonTree char_literal978_tree=null;
		CommonTree char_literal980_tree=null;
		CommonTree char_literal981_tree=null;
		CommonTree char_literal983_tree=null;
		CommonTree string_literal984_tree=null;
		CommonTree char_literal985_tree=null;
		CommonTree char_literal987_tree=null;
		CommonTree char_literal988_tree=null;
		CommonTree char_literal990_tree=null;
		CommonTree string_literal991_tree=null;
		CommonTree char_literal992_tree=null;
		CommonTree char_literal994_tree=null;
		CommonTree char_literal995_tree=null;
		CommonTree char_literal997_tree=null;
		CommonTree string_literal998_tree=null;
		CommonTree string_literal999_tree=null;
		CommonTree char_literal1000_tree=null;
		CommonTree char_literal1002_tree=null;
		CommonTree char_literal1003_tree=null;
		CommonTree char_literal1005_tree=null;
		CommonTree string_literal1006_tree=null;
		CommonTree string_literal1007_tree=null;
		CommonTree char_literal1008_tree=null;
		CommonTree char_literal1010_tree=null;
		CommonTree char_literal1011_tree=null;
		CommonTree char_literal1013_tree=null;
		CommonTree string_literal1014_tree=null;
		CommonTree string_literal1015_tree=null;
		CommonTree char_literal1016_tree=null;
		CommonTree char_literal1018_tree=null;
		CommonTree char_literal1019_tree=null;
		CommonTree char_literal1021_tree=null;
		CommonTree string_literal1022_tree=null;
		CommonTree string_literal1023_tree=null;
		CommonTree char_literal1024_tree=null;
		CommonTree char_literal1026_tree=null;
		CommonTree char_literal1027_tree=null;
		CommonTree char_literal1029_tree=null;
		CommonTree string_literal1030_tree=null;
		CommonTree char_literal1031_tree=null;
		CommonTree char_literal1033_tree=null;
		CommonTree char_literal1034_tree=null;
		CommonTree char_literal1036_tree=null;
		CommonTree string_literal1037_tree=null;
		CommonTree char_literal1038_tree=null;
		CommonTree char_literal1040_tree=null;
		CommonTree char_literal1041_tree=null;
		CommonTree char_literal1043_tree=null;
		CommonTree string_literal1044_tree=null;
		CommonTree char_literal1045_tree=null;
		CommonTree char_literal1047_tree=null;
		CommonTree char_literal1048_tree=null;
		CommonTree char_literal1050_tree=null;
		CommonTree string_literal1051_tree=null;
		CommonTree char_literal1052_tree=null;
		CommonTree char_literal1054_tree=null;
		CommonTree char_literal1055_tree=null;
		CommonTree char_literal1057_tree=null;
		CommonTree string_literal1058_tree=null;
		CommonTree char_literal1059_tree=null;
		CommonTree char_literal1061_tree=null;
		CommonTree char_literal1062_tree=null;
		CommonTree char_literal1064_tree=null;

		try {
			// CIL.g:841:25: ( fieldSerInit | 'string' '(' 'nullref' ')' | 'string' '(' SQSTRING ')' | 'type' '(' 'class' SQSTRING ')' | 'type' '(' className ')' | 'type' '(' 'nullref' ')' | 'object' '(' serInit ')' | 'float32' '[' int32 ']' '(' f32seq ')' | 'float64' '[' int32 ']' '(' f64seq ')' | 'int64' '[' int32 ']' '(' i64seq ')' | 'int32' '[' int32 ']' '(' i32seq ')' | 'int16' '[' int32 ']' '(' i16seq ')' | 'int8' '[' int32 ']' '(' i8seq ')' | 'uint64' '[' int32 ']' '(' i64seq ')' | 'uint32' '[' int32 ']' '(' i32seq ')' | 'uint16' '[' int32 ']' '(' i16seq ')' | 'uint8' '[' int32 ']' '(' i8seq ')' | 'unsigned' 'int64' '[' int32 ']' '(' i64seq ')' | 'unsigned' 'int32' '[' int32 ']' '(' i32seq ')' | 'unsigned' 'int16' '[' int32 ']' '(' i16seq ')' | 'unsigned' 'int8' '[' int32 ']' '(' i8seq ')' | 'char' '[' int32 ']' '(' i16seq ')' | 'bool' '[' int32 ']' '(' boolSeq ')' | 'string' '[' int32 ']' '(' sqstringSeq ')' | 'type' '[' int32 ']' '(' classSeq ')' | 'object' '[' int32 ']' '(' objSeq ')' )
			int alt72=26;
			switch ( input.LA(1) ) {
			case 369:
				{
				int LA72_1 = input.LA(2);
				if ( (LA72_1==258) ) {
					alt72=1;
				}
				else if ( (LA72_1==323) ) {
					alt72=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 370:
				{
				int LA72_2 = input.LA(2);
				if ( (LA72_2==258) ) {
					alt72=1;
				}
				else if ( (LA72_2==323) ) {
					alt72=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 390:
				{
				int LA72_3 = input.LA(2);
				if ( (LA72_3==258) ) {
					alt72=1;
				}
				else if ( (LA72_3==323) ) {
					alt72=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 389:
				{
				int LA72_4 = input.LA(2);
				if ( (LA72_4==258) ) {
					alt72=1;
				}
				else if ( (LA72_4==323) ) {
					alt72=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 388:
				{
				int LA72_5 = input.LA(2);
				if ( (LA72_5==258) ) {
					alt72=1;
				}
				else if ( (LA72_5==323) ) {
					alt72=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 5, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 391:
				{
				int LA72_6 = input.LA(2);
				if ( (LA72_6==258) ) {
					alt72=1;
				}
				else if ( (LA72_6==323) ) {
					alt72=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 482:
				{
				switch ( input.LA(2) ) {
				case 390:
					{
					int LA72_24 = input.LA(3);
					if ( (LA72_24==258) ) {
						alt72=1;
					}
					else if ( (LA72_24==323) ) {
						alt72=18;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 72, 24, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case 389:
					{
					int LA72_25 = input.LA(3);
					if ( (LA72_25==258) ) {
						alt72=1;
					}
					else if ( (LA72_25==323) ) {
						alt72=19;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 72, 25, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case 388:
					{
					int LA72_26 = input.LA(3);
					if ( (LA72_26==258) ) {
						alt72=1;
					}
					else if ( (LA72_26==323) ) {
						alt72=20;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 72, 26, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case 391:
					{
					int LA72_27 = input.LA(3);
					if ( (LA72_27==258) ) {
						alt72=1;
					}
					else if ( (LA72_27==323) ) {
						alt72=21;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 72, 27, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 7, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case 477:
				{
				int LA72_8 = input.LA(2);
				if ( (LA72_8==258) ) {
					alt72=1;
				}
				else if ( (LA72_8==323) ) {
					alt72=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 476:
				{
				int LA72_9 = input.LA(2);
				if ( (LA72_9==258) ) {
					alt72=1;
				}
				else if ( (LA72_9==323) ) {
					alt72=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 9, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 475:
				{
				int LA72_10 = input.LA(2);
				if ( (LA72_10==258) ) {
					alt72=1;
				}
				else if ( (LA72_10==323) ) {
					alt72=16;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 10, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 478:
				{
				int LA72_11 = input.LA(2);
				if ( (LA72_11==258) ) {
					alt72=1;
				}
				else if ( (LA72_11==323) ) {
					alt72=17;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 11, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CHAR:
				{
				int LA72_12 = input.LA(2);
				if ( (LA72_12==258) ) {
					alt72=1;
				}
				else if ( (LA72_12==323) ) {
					alt72=22;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 12, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 340:
				{
				int LA72_13 = input.LA(2);
				if ( (LA72_13==258) ) {
					alt72=1;
				}
				else if ( (LA72_13==323) ) {
					alt72=23;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 13, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BYTEARRAY:
				{
				alt72=1;
				}
				break;
			case 462:
				{
				int LA72_15 = input.LA(2);
				if ( (LA72_15==258) ) {
					int LA72_34 = input.LA(3);
					if ( (LA72_34==422) ) {
						alt72=2;
					}
					else if ( (LA72_34==SQSTRING) ) {
						alt72=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 72, 34, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA72_15==323) ) {
					alt72=24;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 15, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 472:
				{
				int LA72_16 = input.LA(2);
				if ( (LA72_16==258) ) {
					switch ( input.LA(3) ) {
					case CLASS:
						{
						alt72=4;
						}
						break;
					case 422:
						{
						alt72=6;
						}
						break;
					case DOTTEDNAME:
					case ID:
					case SQSTRING:
					case 267:
					case 294:
					case 308:
					case 310:
					case 323:
					case 406:
						{
						alt72=5;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 72, 36, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}
				}
				else if ( (LA72_16==323) ) {
					alt72=25;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 16, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 423:
				{
				int LA72_17 = input.LA(2);
				if ( (LA72_17==258) ) {
					alt72=7;
				}
				else if ( (LA72_17==323) ) {
					alt72=26;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 72, 17, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 72, 0, input);
				throw nvae;
			}
			switch (alt72) {
				case 1 :
					// CIL.g:841:27: fieldSerInit
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_fieldSerInit_in_serInit19000);
					fieldSerInit902=fieldSerInit();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fieldSerInit902.getTree());

					}
					break;
				case 2 :
					// CIL.g:842:27: 'string' '(' 'nullref' ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal903=(Token)match(input,462,FOLLOW_462_in_serInit19029); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal903_tree = (CommonTree)adaptor.create(string_literal903);
					adaptor.addChild(root_0, string_literal903_tree);
					}

					char_literal904=(Token)match(input,258,FOLLOW_258_in_serInit19031); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal904_tree = (CommonTree)adaptor.create(char_literal904);
					adaptor.addChild(root_0, char_literal904_tree);
					}

					string_literal905=(Token)match(input,422,FOLLOW_422_in_serInit19033); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal905_tree = (CommonTree)adaptor.create(string_literal905);
					adaptor.addChild(root_0, string_literal905_tree);
					}

					char_literal906=(Token)match(input,259,FOLLOW_259_in_serInit19035); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal906_tree = (CommonTree)adaptor.create(char_literal906);
					adaptor.addChild(root_0, char_literal906_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:843:27: 'string' '(' SQSTRING ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal907=(Token)match(input,462,FOLLOW_462_in_serInit19064); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal907_tree = (CommonTree)adaptor.create(string_literal907);
					adaptor.addChild(root_0, string_literal907_tree);
					}

					char_literal908=(Token)match(input,258,FOLLOW_258_in_serInit19066); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal908_tree = (CommonTree)adaptor.create(char_literal908);
					adaptor.addChild(root_0, char_literal908_tree);
					}

					SQSTRING909=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_serInit19068); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING909_tree = (CommonTree)adaptor.create(SQSTRING909);
					adaptor.addChild(root_0, SQSTRING909_tree);
					}

					char_literal910=(Token)match(input,259,FOLLOW_259_in_serInit19070); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal910_tree = (CommonTree)adaptor.create(char_literal910);
					adaptor.addChild(root_0, char_literal910_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:844:27: 'type' '(' 'class' SQSTRING ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal911=(Token)match(input,472,FOLLOW_472_in_serInit19099); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal911_tree = (CommonTree)adaptor.create(string_literal911);
					adaptor.addChild(root_0, string_literal911_tree);
					}

					char_literal912=(Token)match(input,258,FOLLOW_258_in_serInit19101); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal912_tree = (CommonTree)adaptor.create(char_literal912);
					adaptor.addChild(root_0, char_literal912_tree);
					}

					string_literal913=(Token)match(input,CLASS,FOLLOW_CLASS_in_serInit19103); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal913_tree = (CommonTree)adaptor.create(string_literal913);
					adaptor.addChild(root_0, string_literal913_tree);
					}

					SQSTRING914=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_serInit19105); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING914_tree = (CommonTree)adaptor.create(SQSTRING914);
					adaptor.addChild(root_0, SQSTRING914_tree);
					}

					char_literal915=(Token)match(input,259,FOLLOW_259_in_serInit19107); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal915_tree = (CommonTree)adaptor.create(char_literal915);
					adaptor.addChild(root_0, char_literal915_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:845:27: 'type' '(' className ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal916=(Token)match(input,472,FOLLOW_472_in_serInit19136); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal916_tree = (CommonTree)adaptor.create(string_literal916);
					adaptor.addChild(root_0, string_literal916_tree);
					}

					char_literal917=(Token)match(input,258,FOLLOW_258_in_serInit19138); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal917_tree = (CommonTree)adaptor.create(char_literal917);
					adaptor.addChild(root_0, char_literal917_tree);
					}

					pushFollow(FOLLOW_className_in_serInit19140);
					className918=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className918.getTree());

					char_literal919=(Token)match(input,259,FOLLOW_259_in_serInit19142); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal919_tree = (CommonTree)adaptor.create(char_literal919);
					adaptor.addChild(root_0, char_literal919_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:846:27: 'type' '(' 'nullref' ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal920=(Token)match(input,472,FOLLOW_472_in_serInit19171); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal920_tree = (CommonTree)adaptor.create(string_literal920);
					adaptor.addChild(root_0, string_literal920_tree);
					}

					char_literal921=(Token)match(input,258,FOLLOW_258_in_serInit19173); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal921_tree = (CommonTree)adaptor.create(char_literal921);
					adaptor.addChild(root_0, char_literal921_tree);
					}

					string_literal922=(Token)match(input,422,FOLLOW_422_in_serInit19175); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal922_tree = (CommonTree)adaptor.create(string_literal922);
					adaptor.addChild(root_0, string_literal922_tree);
					}

					char_literal923=(Token)match(input,259,FOLLOW_259_in_serInit19177); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal923_tree = (CommonTree)adaptor.create(char_literal923);
					adaptor.addChild(root_0, char_literal923_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:847:27: 'object' '(' serInit ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal924=(Token)match(input,423,FOLLOW_423_in_serInit19206); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal924_tree = (CommonTree)adaptor.create(string_literal924);
					adaptor.addChild(root_0, string_literal924_tree);
					}

					char_literal925=(Token)match(input,258,FOLLOW_258_in_serInit19208); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal925_tree = (CommonTree)adaptor.create(char_literal925);
					adaptor.addChild(root_0, char_literal925_tree);
					}

					pushFollow(FOLLOW_serInit_in_serInit19210);
					serInit926=serInit();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, serInit926.getTree());

					char_literal927=(Token)match(input,259,FOLLOW_259_in_serInit19212); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal927_tree = (CommonTree)adaptor.create(char_literal927);
					adaptor.addChild(root_0, char_literal927_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:848:27: 'float32' '[' int32 ']' '(' f32seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal928=(Token)match(input,369,FOLLOW_369_in_serInit19242); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal928_tree = (CommonTree)adaptor.create(string_literal928);
					adaptor.addChild(root_0, string_literal928_tree);
					}

					char_literal929=(Token)match(input,323,FOLLOW_323_in_serInit19244); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal929_tree = (CommonTree)adaptor.create(char_literal929);
					adaptor.addChild(root_0, char_literal929_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19246);
					int32930=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32930.getTree());

					char_literal931=(Token)match(input,324,FOLLOW_324_in_serInit19248); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal931_tree = (CommonTree)adaptor.create(char_literal931);
					adaptor.addChild(root_0, char_literal931_tree);
					}

					char_literal932=(Token)match(input,258,FOLLOW_258_in_serInit19250); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal932_tree = (CommonTree)adaptor.create(char_literal932);
					adaptor.addChild(root_0, char_literal932_tree);
					}

					pushFollow(FOLLOW_f32seq_in_serInit19252);
					f32seq933=f32seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, f32seq933.getTree());

					char_literal934=(Token)match(input,259,FOLLOW_259_in_serInit19254); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal934_tree = (CommonTree)adaptor.create(char_literal934);
					adaptor.addChild(root_0, char_literal934_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:849:27: 'float64' '[' int32 ']' '(' f64seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal935=(Token)match(input,370,FOLLOW_370_in_serInit19283); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal935_tree = (CommonTree)adaptor.create(string_literal935);
					adaptor.addChild(root_0, string_literal935_tree);
					}

					char_literal936=(Token)match(input,323,FOLLOW_323_in_serInit19285); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal936_tree = (CommonTree)adaptor.create(char_literal936);
					adaptor.addChild(root_0, char_literal936_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19287);
					int32937=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32937.getTree());

					char_literal938=(Token)match(input,324,FOLLOW_324_in_serInit19289); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal938_tree = (CommonTree)adaptor.create(char_literal938);
					adaptor.addChild(root_0, char_literal938_tree);
					}

					char_literal939=(Token)match(input,258,FOLLOW_258_in_serInit19291); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal939_tree = (CommonTree)adaptor.create(char_literal939);
					adaptor.addChild(root_0, char_literal939_tree);
					}

					pushFollow(FOLLOW_f64seq_in_serInit19293);
					f64seq940=f64seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, f64seq940.getTree());

					char_literal941=(Token)match(input,259,FOLLOW_259_in_serInit19295); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal941_tree = (CommonTree)adaptor.create(char_literal941);
					adaptor.addChild(root_0, char_literal941_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:850:27: 'int64' '[' int32 ']' '(' i64seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal942=(Token)match(input,390,FOLLOW_390_in_serInit19324); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal942_tree = (CommonTree)adaptor.create(string_literal942);
					adaptor.addChild(root_0, string_literal942_tree);
					}

					char_literal943=(Token)match(input,323,FOLLOW_323_in_serInit19326); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal943_tree = (CommonTree)adaptor.create(char_literal943);
					adaptor.addChild(root_0, char_literal943_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19328);
					int32944=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32944.getTree());

					char_literal945=(Token)match(input,324,FOLLOW_324_in_serInit19330); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal945_tree = (CommonTree)adaptor.create(char_literal945);
					adaptor.addChild(root_0, char_literal945_tree);
					}

					char_literal946=(Token)match(input,258,FOLLOW_258_in_serInit19332); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal946_tree = (CommonTree)adaptor.create(char_literal946);
					adaptor.addChild(root_0, char_literal946_tree);
					}

					pushFollow(FOLLOW_i64seq_in_serInit19334);
					i64seq947=i64seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i64seq947.getTree());

					char_literal948=(Token)match(input,259,FOLLOW_259_in_serInit19336); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal948_tree = (CommonTree)adaptor.create(char_literal948);
					adaptor.addChild(root_0, char_literal948_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:851:27: 'int32' '[' int32 ']' '(' i32seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal949=(Token)match(input,389,FOLLOW_389_in_serInit19365); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal949_tree = (CommonTree)adaptor.create(string_literal949);
					adaptor.addChild(root_0, string_literal949_tree);
					}

					char_literal950=(Token)match(input,323,FOLLOW_323_in_serInit19367); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal950_tree = (CommonTree)adaptor.create(char_literal950);
					adaptor.addChild(root_0, char_literal950_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19369);
					int32951=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32951.getTree());

					char_literal952=(Token)match(input,324,FOLLOW_324_in_serInit19371); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal952_tree = (CommonTree)adaptor.create(char_literal952);
					adaptor.addChild(root_0, char_literal952_tree);
					}

					char_literal953=(Token)match(input,258,FOLLOW_258_in_serInit19373); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal953_tree = (CommonTree)adaptor.create(char_literal953);
					adaptor.addChild(root_0, char_literal953_tree);
					}

					pushFollow(FOLLOW_i32seq_in_serInit19375);
					i32seq954=i32seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i32seq954.getTree());

					char_literal955=(Token)match(input,259,FOLLOW_259_in_serInit19377); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal955_tree = (CommonTree)adaptor.create(char_literal955);
					adaptor.addChild(root_0, char_literal955_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:852:27: 'int16' '[' int32 ']' '(' i16seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal956=(Token)match(input,388,FOLLOW_388_in_serInit19406); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal956_tree = (CommonTree)adaptor.create(string_literal956);
					adaptor.addChild(root_0, string_literal956_tree);
					}

					char_literal957=(Token)match(input,323,FOLLOW_323_in_serInit19408); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal957_tree = (CommonTree)adaptor.create(char_literal957);
					adaptor.addChild(root_0, char_literal957_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19410);
					int32958=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32958.getTree());

					char_literal959=(Token)match(input,324,FOLLOW_324_in_serInit19412); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal959_tree = (CommonTree)adaptor.create(char_literal959);
					adaptor.addChild(root_0, char_literal959_tree);
					}

					char_literal960=(Token)match(input,258,FOLLOW_258_in_serInit19414); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal960_tree = (CommonTree)adaptor.create(char_literal960);
					adaptor.addChild(root_0, char_literal960_tree);
					}

					pushFollow(FOLLOW_i16seq_in_serInit19416);
					i16seq961=i16seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i16seq961.getTree());

					char_literal962=(Token)match(input,259,FOLLOW_259_in_serInit19418); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal962_tree = (CommonTree)adaptor.create(char_literal962);
					adaptor.addChild(root_0, char_literal962_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:853:27: 'int8' '[' int32 ']' '(' i8seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal963=(Token)match(input,391,FOLLOW_391_in_serInit19447); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal963_tree = (CommonTree)adaptor.create(string_literal963);
					adaptor.addChild(root_0, string_literal963_tree);
					}

					char_literal964=(Token)match(input,323,FOLLOW_323_in_serInit19449); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal964_tree = (CommonTree)adaptor.create(char_literal964);
					adaptor.addChild(root_0, char_literal964_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19451);
					int32965=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32965.getTree());

					char_literal966=(Token)match(input,324,FOLLOW_324_in_serInit19453); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal966_tree = (CommonTree)adaptor.create(char_literal966);
					adaptor.addChild(root_0, char_literal966_tree);
					}

					char_literal967=(Token)match(input,258,FOLLOW_258_in_serInit19455); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal967_tree = (CommonTree)adaptor.create(char_literal967);
					adaptor.addChild(root_0, char_literal967_tree);
					}

					pushFollow(FOLLOW_i8seq_in_serInit19457);
					i8seq968=i8seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i8seq968.getTree());

					char_literal969=(Token)match(input,259,FOLLOW_259_in_serInit19459); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal969_tree = (CommonTree)adaptor.create(char_literal969);
					adaptor.addChild(root_0, char_literal969_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:854:27: 'uint64' '[' int32 ']' '(' i64seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal970=(Token)match(input,477,FOLLOW_477_in_serInit19488); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal970_tree = (CommonTree)adaptor.create(string_literal970);
					adaptor.addChild(root_0, string_literal970_tree);
					}

					char_literal971=(Token)match(input,323,FOLLOW_323_in_serInit19490); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal971_tree = (CommonTree)adaptor.create(char_literal971);
					adaptor.addChild(root_0, char_literal971_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19492);
					int32972=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32972.getTree());

					char_literal973=(Token)match(input,324,FOLLOW_324_in_serInit19494); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal973_tree = (CommonTree)adaptor.create(char_literal973);
					adaptor.addChild(root_0, char_literal973_tree);
					}

					char_literal974=(Token)match(input,258,FOLLOW_258_in_serInit19496); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal974_tree = (CommonTree)adaptor.create(char_literal974);
					adaptor.addChild(root_0, char_literal974_tree);
					}

					pushFollow(FOLLOW_i64seq_in_serInit19498);
					i64seq975=i64seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i64seq975.getTree());

					char_literal976=(Token)match(input,259,FOLLOW_259_in_serInit19500); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal976_tree = (CommonTree)adaptor.create(char_literal976);
					adaptor.addChild(root_0, char_literal976_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:855:27: 'uint32' '[' int32 ']' '(' i32seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal977=(Token)match(input,476,FOLLOW_476_in_serInit19529); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal977_tree = (CommonTree)adaptor.create(string_literal977);
					adaptor.addChild(root_0, string_literal977_tree);
					}

					char_literal978=(Token)match(input,323,FOLLOW_323_in_serInit19531); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal978_tree = (CommonTree)adaptor.create(char_literal978);
					adaptor.addChild(root_0, char_literal978_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19533);
					int32979=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32979.getTree());

					char_literal980=(Token)match(input,324,FOLLOW_324_in_serInit19535); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal980_tree = (CommonTree)adaptor.create(char_literal980);
					adaptor.addChild(root_0, char_literal980_tree);
					}

					char_literal981=(Token)match(input,258,FOLLOW_258_in_serInit19537); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal981_tree = (CommonTree)adaptor.create(char_literal981);
					adaptor.addChild(root_0, char_literal981_tree);
					}

					pushFollow(FOLLOW_i32seq_in_serInit19539);
					i32seq982=i32seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i32seq982.getTree());

					char_literal983=(Token)match(input,259,FOLLOW_259_in_serInit19541); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal983_tree = (CommonTree)adaptor.create(char_literal983);
					adaptor.addChild(root_0, char_literal983_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:856:27: 'uint16' '[' int32 ']' '(' i16seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal984=(Token)match(input,475,FOLLOW_475_in_serInit19570); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal984_tree = (CommonTree)adaptor.create(string_literal984);
					adaptor.addChild(root_0, string_literal984_tree);
					}

					char_literal985=(Token)match(input,323,FOLLOW_323_in_serInit19572); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal985_tree = (CommonTree)adaptor.create(char_literal985);
					adaptor.addChild(root_0, char_literal985_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19574);
					int32986=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32986.getTree());

					char_literal987=(Token)match(input,324,FOLLOW_324_in_serInit19576); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal987_tree = (CommonTree)adaptor.create(char_literal987);
					adaptor.addChild(root_0, char_literal987_tree);
					}

					char_literal988=(Token)match(input,258,FOLLOW_258_in_serInit19578); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal988_tree = (CommonTree)adaptor.create(char_literal988);
					adaptor.addChild(root_0, char_literal988_tree);
					}

					pushFollow(FOLLOW_i16seq_in_serInit19580);
					i16seq989=i16seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i16seq989.getTree());

					char_literal990=(Token)match(input,259,FOLLOW_259_in_serInit19582); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal990_tree = (CommonTree)adaptor.create(char_literal990);
					adaptor.addChild(root_0, char_literal990_tree);
					}

					}
					break;
				case 17 :
					// CIL.g:857:27: 'uint8' '[' int32 ']' '(' i8seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal991=(Token)match(input,478,FOLLOW_478_in_serInit19611); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal991_tree = (CommonTree)adaptor.create(string_literal991);
					adaptor.addChild(root_0, string_literal991_tree);
					}

					char_literal992=(Token)match(input,323,FOLLOW_323_in_serInit19613); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal992_tree = (CommonTree)adaptor.create(char_literal992);
					adaptor.addChild(root_0, char_literal992_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19615);
					int32993=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int32993.getTree());

					char_literal994=(Token)match(input,324,FOLLOW_324_in_serInit19617); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal994_tree = (CommonTree)adaptor.create(char_literal994);
					adaptor.addChild(root_0, char_literal994_tree);
					}

					char_literal995=(Token)match(input,258,FOLLOW_258_in_serInit19619); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal995_tree = (CommonTree)adaptor.create(char_literal995);
					adaptor.addChild(root_0, char_literal995_tree);
					}

					pushFollow(FOLLOW_i8seq_in_serInit19621);
					i8seq996=i8seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i8seq996.getTree());

					char_literal997=(Token)match(input,259,FOLLOW_259_in_serInit19623); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal997_tree = (CommonTree)adaptor.create(char_literal997);
					adaptor.addChild(root_0, char_literal997_tree);
					}

					}
					break;
				case 18 :
					// CIL.g:858:27: 'unsigned' 'int64' '[' int32 ']' '(' i64seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal998=(Token)match(input,482,FOLLOW_482_in_serInit19652); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal998_tree = (CommonTree)adaptor.create(string_literal998);
					adaptor.addChild(root_0, string_literal998_tree);
					}

					string_literal999=(Token)match(input,390,FOLLOW_390_in_serInit19654); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal999_tree = (CommonTree)adaptor.create(string_literal999);
					adaptor.addChild(root_0, string_literal999_tree);
					}

					char_literal1000=(Token)match(input,323,FOLLOW_323_in_serInit19656); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1000_tree = (CommonTree)adaptor.create(char_literal1000);
					adaptor.addChild(root_0, char_literal1000_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19658);
					int321001=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321001.getTree());

					char_literal1002=(Token)match(input,324,FOLLOW_324_in_serInit19660); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1002_tree = (CommonTree)adaptor.create(char_literal1002);
					adaptor.addChild(root_0, char_literal1002_tree);
					}

					char_literal1003=(Token)match(input,258,FOLLOW_258_in_serInit19662); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1003_tree = (CommonTree)adaptor.create(char_literal1003);
					adaptor.addChild(root_0, char_literal1003_tree);
					}

					pushFollow(FOLLOW_i64seq_in_serInit19664);
					i64seq1004=i64seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i64seq1004.getTree());

					char_literal1005=(Token)match(input,259,FOLLOW_259_in_serInit19666); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1005_tree = (CommonTree)adaptor.create(char_literal1005);
					adaptor.addChild(root_0, char_literal1005_tree);
					}

					}
					break;
				case 19 :
					// CIL.g:859:27: 'unsigned' 'int32' '[' int32 ']' '(' i32seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1006=(Token)match(input,482,FOLLOW_482_in_serInit19695); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1006_tree = (CommonTree)adaptor.create(string_literal1006);
					adaptor.addChild(root_0, string_literal1006_tree);
					}

					string_literal1007=(Token)match(input,389,FOLLOW_389_in_serInit19697); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1007_tree = (CommonTree)adaptor.create(string_literal1007);
					adaptor.addChild(root_0, string_literal1007_tree);
					}

					char_literal1008=(Token)match(input,323,FOLLOW_323_in_serInit19699); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1008_tree = (CommonTree)adaptor.create(char_literal1008);
					adaptor.addChild(root_0, char_literal1008_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19701);
					int321009=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321009.getTree());

					char_literal1010=(Token)match(input,324,FOLLOW_324_in_serInit19703); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1010_tree = (CommonTree)adaptor.create(char_literal1010);
					adaptor.addChild(root_0, char_literal1010_tree);
					}

					char_literal1011=(Token)match(input,258,FOLLOW_258_in_serInit19705); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1011_tree = (CommonTree)adaptor.create(char_literal1011);
					adaptor.addChild(root_0, char_literal1011_tree);
					}

					pushFollow(FOLLOW_i32seq_in_serInit19707);
					i32seq1012=i32seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i32seq1012.getTree());

					char_literal1013=(Token)match(input,259,FOLLOW_259_in_serInit19709); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1013_tree = (CommonTree)adaptor.create(char_literal1013);
					adaptor.addChild(root_0, char_literal1013_tree);
					}

					}
					break;
				case 20 :
					// CIL.g:860:27: 'unsigned' 'int16' '[' int32 ']' '(' i16seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1014=(Token)match(input,482,FOLLOW_482_in_serInit19738); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1014_tree = (CommonTree)adaptor.create(string_literal1014);
					adaptor.addChild(root_0, string_literal1014_tree);
					}

					string_literal1015=(Token)match(input,388,FOLLOW_388_in_serInit19740); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1015_tree = (CommonTree)adaptor.create(string_literal1015);
					adaptor.addChild(root_0, string_literal1015_tree);
					}

					char_literal1016=(Token)match(input,323,FOLLOW_323_in_serInit19742); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1016_tree = (CommonTree)adaptor.create(char_literal1016);
					adaptor.addChild(root_0, char_literal1016_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19744);
					int321017=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321017.getTree());

					char_literal1018=(Token)match(input,324,FOLLOW_324_in_serInit19746); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1018_tree = (CommonTree)adaptor.create(char_literal1018);
					adaptor.addChild(root_0, char_literal1018_tree);
					}

					char_literal1019=(Token)match(input,258,FOLLOW_258_in_serInit19748); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1019_tree = (CommonTree)adaptor.create(char_literal1019);
					adaptor.addChild(root_0, char_literal1019_tree);
					}

					pushFollow(FOLLOW_i16seq_in_serInit19750);
					i16seq1020=i16seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i16seq1020.getTree());

					char_literal1021=(Token)match(input,259,FOLLOW_259_in_serInit19752); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1021_tree = (CommonTree)adaptor.create(char_literal1021);
					adaptor.addChild(root_0, char_literal1021_tree);
					}

					}
					break;
				case 21 :
					// CIL.g:861:27: 'unsigned' 'int8' '[' int32 ']' '(' i8seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1022=(Token)match(input,482,FOLLOW_482_in_serInit19781); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1022_tree = (CommonTree)adaptor.create(string_literal1022);
					adaptor.addChild(root_0, string_literal1022_tree);
					}

					string_literal1023=(Token)match(input,391,FOLLOW_391_in_serInit19783); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1023_tree = (CommonTree)adaptor.create(string_literal1023);
					adaptor.addChild(root_0, string_literal1023_tree);
					}

					char_literal1024=(Token)match(input,323,FOLLOW_323_in_serInit19785); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1024_tree = (CommonTree)adaptor.create(char_literal1024);
					adaptor.addChild(root_0, char_literal1024_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19787);
					int321025=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321025.getTree());

					char_literal1026=(Token)match(input,324,FOLLOW_324_in_serInit19789); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1026_tree = (CommonTree)adaptor.create(char_literal1026);
					adaptor.addChild(root_0, char_literal1026_tree);
					}

					char_literal1027=(Token)match(input,258,FOLLOW_258_in_serInit19791); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1027_tree = (CommonTree)adaptor.create(char_literal1027);
					adaptor.addChild(root_0, char_literal1027_tree);
					}

					pushFollow(FOLLOW_i8seq_in_serInit19793);
					i8seq1028=i8seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i8seq1028.getTree());

					char_literal1029=(Token)match(input,259,FOLLOW_259_in_serInit19795); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1029_tree = (CommonTree)adaptor.create(char_literal1029);
					adaptor.addChild(root_0, char_literal1029_tree);
					}

					}
					break;
				case 22 :
					// CIL.g:862:27: 'char' '[' int32 ']' '(' i16seq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1030=(Token)match(input,CHAR,FOLLOW_CHAR_in_serInit19824); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1030_tree = (CommonTree)adaptor.create(string_literal1030);
					adaptor.addChild(root_0, string_literal1030_tree);
					}

					char_literal1031=(Token)match(input,323,FOLLOW_323_in_serInit19826); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1031_tree = (CommonTree)adaptor.create(char_literal1031);
					adaptor.addChild(root_0, char_literal1031_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19828);
					int321032=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321032.getTree());

					char_literal1033=(Token)match(input,324,FOLLOW_324_in_serInit19830); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1033_tree = (CommonTree)adaptor.create(char_literal1033);
					adaptor.addChild(root_0, char_literal1033_tree);
					}

					char_literal1034=(Token)match(input,258,FOLLOW_258_in_serInit19832); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1034_tree = (CommonTree)adaptor.create(char_literal1034);
					adaptor.addChild(root_0, char_literal1034_tree);
					}

					pushFollow(FOLLOW_i16seq_in_serInit19834);
					i16seq1035=i16seq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, i16seq1035.getTree());

					char_literal1036=(Token)match(input,259,FOLLOW_259_in_serInit19836); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1036_tree = (CommonTree)adaptor.create(char_literal1036);
					adaptor.addChild(root_0, char_literal1036_tree);
					}

					}
					break;
				case 23 :
					// CIL.g:863:27: 'bool' '[' int32 ']' '(' boolSeq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1037=(Token)match(input,340,FOLLOW_340_in_serInit19865); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1037_tree = (CommonTree)adaptor.create(string_literal1037);
					adaptor.addChild(root_0, string_literal1037_tree);
					}

					char_literal1038=(Token)match(input,323,FOLLOW_323_in_serInit19867); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1038_tree = (CommonTree)adaptor.create(char_literal1038);
					adaptor.addChild(root_0, char_literal1038_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19869);
					int321039=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321039.getTree());

					char_literal1040=(Token)match(input,324,FOLLOW_324_in_serInit19871); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1040_tree = (CommonTree)adaptor.create(char_literal1040);
					adaptor.addChild(root_0, char_literal1040_tree);
					}

					char_literal1041=(Token)match(input,258,FOLLOW_258_in_serInit19873); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1041_tree = (CommonTree)adaptor.create(char_literal1041);
					adaptor.addChild(root_0, char_literal1041_tree);
					}

					pushFollow(FOLLOW_boolSeq_in_serInit19875);
					boolSeq1042=boolSeq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, boolSeq1042.getTree());

					char_literal1043=(Token)match(input,259,FOLLOW_259_in_serInit19877); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1043_tree = (CommonTree)adaptor.create(char_literal1043);
					adaptor.addChild(root_0, char_literal1043_tree);
					}

					}
					break;
				case 24 :
					// CIL.g:864:27: 'string' '[' int32 ']' '(' sqstringSeq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1044=(Token)match(input,462,FOLLOW_462_in_serInit19906); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1044_tree = (CommonTree)adaptor.create(string_literal1044);
					adaptor.addChild(root_0, string_literal1044_tree);
					}

					char_literal1045=(Token)match(input,323,FOLLOW_323_in_serInit19908); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1045_tree = (CommonTree)adaptor.create(char_literal1045);
					adaptor.addChild(root_0, char_literal1045_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19910);
					int321046=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321046.getTree());

					char_literal1047=(Token)match(input,324,FOLLOW_324_in_serInit19912); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1047_tree = (CommonTree)adaptor.create(char_literal1047);
					adaptor.addChild(root_0, char_literal1047_tree);
					}

					char_literal1048=(Token)match(input,258,FOLLOW_258_in_serInit19914); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1048_tree = (CommonTree)adaptor.create(char_literal1048);
					adaptor.addChild(root_0, char_literal1048_tree);
					}

					pushFollow(FOLLOW_sqstringSeq_in_serInit19916);
					sqstringSeq1049=sqstringSeq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sqstringSeq1049.getTree());

					char_literal1050=(Token)match(input,259,FOLLOW_259_in_serInit19918); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1050_tree = (CommonTree)adaptor.create(char_literal1050);
					adaptor.addChild(root_0, char_literal1050_tree);
					}

					}
					break;
				case 25 :
					// CIL.g:865:27: 'type' '[' int32 ']' '(' classSeq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1051=(Token)match(input,472,FOLLOW_472_in_serInit19947); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1051_tree = (CommonTree)adaptor.create(string_literal1051);
					adaptor.addChild(root_0, string_literal1051_tree);
					}

					char_literal1052=(Token)match(input,323,FOLLOW_323_in_serInit19949); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1052_tree = (CommonTree)adaptor.create(char_literal1052);
					adaptor.addChild(root_0, char_literal1052_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19951);
					int321053=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321053.getTree());

					char_literal1054=(Token)match(input,324,FOLLOW_324_in_serInit19953); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1054_tree = (CommonTree)adaptor.create(char_literal1054);
					adaptor.addChild(root_0, char_literal1054_tree);
					}

					char_literal1055=(Token)match(input,258,FOLLOW_258_in_serInit19955); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1055_tree = (CommonTree)adaptor.create(char_literal1055);
					adaptor.addChild(root_0, char_literal1055_tree);
					}

					pushFollow(FOLLOW_classSeq_in_serInit19957);
					classSeq1056=classSeq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, classSeq1056.getTree());

					char_literal1057=(Token)match(input,259,FOLLOW_259_in_serInit19959); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1057_tree = (CommonTree)adaptor.create(char_literal1057);
					adaptor.addChild(root_0, char_literal1057_tree);
					}

					}
					break;
				case 26 :
					// CIL.g:866:27: 'object' '[' int32 ']' '(' objSeq ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1058=(Token)match(input,423,FOLLOW_423_in_serInit19988); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1058_tree = (CommonTree)adaptor.create(string_literal1058);
					adaptor.addChild(root_0, string_literal1058_tree);
					}

					char_literal1059=(Token)match(input,323,FOLLOW_323_in_serInit19990); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1059_tree = (CommonTree)adaptor.create(char_literal1059);
					adaptor.addChild(root_0, char_literal1059_tree);
					}

					pushFollow(FOLLOW_int32_in_serInit19992);
					int321060=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321060.getTree());

					char_literal1061=(Token)match(input,324,FOLLOW_324_in_serInit19994); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1061_tree = (CommonTree)adaptor.create(char_literal1061);
					adaptor.addChild(root_0, char_literal1061_tree);
					}

					char_literal1062=(Token)match(input,258,FOLLOW_258_in_serInit19996); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1062_tree = (CommonTree)adaptor.create(char_literal1062);
					adaptor.addChild(root_0, char_literal1062_tree);
					}

					pushFollow(FOLLOW_objSeq_in_serInit19998);
					objSeq1063=objSeq();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, objSeq1063.getTree());

					char_literal1064=(Token)match(input,259,FOLLOW_259_in_serInit20000); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1064_tree = (CommonTree)adaptor.create(char_literal1064);
					adaptor.addChild(root_0, char_literal1064_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "serInit"


	public static class f32seq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "f32seq"
	// CIL.g:870:1: f32seq : () ( float64 | int32 )* ;
	public final CILParser.f32seq_return f32seq() throws RecognitionException {
		CILParser.f32seq_return retval = new CILParser.f32seq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope float641065 =null;
		ParserRuleReturnScope int321066 =null;


		try {
			// CIL.g:870:25: ( () ( float64 | int32 )* )
			// CIL.g:870:27: () ( float64 | int32 )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:870:27: ()
			// CIL.g:870:39: 
			{
			}

			// CIL.g:870:41: ( float64 | int32 )*
			loop73:
			while (true) {
				int alt73=3;
				int LA73_0 = input.LA(1);
				if ( (LA73_0==FLOAT64||(LA73_0 >= 369 && LA73_0 <= 370)) ) {
					alt73=1;
				}
				else if ( (LA73_0==INT32) ) {
					alt73=2;
				}

				switch (alt73) {
				case 1 :
					// CIL.g:870:42: float64
					{
					pushFollow(FOLLOW_float64_in_f32seq20057);
					float641065=float64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, float641065.getTree());

					}
					break;
				case 2 :
					// CIL.g:870:52: int32
					{
					pushFollow(FOLLOW_int32_in_f32seq20061);
					int321066=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321066.getTree());

					}
					break;

				default :
					break loop73;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "f32seq"


	public static class f64seq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "f64seq"
	// CIL.g:873:1: f64seq : () ( float64 | int64 )* ;
	public final CILParser.f64seq_return f64seq() throws RecognitionException {
		CILParser.f64seq_return retval = new CILParser.f64seq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope float641067 =null;
		ParserRuleReturnScope int641068 =null;


		try {
			// CIL.g:873:25: ( () ( float64 | int64 )* )
			// CIL.g:873:27: () ( float64 | int64 )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:873:27: ()
			// CIL.g:873:39: 
			{
			}

			// CIL.g:873:41: ( float64 | int64 )*
			loop74:
			while (true) {
				int alt74=3;
				int LA74_0 = input.LA(1);
				if ( (LA74_0==FLOAT64||(LA74_0 >= 369 && LA74_0 <= 370)) ) {
					alt74=1;
				}
				else if ( (LA74_0==INT32) ) {
					alt74=2;
				}

				switch (alt74) {
				case 1 :
					// CIL.g:873:42: float64
					{
					pushFollow(FOLLOW_float64_in_f64seq20182);
					float641067=float64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, float641067.getTree());

					}
					break;
				case 2 :
					// CIL.g:873:52: int64
					{
					pushFollow(FOLLOW_int64_in_f64seq20186);
					int641068=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int641068.getTree());

					}
					break;

				default :
					break loop74;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "f64seq"


	public static class i64seq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "i64seq"
	// CIL.g:876:1: i64seq : () ( int64 )* ;
	public final CILParser.i64seq_return i64seq() throws RecognitionException {
		CILParser.i64seq_return retval = new CILParser.i64seq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope int641069 =null;


		try {
			// CIL.g:876:25: ( () ( int64 )* )
			// CIL.g:876:27: () ( int64 )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:876:27: ()
			// CIL.g:876:39: 
			{
			}

			// CIL.g:876:41: ( int64 )*
			loop75:
			while (true) {
				int alt75=2;
				int LA75_0 = input.LA(1);
				if ( (LA75_0==INT32) ) {
					alt75=1;
				}

				switch (alt75) {
				case 1 :
					// CIL.g:876:42: int64
					{
					pushFollow(FOLLOW_int64_in_i64seq20268);
					int641069=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int641069.getTree());

					}
					break;

				default :
					break loop75;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "i64seq"


	public static class i32seq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "i32seq"
	// CIL.g:879:1: i32seq : () ( int32 )* ;
	public final CILParser.i32seq_return i32seq() throws RecognitionException {
		CILParser.i32seq_return retval = new CILParser.i32seq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope int321070 =null;


		try {
			// CIL.g:879:25: ( () ( int32 )* )
			// CIL.g:879:27: () ( int32 )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:879:27: ()
			// CIL.g:879:39: 
			{
			}

			// CIL.g:879:41: ( int32 )*
			loop76:
			while (true) {
				int alt76=2;
				int LA76_0 = input.LA(1);
				if ( (LA76_0==INT32) ) {
					alt76=1;
				}

				switch (alt76) {
				case 1 :
					// CIL.g:879:42: int32
					{
					pushFollow(FOLLOW_int32_in_i32seq20350);
					int321070=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321070.getTree());

					}
					break;

				default :
					break loop76;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "i32seq"


	public static class i16seq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "i16seq"
	// CIL.g:882:1: i16seq : () ( int32 )* ;
	public final CILParser.i16seq_return i16seq() throws RecognitionException {
		CILParser.i16seq_return retval = new CILParser.i16seq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope int321071 =null;


		try {
			// CIL.g:882:25: ( () ( int32 )* )
			// CIL.g:882:27: () ( int32 )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:882:27: ()
			// CIL.g:882:39: 
			{
			}

			// CIL.g:882:41: ( int32 )*
			loop77:
			while (true) {
				int alt77=2;
				int LA77_0 = input.LA(1);
				if ( (LA77_0==INT32) ) {
					alt77=1;
				}

				switch (alt77) {
				case 1 :
					// CIL.g:882:42: int32
					{
					pushFollow(FOLLOW_int32_in_i16seq20432);
					int321071=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321071.getTree());

					}
					break;

				default :
					break loop77;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "i16seq"


	public static class i8seq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "i8seq"
	// CIL.g:885:1: i8seq : () ( int32 )* ;
	public final CILParser.i8seq_return i8seq() throws RecognitionException {
		CILParser.i8seq_return retval = new CILParser.i8seq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope int321072 =null;


		try {
			// CIL.g:885:25: ( () ( int32 )* )
			// CIL.g:885:27: () ( int32 )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:885:27: ()
			// CIL.g:885:39: 
			{
			}

			// CIL.g:885:41: ( int32 )*
			loop78:
			while (true) {
				int alt78=2;
				int LA78_0 = input.LA(1);
				if ( (LA78_0==INT32) ) {
					alt78=1;
				}

				switch (alt78) {
				case 1 :
					// CIL.g:885:42: int32
					{
					pushFollow(FOLLOW_int32_in_i8seq20515);
					int321072=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321072.getTree());

					}
					break;

				default :
					break loop78;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "i8seq"


	public static class boolSeq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "boolSeq"
	// CIL.g:888:1: boolSeq : () ( truefalse )* ;
	public final CILParser.boolSeq_return boolSeq() throws RecognitionException {
		CILParser.boolSeq_return retval = new CILParser.boolSeq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope truefalse1073 =null;


		try {
			// CIL.g:888:25: ( () ( truefalse )* )
			// CIL.g:888:27: () ( truefalse )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:888:27: ()
			// CIL.g:888:39: 
			{
			}

			// CIL.g:888:41: ( truefalse )*
			loop79:
			while (true) {
				int alt79=2;
				int LA79_0 = input.LA(1);
				if ( (LA79_0==355||LA79_0==471) ) {
					alt79=1;
				}

				switch (alt79) {
				case 1 :
					// CIL.g:888:42: truefalse
					{
					pushFollow(FOLLOW_truefalse_in_boolSeq20596);
					truefalse1073=truefalse();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, truefalse1073.getTree());

					}
					break;

				default :
					break loop79;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "boolSeq"


	public static class sqstringSeq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sqstringSeq"
	// CIL.g:891:1: sqstringSeq : () ( 'nullref' | SQSTRING )* ;
	public final CILParser.sqstringSeq_return sqstringSeq() throws RecognitionException {
		CILParser.sqstringSeq_return retval = new CILParser.sqstringSeq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1074=null;

		CommonTree set1074_tree=null;

		try {
			// CIL.g:891:25: ( () ( 'nullref' | SQSTRING )* )
			// CIL.g:891:27: () ( 'nullref' | SQSTRING )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:891:27: ()
			// CIL.g:891:39: 
			{
			}

			// CIL.g:891:41: ( 'nullref' | SQSTRING )*
			loop80:
			while (true) {
				int alt80=2;
				int LA80_0 = input.LA(1);
				if ( (LA80_0==SQSTRING||LA80_0==422) ) {
					alt80=1;
				}

				switch (alt80) {
				case 1 :
					// CIL.g:
					{
					set1074=input.LT(1);
					if ( input.LA(1)==SQSTRING||input.LA(1)==422 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1074));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

				default :
					break loop80;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sqstringSeq"


	public static class classSeq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "classSeq"
	// CIL.g:894:1: classSeq : () ( 'nullref' | 'class' SQSTRING | className )* ;
	public final CILParser.classSeq_return classSeq() throws RecognitionException {
		CILParser.classSeq_return retval = new CILParser.classSeq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1075=null;
		Token string_literal1076=null;
		Token SQSTRING1077=null;
		ParserRuleReturnScope className1078 =null;

		CommonTree string_literal1075_tree=null;
		CommonTree string_literal1076_tree=null;
		CommonTree SQSTRING1077_tree=null;

		try {
			// CIL.g:894:25: ( () ( 'nullref' | 'class' SQSTRING | className )* )
			// CIL.g:894:27: () ( 'nullref' | 'class' SQSTRING | className )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:894:27: ()
			// CIL.g:894:39: 
			{
			}

			// CIL.g:894:41: ( 'nullref' | 'class' SQSTRING | className )*
			loop81:
			while (true) {
				int alt81=4;
				switch ( input.LA(1) ) {
				case 422:
					{
					alt81=1;
					}
					break;
				case CLASS:
					{
					alt81=2;
					}
					break;
				case DOTTEDNAME:
				case ID:
				case SQSTRING:
				case 267:
				case 294:
				case 308:
				case 310:
				case 323:
				case 406:
					{
					alt81=3;
					}
					break;
				}
				switch (alt81) {
				case 1 :
					// CIL.g:894:42: 'nullref'
					{
					string_literal1075=(Token)match(input,422,FOLLOW_422_in_classSeq20757); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1075_tree = (CommonTree)adaptor.create(string_literal1075);
					adaptor.addChild(root_0, string_literal1075_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:894:54: 'class' SQSTRING
					{
					string_literal1076=(Token)match(input,CLASS,FOLLOW_CLASS_in_classSeq20761); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1076_tree = (CommonTree)adaptor.create(string_literal1076);
					adaptor.addChild(root_0, string_literal1076_tree);
					}

					SQSTRING1077=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_classSeq20763); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING1077_tree = (CommonTree)adaptor.create(SQSTRING1077);
					adaptor.addChild(root_0, SQSTRING1077_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:894:73: className
					{
					pushFollow(FOLLOW_className_in_classSeq20767);
					className1078=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1078.getTree());

					}
					break;

				default :
					break loop81;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "classSeq"


	public static class objSeq_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "objSeq"
	// CIL.g:897:1: objSeq : () ( serInit )* ;
	public final CILParser.objSeq_return objSeq() throws RecognitionException {
		CILParser.objSeq_return retval = new CILParser.objSeq_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope serInit1079 =null;


		try {
			// CIL.g:897:25: ( () ( serInit )* )
			// CIL.g:897:27: () ( serInit )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:897:27: ()
			// CIL.g:897:39: 
			{
			}

			// CIL.g:897:41: ( serInit )*
			loop82:
			while (true) {
				int alt82=2;
				int LA82_0 = input.LA(1);
				if ( (LA82_0==BYTEARRAY||LA82_0==CHAR||LA82_0==340||(LA82_0 >= 369 && LA82_0 <= 370)||(LA82_0 >= 388 && LA82_0 <= 391)||LA82_0==423||LA82_0==462||LA82_0==472||(LA82_0 >= 475 && LA82_0 <= 478)||LA82_0==482) ) {
					alt82=1;
				}

				switch (alt82) {
				case 1 :
					// CIL.g:897:42: serInit
					{
					pushFollow(FOLLOW_serInit_in_objSeq20849);
					serInit1079=serInit();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, serInit1079.getTree());

					}
					break;

				default :
					break loop82;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "objSeq"


	public static class methodSpec_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "methodSpec"
	// CIL.g:901:1: methodSpec : 'method' ;
	public final CILParser.methodSpec_return methodSpec() throws RecognitionException {
		CILParser.methodSpec_return retval = new CILParser.methodSpec_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1080=null;

		CommonTree string_literal1080_tree=null;

		try {
			// CIL.g:901:25: ( 'method' )
			// CIL.g:901:27: 'method'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1080=(Token)match(input,407,FOLLOW_407_in_methodSpec20905); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1080_tree = (CommonTree)adaptor.create(string_literal1080);
			adaptor.addChild(root_0, string_literal1080_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "methodSpec"


	public static class instr_none_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_none"
	// CIL.g:904:1: instr_none : ( ADD | ADD_OVF | ADD_OVF_UN | AND | ARGLIST | BREAK | CEQ | CGT | CGT_UN | CKFINITE | CLT | CLT_UN | CONV_I | CONV_I1 | CONV_I2 | CONV_I4 | CONV_I8 | CONV_OVF_I | CONV_OVF_I_UN | CONV_OVF_I1 | CONV_OVF_I1_UN | CONV_OVF_I2 | CONV_OVF_I2_UN | CONV_OVF_I4 | CONV_OVF_I4_UN | CONV_OVF_I8 | CONV_OVF_I8_UN | CONV_OVF_U | CONV_OVF_U_UN | CONV_OVF_U1 | CONV_OVF_U1_UN | CONV_OVF_U2 | CONV_OVF_U2_UN | CONV_OVF_U4 | CONV_OVF_U4_UN | CONV_OVF_U8 | CONV_OVF_U8_UN | CONV_R_UN | CONV_R4 | CONV_R8 | CONV_U | CONV_U1 | CONV_U2 | CONV_U4 | CONV_U8 | CPBLK | DIV | DIV_UN | DUP | ENDFAULT | ENDFILTER | ENDFINALLY | INITBLK | LDARG_0 | LDARG_1 | LDARG_2 | LDARG_3 | LDC_I4_0 | LDC_I4_1 | LDC_I4_2 | LDC_I4_3 | LDC_I4_4 | LDC_I4_5 | LDC_I4_6 | LDC_I4_7 | LDC_I4_8 | LDC_I4_M1 | LDELEM_I | LDELEM_I1 | LDELEM_I2 | LDELEM_I4 | LDELEM_I8 | LDELEM_R4 | LDELEM_R8 | LDELEM_REF | LDELEM_U1 | LDELEM_U2 | LDELEM_U4 | LDIND_I | LDIND_I1 | LDIND_I2 | LDIND_I4 | LDIND_I8 | LDIND_R4 | LDIND_R8 | LDIND_REF | LDIND_U1 | LDIND_U2 | LDIND_U4 | LDLEN | LDLOC_0 | LDLOC_1 | LDLOC_2 | LDLOC_3 | LDNULL | LOCALLOC | MUL | MUL_OVF | MUL_OVF_UN | NEG | NOP | NOT | OR | POP | REFANYTYPE | REM | REM_UN | RET | RETHROW | SHL | SHR | SHR_UN | STELEM_I | STELEM_I1 | STELEM_I2 | STELEM_I4 | STELEM_I8 | STELEM_R4 | STELEM_R8 | STELEM_REF | STIND_I | STIND_I1 | STIND_I2 | STIND_I4 | STIND_I8 | STIND_R4 | STIND_R8 | STIND_REF | STLOC_0 | STLOC_1 | STLOC_2 | STLOC_3 | SUB | SUB_OVF | SUB_OVF_UN | TAIL_ | THROW | VOLATILE_ | XOR );
	public final CILParser.instr_none_return instr_none() throws RecognitionException {
		CILParser.instr_none_return retval = new CILParser.instr_none_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1081=null;

		CommonTree set1081_tree=null;

		try {
			// CIL.g:904:25: ( ADD | ADD_OVF | ADD_OVF_UN | AND | ARGLIST | BREAK | CEQ | CGT | CGT_UN | CKFINITE | CLT | CLT_UN | CONV_I | CONV_I1 | CONV_I2 | CONV_I4 | CONV_I8 | CONV_OVF_I | CONV_OVF_I_UN | CONV_OVF_I1 | CONV_OVF_I1_UN | CONV_OVF_I2 | CONV_OVF_I2_UN | CONV_OVF_I4 | CONV_OVF_I4_UN | CONV_OVF_I8 | CONV_OVF_I8_UN | CONV_OVF_U | CONV_OVF_U_UN | CONV_OVF_U1 | CONV_OVF_U1_UN | CONV_OVF_U2 | CONV_OVF_U2_UN | CONV_OVF_U4 | CONV_OVF_U4_UN | CONV_OVF_U8 | CONV_OVF_U8_UN | CONV_R_UN | CONV_R4 | CONV_R8 | CONV_U | CONV_U1 | CONV_U2 | CONV_U4 | CONV_U8 | CPBLK | DIV | DIV_UN | DUP | ENDFAULT | ENDFILTER | ENDFINALLY | INITBLK | LDARG_0 | LDARG_1 | LDARG_2 | LDARG_3 | LDC_I4_0 | LDC_I4_1 | LDC_I4_2 | LDC_I4_3 | LDC_I4_4 | LDC_I4_5 | LDC_I4_6 | LDC_I4_7 | LDC_I4_8 | LDC_I4_M1 | LDELEM_I | LDELEM_I1 | LDELEM_I2 | LDELEM_I4 | LDELEM_I8 | LDELEM_R4 | LDELEM_R8 | LDELEM_REF | LDELEM_U1 | LDELEM_U2 | LDELEM_U4 | LDIND_I | LDIND_I1 | LDIND_I2 | LDIND_I4 | LDIND_I8 | LDIND_R4 | LDIND_R8 | LDIND_REF | LDIND_U1 | LDIND_U2 | LDIND_U4 | LDLEN | LDLOC_0 | LDLOC_1 | LDLOC_2 | LDLOC_3 | LDNULL | LOCALLOC | MUL | MUL_OVF | MUL_OVF_UN | NEG | NOP | NOT | OR | POP | REFANYTYPE | REM | REM_UN | RET | RETHROW | SHL | SHR | SHR_UN | STELEM_I | STELEM_I1 | STELEM_I2 | STELEM_I4 | STELEM_I8 | STELEM_R4 | STELEM_R8 | STELEM_REF | STIND_I | STIND_I1 | STIND_I2 | STIND_I4 | STIND_I8 | STIND_R4 | STIND_R8 | STIND_REF | STLOC_0 | STLOC_1 | STLOC_2 | STLOC_3 | SUB | SUB_OVF | SUB_OVF_UN | TAIL_ | THROW | VOLATILE_ | XOR )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1081=input.LT(1);
			if ( (input.LA(1) >= ADD && input.LA(1) <= ARGLIST)||input.LA(1)==BREAK||input.LA(1)==CEQ||(input.LA(1) >= CGT && input.LA(1) <= CGT_UN)||input.LA(1)==CKFINITE||(input.LA(1) >= CLT && input.LA(1) <= CLT_UN)||(input.LA(1) >= CONV_I && input.LA(1) <= CPBLK)||(input.LA(1) >= DIV && input.LA(1) <= DIV_UN)||(input.LA(1) >= DUP && input.LA(1) <= ENDFINALLY)||input.LA(1)==INITBLK||(input.LA(1) >= LDARG_0 && input.LA(1) <= LDARG_3)||(input.LA(1) >= LDC_I4_0 && input.LA(1) <= LDC_I4_M1)||(input.LA(1) >= LDELEM_I && input.LA(1) <= LDELEM_U4)||(input.LA(1) >= LDIND_I && input.LA(1) <= LDIND_U4)||input.LA(1)==LDLEN||(input.LA(1) >= LDLOC_0 && input.LA(1) <= LDLOC_3)||input.LA(1)==LDNULL||input.LA(1)==LOCALLOC||(input.LA(1) >= MUL && input.LA(1) <= NEG)||(input.LA(1) >= NOP && input.LA(1) <= POP)||input.LA(1)==REFANYTYPE||(input.LA(1) >= REM && input.LA(1) <= REM_UN)||(input.LA(1) >= RET && input.LA(1) <= SHR_UN)||(input.LA(1) >= STELEM_I && input.LA(1) <= STELEM_REF)||(input.LA(1) >= STIND_I && input.LA(1) <= STIND_REF)||(input.LA(1) >= STLOC_0 && input.LA(1) <= STLOC_3)||(input.LA(1) >= SUB && input.LA(1) <= SUB_OVF_UN)||(input.LA(1) >= TAIL_ && input.LA(1) <= THROW)||input.LA(1)==VOLATILE_||input.LA(1)==XOR ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1081));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_none"


	public static class instr_var_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_var"
	// CIL.g:941:1: instr_var : ( LDARG | LDARG_S | LDARGA | LDARGA_S | LDLOC | LDLOC_S | LDLOCA | LDLOCA_S | STARG | STARG_S | STLOC | STLOC_S );
	public final CILParser.instr_var_return instr_var() throws RecognitionException {
		CILParser.instr_var_return retval = new CILParser.instr_var_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1082=null;

		CommonTree set1082_tree=null;

		try {
			// CIL.g:941:25: ( LDARG | LDARG_S | LDARGA | LDARGA_S | LDLOC | LDLOC_S | LDLOCA | LDLOCA_S | STARG | STARG_S | STLOC | STLOC_S )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1082=input.LT(1);
			if ( (input.LA(1) >= LDARG && input.LA(1) <= LDARGA_S)||input.LA(1)==LDARG_S||(input.LA(1) >= LDLOC && input.LA(1) <= LDLOCA_S)||input.LA(1)==LDLOC_S||(input.LA(1) >= STARG && input.LA(1) <= STARG_S)||input.LA(1)==STLOC||input.LA(1)==STLOC_S ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1082));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_var"


	public static class instr_i_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_i"
	// CIL.g:955:1: instr_i : ( LDC_I4 | LDC_I4_S | UNALIGNED_ );
	public final CILParser.instr_i_return instr_i() throws RecognitionException {
		CILParser.instr_i_return retval = new CILParser.instr_i_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1083=null;

		CommonTree set1083_tree=null;

		try {
			// CIL.g:955:25: ( LDC_I4 | LDC_I4_S | UNALIGNED_ )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1083=input.LT(1);
			if ( input.LA(1)==LDC_I4||input.LA(1)==LDC_I4_S||input.LA(1)==UNALIGNED_ ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1083));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_i"


	public static class instr_i8_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_i8"
	// CIL.g:960:1: instr_i8 : LDC_I8 ;
	public final CILParser.instr_i8_return instr_i8() throws RecognitionException {
		CILParser.instr_i8_return retval = new CILParser.instr_i8_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token LDC_I81084=null;

		CommonTree LDC_I81084_tree=null;

		try {
			// CIL.g:960:25: ( LDC_I8 )
			// CIL.g:960:27: LDC_I8
			{
			root_0 = (CommonTree)adaptor.nil();


			LDC_I81084=(Token)match(input,LDC_I8,FOLLOW_LDC_I8_in_instr_i821821); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LDC_I81084_tree = (CommonTree)adaptor.create(LDC_I81084);
			adaptor.addChild(root_0, LDC_I81084_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_i8"


	public static class instr_r_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_r"
	// CIL.g:963:1: instr_r : ( LDC_R4 | LDC_R8 );
	public final CILParser.instr_r_return instr_r() throws RecognitionException {
		CILParser.instr_r_return retval = new CILParser.instr_r_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1085=null;

		CommonTree set1085_tree=null;

		try {
			// CIL.g:963:25: ( LDC_R4 | LDC_R8 )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1085=input.LT(1);
			if ( (input.LA(1) >= LDC_R4 && input.LA(1) <= LDC_R8) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1085));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_r"


	public static class instr_brtarget_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_brtarget"
	// CIL.g:966:1: instr_brtarget : ( BEQ | BEQ_S | BGE | BGE_S | BGE_UN | BGE_UN_S | BGT | BGT_S | BGT_UN | BGT_UN_S | BLE | BLE_S | BLE_UN | BLE_UN_S | BLT | BLT_S | BLT_UN | BLT_UN_S | BNE_UN | BNE_UN_S | BR | BR_S | BRFALSE | BRFALSE_S | BRTRUE | BRTRUE_S | LEAVE | LEAVE_S );
	public final CILParser.instr_brtarget_return instr_brtarget() throws RecognitionException {
		CILParser.instr_brtarget_return retval = new CILParser.instr_brtarget_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1086=null;

		CommonTree set1086_tree=null;

		try {
			// CIL.g:966:25: ( BEQ | BEQ_S | BGE | BGE_S | BGE_UN | BGE_UN_S | BGT | BGT_S | BGT_UN | BGT_UN_S | BLE | BLE_S | BLE_UN | BLE_UN_S | BLT | BLT_S | BLT_UN | BLT_UN_S | BNE_UN | BNE_UN_S | BR | BR_S | BRFALSE | BRFALSE_S | BRTRUE | BRTRUE_S | LEAVE | LEAVE_S )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1086=input.LT(1);
			if ( (input.LA(1) >= BEQ && input.LA(1) <= BLE_UN_S)||(input.LA(1) >= BLT && input.LA(1) <= BNE_UN_S)||input.LA(1)==BR||(input.LA(1) >= BRFALSE && input.LA(1) <= BRFALSE_S)||(input.LA(1) >= BRTRUE && input.LA(1) <= BRTRUE_S)||input.LA(1)==BR_S||(input.LA(1) >= LEAVE && input.LA(1) <= LEAVE_S) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1086));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_brtarget"


	public static class instr_method_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_method"
	// CIL.g:973:1: instr_method : ( CALL | CALLVIRT | JMP | LDFTN | LDVIRTFTN | NEWOBJ );
	public final CILParser.instr_method_return instr_method() throws RecognitionException {
		CILParser.instr_method_return retval = new CILParser.instr_method_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1087=null;

		CommonTree set1087_tree=null;

		try {
			// CIL.g:973:25: ( CALL | CALLVIRT | JMP | LDFTN | LDVIRTFTN | NEWOBJ )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1087=input.LT(1);
			if ( input.LA(1)==CALL||input.LA(1)==CALLVIRT||input.LA(1)==JMP||input.LA(1)==LDFTN||input.LA(1)==LDVIRTFTN||input.LA(1)==NEWOBJ ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1087));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_method"


	public static class instr_field_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_field"
	// CIL.g:976:1: instr_field : ( LDFLD | LDFLDA | LDSFLD | LDSFLDA | STFLD | STSFLD );
	public final CILParser.instr_field_return instr_field() throws RecognitionException {
		CILParser.instr_field_return retval = new CILParser.instr_field_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1088=null;

		CommonTree set1088_tree=null;

		try {
			// CIL.g:976:25: ( LDFLD | LDFLDA | LDSFLD | LDSFLDA | STFLD | STSFLD )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1088=input.LT(1);
			if ( (input.LA(1) >= LDFLD && input.LA(1) <= LDFLDA)||(input.LA(1) >= LDSFLD && input.LA(1) <= LDSFLDA)||input.LA(1)==STFLD||input.LA(1)==STSFLD ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1088));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_field"


	public static class instr_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_type"
	// CIL.g:979:1: instr_type : ( BOX | CASTCLASS | CPOBJ | INITOBJ | ISINST | LDELEMA | LDOBJ | MKREFANY | NEWARR | REFANYVAL | SIZEOF | STOBJ | UNBOX );
	public final CILParser.instr_type_return instr_type() throws RecognitionException {
		CILParser.instr_type_return retval = new CILParser.instr_type_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1089=null;

		CommonTree set1089_tree=null;

		try {
			// CIL.g:979:25: ( BOX | CASTCLASS | CPOBJ | INITOBJ | ISINST | LDELEMA | LDOBJ | MKREFANY | NEWARR | REFANYVAL | SIZEOF | STOBJ | UNBOX )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1089=input.LT(1);
			if ( input.LA(1)==BOX||input.LA(1)==CASTCLASS||input.LA(1)==CPOBJ||input.LA(1)==INITOBJ||input.LA(1)==ISINST||input.LA(1)==LDELEMA||input.LA(1)==LDOBJ||input.LA(1)==MKREFANY||input.LA(1)==NEWARR||input.LA(1)==REFANYVAL||input.LA(1)==SIZEOF||input.LA(1)==STOBJ||input.LA(1)==UNBOX ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1089));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_type"


	public static class instr_string_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_string"
	// CIL.g:984:1: instr_string : LDSTR ;
	public final CILParser.instr_string_return instr_string() throws RecognitionException {
		CILParser.instr_string_return retval = new CILParser.instr_string_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token LDSTR1090=null;

		CommonTree LDSTR1090_tree=null;

		try {
			// CIL.g:984:25: ( LDSTR )
			// CIL.g:984:27: LDSTR
			{
			root_0 = (CommonTree)adaptor.nil();


			LDSTR1090=(Token)match(input,LDSTR,FOLLOW_LDSTR_in_instr_string22309); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LDSTR1090_tree = (CommonTree)adaptor.create(LDSTR1090);
			adaptor.addChild(root_0, LDSTR1090_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_string"


	public static class instr_sig_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_sig"
	// CIL.g:987:1: instr_sig : CALLI ;
	public final CILParser.instr_sig_return instr_sig() throws RecognitionException {
		CILParser.instr_sig_return retval = new CILParser.instr_sig_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token CALLI1091=null;

		CommonTree CALLI1091_tree=null;

		try {
			// CIL.g:987:25: ( CALLI )
			// CIL.g:987:27: CALLI
			{
			root_0 = (CommonTree)adaptor.nil();


			CALLI1091=(Token)match(input,CALLI,FOLLOW_CALLI_in_instr_sig22357); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CALLI1091_tree = (CommonTree)adaptor.create(CALLI1091);
			adaptor.addChild(root_0, CALLI1091_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_sig"


	public static class instr_tok_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_tok"
	// CIL.g:990:1: instr_tok : LDTOKEN ;
	public final CILParser.instr_tok_return instr_tok() throws RecognitionException {
		CILParser.instr_tok_return retval = new CILParser.instr_tok_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token LDTOKEN1092=null;

		CommonTree LDTOKEN1092_tree=null;

		try {
			// CIL.g:990:25: ( LDTOKEN )
			// CIL.g:990:27: LDTOKEN
			{
			root_0 = (CommonTree)adaptor.nil();


			LDTOKEN1092=(Token)match(input,LDTOKEN,FOLLOW_LDTOKEN_in_instr_tok22405); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LDTOKEN1092_tree = (CommonTree)adaptor.create(LDTOKEN1092);
			adaptor.addChild(root_0, LDTOKEN1092_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_tok"


	public static class instr_switch_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_switch"
	// CIL.g:993:1: instr_switch : SWITCH ;
	public final CILParser.instr_switch_return instr_switch() throws RecognitionException {
		CILParser.instr_switch_return retval = new CILParser.instr_switch_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token SWITCH1093=null;

		CommonTree SWITCH1093_tree=null;

		try {
			// CIL.g:993:25: ( SWITCH )
			// CIL.g:993:27: SWITCH
			{
			root_0 = (CommonTree)adaptor.nil();


			SWITCH1093=(Token)match(input,SWITCH,FOLLOW_SWITCH_in_instr_switch22450); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			SWITCH1093_tree = (CommonTree)adaptor.create(SWITCH1093);
			adaptor.addChild(root_0, SWITCH1093_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_switch"


	public static class instr_r_head_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr_r_head"
	// CIL.g:996:1: instr_r_head : instr_r '(' ;
	public final CILParser.instr_r_head_return instr_r_head() throws RecognitionException {
		CILParser.instr_r_head_return retval = new CILParser.instr_r_head_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1095=null;
		ParserRuleReturnScope instr_r1094 =null;

		CommonTree char_literal1095_tree=null;

		try {
			// CIL.g:996:25: ( instr_r '(' )
			// CIL.g:996:27: instr_r '('
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_instr_r_in_instr_r_head22495);
			instr_r1094=instr_r();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_r1094.getTree());

			char_literal1095=(Token)match(input,258,FOLLOW_258_in_instr_r_head22497); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1095_tree = (CommonTree)adaptor.create(char_literal1095);
			adaptor.addChild(root_0, char_literal1095_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr_r_head"


	public static class instr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "instr"
	// CIL.g:1000:1: instr : ( instr_none | instr_var int32 | instr_var id | instr_i int32 | instr_i8 int64 | instr_r float64 | instr_r int64 | instr_r_head bytes ')' | instr_brtarget int32 | instr_brtarget id | instr_method methodRef | instr_field type typeSpec '::' dottedName | instr_field type dottedName | instr_field mdtoken | instr_field typedef_f | instr_field typedef_mr | instr_type typeSpec | instr_string compQstring | instr_string 'ansi' '(' compQstring ')' | instr_string bytearrayhead bytes ')' | instr_sig callConv type '(' sigArgs0 ')' | instr_tok ownerType | instr_switch '(' labels ')' );
	public final CILParser.instr_return instr() throws RecognitionException {
		CILParser.instr_return retval = new CILParser.instr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1111=null;
		Token string_literal1121=null;
		Token string_literal1137=null;
		Token char_literal1138=null;
		Token char_literal1140=null;
		Token char_literal1144=null;
		Token char_literal1148=null;
		Token char_literal1150=null;
		Token char_literal1154=null;
		Token char_literal1156=null;
		ParserRuleReturnScope instr_none1096 =null;
		ParserRuleReturnScope instr_var1097 =null;
		ParserRuleReturnScope int321098 =null;
		ParserRuleReturnScope instr_var1099 =null;
		ParserRuleReturnScope id1100 =null;
		ParserRuleReturnScope instr_i1101 =null;
		ParserRuleReturnScope int321102 =null;
		ParserRuleReturnScope instr_i81103 =null;
		ParserRuleReturnScope int641104 =null;
		ParserRuleReturnScope instr_r1105 =null;
		ParserRuleReturnScope float641106 =null;
		ParserRuleReturnScope instr_r1107 =null;
		ParserRuleReturnScope int641108 =null;
		ParserRuleReturnScope instr_r_head1109 =null;
		ParserRuleReturnScope bytes1110 =null;
		ParserRuleReturnScope instr_brtarget1112 =null;
		ParserRuleReturnScope int321113 =null;
		ParserRuleReturnScope instr_brtarget1114 =null;
		ParserRuleReturnScope id1115 =null;
		ParserRuleReturnScope instr_method1116 =null;
		ParserRuleReturnScope methodRef1117 =null;
		ParserRuleReturnScope instr_field1118 =null;
		ParserRuleReturnScope type1119 =null;
		ParserRuleReturnScope typeSpec1120 =null;
		ParserRuleReturnScope dottedName1122 =null;
		ParserRuleReturnScope instr_field1123 =null;
		ParserRuleReturnScope type1124 =null;
		ParserRuleReturnScope dottedName1125 =null;
		ParserRuleReturnScope instr_field1126 =null;
		ParserRuleReturnScope mdtoken1127 =null;
		ParserRuleReturnScope instr_field1128 =null;
		ParserRuleReturnScope typedef_f1129 =null;
		ParserRuleReturnScope instr_field1130 =null;
		ParserRuleReturnScope typedef_mr1131 =null;
		ParserRuleReturnScope instr_type1132 =null;
		ParserRuleReturnScope typeSpec1133 =null;
		ParserRuleReturnScope instr_string1134 =null;
		ParserRuleReturnScope compQstring1135 =null;
		ParserRuleReturnScope instr_string1136 =null;
		ParserRuleReturnScope compQstring1139 =null;
		ParserRuleReturnScope instr_string1141 =null;
		ParserRuleReturnScope bytearrayhead1142 =null;
		ParserRuleReturnScope bytes1143 =null;
		ParserRuleReturnScope instr_sig1145 =null;
		ParserRuleReturnScope callConv1146 =null;
		ParserRuleReturnScope type1147 =null;
		ParserRuleReturnScope sigArgs01149 =null;
		ParserRuleReturnScope instr_tok1151 =null;
		ParserRuleReturnScope ownerType1152 =null;
		ParserRuleReturnScope instr_switch1153 =null;
		ParserRuleReturnScope labels1155 =null;

		CommonTree char_literal1111_tree=null;
		CommonTree string_literal1121_tree=null;
		CommonTree string_literal1137_tree=null;
		CommonTree char_literal1138_tree=null;
		CommonTree char_literal1140_tree=null;
		CommonTree char_literal1144_tree=null;
		CommonTree char_literal1148_tree=null;
		CommonTree char_literal1150_tree=null;
		CommonTree char_literal1154_tree=null;
		CommonTree char_literal1156_tree=null;

		try {
			// CIL.g:1000:25: ( instr_none | instr_var int32 | instr_var id | instr_i int32 | instr_i8 int64 | instr_r float64 | instr_r int64 | instr_r_head bytes ')' | instr_brtarget int32 | instr_brtarget id | instr_method methodRef | instr_field type typeSpec '::' dottedName | instr_field type dottedName | instr_field mdtoken | instr_field typedef_f | instr_field typedef_mr | instr_type typeSpec | instr_string compQstring | instr_string 'ansi' '(' compQstring ')' | instr_string bytearrayhead bytes ')' | instr_sig callConv type '(' sigArgs0 ')' | instr_tok ownerType | instr_switch '(' labels ')' )
			int alt83=23;
			switch ( input.LA(1) ) {
			case ADD:
			case ADD_OVF:
			case ADD_OVF_UN:
			case AND:
			case ARGLIST:
			case BREAK:
			case CEQ:
			case CGT:
			case CGT_UN:
			case CKFINITE:
			case CLT:
			case CLT_UN:
			case CONV_I:
			case CONV_I1:
			case CONV_I2:
			case CONV_I4:
			case CONV_I8:
			case CONV_OVF_I:
			case CONV_OVF_I1:
			case CONV_OVF_I1_UN:
			case CONV_OVF_I2:
			case CONV_OVF_I2_UN:
			case CONV_OVF_I4:
			case CONV_OVF_I4_UN:
			case CONV_OVF_I8:
			case CONV_OVF_I8_UN:
			case CONV_OVF_I_UN:
			case CONV_OVF_U:
			case CONV_OVF_U1:
			case CONV_OVF_U1_UN:
			case CONV_OVF_U2:
			case CONV_OVF_U2_UN:
			case CONV_OVF_U4:
			case CONV_OVF_U4_UN:
			case CONV_OVF_U8:
			case CONV_OVF_U8_UN:
			case CONV_OVF_U_UN:
			case CONV_R4:
			case CONV_R8:
			case CONV_R_UN:
			case CONV_U:
			case CONV_U1:
			case CONV_U2:
			case CONV_U4:
			case CONV_U8:
			case CPBLK:
			case DIV:
			case DIV_UN:
			case DUP:
			case ENDFAULT:
			case ENDFILTER:
			case ENDFINALLY:
			case INITBLK:
			case LDARG_0:
			case LDARG_1:
			case LDARG_2:
			case LDARG_3:
			case LDC_I4_0:
			case LDC_I4_1:
			case LDC_I4_2:
			case LDC_I4_3:
			case LDC_I4_4:
			case LDC_I4_5:
			case LDC_I4_6:
			case LDC_I4_7:
			case LDC_I4_8:
			case LDC_I4_M1:
			case LDELEM_I:
			case LDELEM_I1:
			case LDELEM_I2:
			case LDELEM_I4:
			case LDELEM_I8:
			case LDELEM_R4:
			case LDELEM_R8:
			case LDELEM_REF:
			case LDELEM_U1:
			case LDELEM_U2:
			case LDELEM_U4:
			case LDIND_I:
			case LDIND_I1:
			case LDIND_I2:
			case LDIND_I4:
			case LDIND_I8:
			case LDIND_R4:
			case LDIND_R8:
			case LDIND_REF:
			case LDIND_U1:
			case LDIND_U2:
			case LDIND_U4:
			case LDLEN:
			case LDLOC_0:
			case LDLOC_1:
			case LDLOC_2:
			case LDLOC_3:
			case LDNULL:
			case LOCALLOC:
			case MUL:
			case MUL_OVF:
			case MUL_OVF_UN:
			case NEG:
			case NOP:
			case NOT:
			case OR:
			case POP:
			case REFANYTYPE:
			case REM:
			case REM_UN:
			case RET:
			case RETHROW:
			case SHL:
			case SHR:
			case SHR_UN:
			case STELEM_I:
			case STELEM_I1:
			case STELEM_I2:
			case STELEM_I4:
			case STELEM_I8:
			case STELEM_R4:
			case STELEM_R8:
			case STELEM_REF:
			case STIND_I:
			case STIND_I1:
			case STIND_I2:
			case STIND_I4:
			case STIND_I8:
			case STIND_R4:
			case STIND_R8:
			case STIND_REF:
			case STLOC_0:
			case STLOC_1:
			case STLOC_2:
			case STLOC_3:
			case SUB:
			case SUB_OVF:
			case SUB_OVF_UN:
			case TAIL_:
			case THROW:
			case VOLATILE_:
			case XOR:
				{
				alt83=1;
				}
				break;
			case LDARG:
			case LDARGA:
			case LDARGA_S:
			case LDARG_S:
			case LDLOC:
			case LDLOCA:
			case LDLOCA_S:
			case LDLOC_S:
			case STARG:
			case STARG_S:
			case STLOC:
			case STLOC_S:
				{
				int LA83_2 = input.LA(2);
				if ( (synpred549_CIL()) ) {
					alt83=2;
				}
				else if ( (synpred550_CIL()) ) {
					alt83=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 83, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LDC_I4:
			case LDC_I4_S:
			case UNALIGNED_:
				{
				alt83=4;
				}
				break;
			case LDC_I8:
				{
				alt83=5;
				}
				break;
			case LDC_R4:
			case LDC_R8:
				{
				int LA83_5 = input.LA(2);
				if ( (synpred553_CIL()) ) {
					alt83=6;
				}
				else if ( (synpred554_CIL()) ) {
					alt83=7;
				}
				else if ( (synpred555_CIL()) ) {
					alt83=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 83, 5, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BEQ:
			case BEQ_S:
			case BGE:
			case BGE_S:
			case BGE_UN:
			case BGE_UN_S:
			case BGT:
			case BGT_S:
			case BGT_UN:
			case BGT_UN_S:
			case BLE:
			case BLE_S:
			case BLE_UN:
			case BLE_UN_S:
			case BLT:
			case BLT_S:
			case BLT_UN:
			case BLT_UN_S:
			case BNE_UN:
			case BNE_UN_S:
			case BR:
			case BRFALSE:
			case BRFALSE_S:
			case BRTRUE:
			case BRTRUE_S:
			case BR_S:
			case LEAVE:
			case LEAVE_S:
				{
				int LA83_6 = input.LA(2);
				if ( (synpred556_CIL()) ) {
					alt83=9;
				}
				else if ( (synpred557_CIL()) ) {
					alt83=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 83, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CALL:
			case CALLVIRT:
			case JMP:
			case LDFTN:
			case LDVIRTFTN:
			case NEWOBJ:
				{
				alt83=11;
				}
				break;
			case LDFLD:
			case LDFLDA:
			case LDSFLD:
			case LDSFLDA:
			case STFLD:
			case STSFLD:
				{
				int LA83_8 = input.LA(2);
				if ( (synpred559_CIL()) ) {
					alt83=12;
				}
				else if ( (synpred560_CIL()) ) {
					alt83=13;
				}
				else if ( (synpred561_CIL()) ) {
					alt83=14;
				}
				else if ( (synpred562_CIL()) ) {
					alt83=15;
				}
				else if ( (synpred563_CIL()) ) {
					alt83=16;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 83, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOX:
			case CASTCLASS:
			case CPOBJ:
			case INITOBJ:
			case ISINST:
			case LDELEMA:
			case LDOBJ:
			case MKREFANY:
			case NEWARR:
			case REFANYVAL:
			case SIZEOF:
			case STOBJ:
			case UNBOX:
				{
				alt83=17;
				}
				break;
			case LDSTR:
				{
				int LA83_10 = input.LA(2);
				if ( (synpred565_CIL()) ) {
					alt83=18;
				}
				else if ( (synpred566_CIL()) ) {
					alt83=19;
				}
				else if ( (synpred567_CIL()) ) {
					alt83=20;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 83, 10, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CALLI:
				{
				alt83=21;
				}
				break;
			case LDTOKEN:
				{
				alt83=22;
				}
				break;
			case SWITCH:
				{
				alt83=23;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 83, 0, input);
				throw nvae;
			}
			switch (alt83) {
				case 1 :
					// CIL.g:1000:27: instr_none
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_none_in_instr22550);
					instr_none1096=instr_none();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_none1096.getTree());

					}
					break;
				case 2 :
					// CIL.g:1001:27: instr_var int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_var_in_instr22579);
					instr_var1097=instr_var();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_var1097.getTree());

					pushFollow(FOLLOW_int32_in_instr22581);
					int321098=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321098.getTree());

					}
					break;
				case 3 :
					// CIL.g:1002:27: instr_var id
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_var_in_instr22610);
					instr_var1099=instr_var();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_var1099.getTree());

					pushFollow(FOLLOW_id_in_instr22612);
					id1100=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id1100.getTree());

					}
					break;
				case 4 :
					// CIL.g:1003:27: instr_i int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_i_in_instr22641);
					instr_i1101=instr_i();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_i1101.getTree());

					pushFollow(FOLLOW_int32_in_instr22643);
					int321102=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321102.getTree());

					}
					break;
				case 5 :
					// CIL.g:1004:27: instr_i8 int64
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_i8_in_instr22672);
					instr_i81103=instr_i8();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_i81103.getTree());

					pushFollow(FOLLOW_int64_in_instr22674);
					int641104=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int641104.getTree());

					}
					break;
				case 6 :
					// CIL.g:1005:27: instr_r float64
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_r_in_instr22703);
					instr_r1105=instr_r();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_r1105.getTree());

					pushFollow(FOLLOW_float64_in_instr22705);
					float641106=float64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, float641106.getTree());

					}
					break;
				case 7 :
					// CIL.g:1006:27: instr_r int64
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_r_in_instr22734);
					instr_r1107=instr_r();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_r1107.getTree());

					pushFollow(FOLLOW_int64_in_instr22736);
					int641108=int64();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int641108.getTree());

					}
					break;
				case 8 :
					// CIL.g:1007:27: instr_r_head bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_r_head_in_instr22765);
					instr_r_head1109=instr_r_head();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_r_head1109.getTree());

					pushFollow(FOLLOW_bytes_in_instr22767);
					bytes1110=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes1110.getTree());

					char_literal1111=(Token)match(input,259,FOLLOW_259_in_instr22769); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1111_tree = (CommonTree)adaptor.create(char_literal1111);
					adaptor.addChild(root_0, char_literal1111_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:1008:27: instr_brtarget int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_brtarget_in_instr22798);
					instr_brtarget1112=instr_brtarget();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_brtarget1112.getTree());

					pushFollow(FOLLOW_int32_in_instr22800);
					int321113=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321113.getTree());

					}
					break;
				case 10 :
					// CIL.g:1009:27: instr_brtarget id
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_brtarget_in_instr22829);
					instr_brtarget1114=instr_brtarget();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_brtarget1114.getTree());

					pushFollow(FOLLOW_id_in_instr22831);
					id1115=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id1115.getTree());

					}
					break;
				case 11 :
					// CIL.g:1010:27: instr_method methodRef
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_method_in_instr22860);
					instr_method1116=instr_method();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_method1116.getTree());

					pushFollow(FOLLOW_methodRef_in_instr22862);
					methodRef1117=methodRef();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodRef1117.getTree());

					}
					break;
				case 12 :
					// CIL.g:1011:27: instr_field type typeSpec '::' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_field_in_instr22891);
					instr_field1118=instr_field();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_field1118.getTree());

					pushFollow(FOLLOW_type_in_instr22893);
					type1119=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1119.getTree());

					pushFollow(FOLLOW_typeSpec_in_instr22895);
					typeSpec1120=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec1120.getTree());

					string_literal1121=(Token)match(input,319,FOLLOW_319_in_instr22897); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1121_tree = (CommonTree)adaptor.create(string_literal1121);
					adaptor.addChild(root_0, string_literal1121_tree);
					}

					pushFollow(FOLLOW_dottedName_in_instr22899);
					dottedName1122=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1122.getTree());

					}
					break;
				case 13 :
					// CIL.g:1012:27: instr_field type dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_field_in_instr22928);
					instr_field1123=instr_field();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_field1123.getTree());

					pushFollow(FOLLOW_type_in_instr22930);
					type1124=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1124.getTree());

					pushFollow(FOLLOW_dottedName_in_instr22932);
					dottedName1125=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1125.getTree());

					}
					break;
				case 14 :
					// CIL.g:1013:27: instr_field mdtoken
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_field_in_instr22961);
					instr_field1126=instr_field();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_field1126.getTree());

					pushFollow(FOLLOW_mdtoken_in_instr22963);
					mdtoken1127=mdtoken();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, mdtoken1127.getTree());

					}
					break;
				case 15 :
					// CIL.g:1014:27: instr_field typedef_f
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_field_in_instr22992);
					instr_field1128=instr_field();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_field1128.getTree());

					pushFollow(FOLLOW_typedef_f_in_instr22994);
					typedef_f1129=typedef_f();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_f1129.getTree());

					}
					break;
				case 16 :
					// CIL.g:1015:27: instr_field typedef_mr
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_field_in_instr23023);
					instr_field1130=instr_field();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_field1130.getTree());

					pushFollow(FOLLOW_typedef_mr_in_instr23025);
					typedef_mr1131=typedef_mr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_mr1131.getTree());

					}
					break;
				case 17 :
					// CIL.g:1016:27: instr_type typeSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_type_in_instr23054);
					instr_type1132=instr_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_type1132.getTree());

					pushFollow(FOLLOW_typeSpec_in_instr23056);
					typeSpec1133=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec1133.getTree());

					}
					break;
				case 18 :
					// CIL.g:1017:27: instr_string compQstring
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_string_in_instr23085);
					instr_string1134=instr_string();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_string1134.getTree());

					pushFollow(FOLLOW_compQstring_in_instr23087);
					compQstring1135=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1135.getTree());

					}
					break;
				case 19 :
					// CIL.g:1018:27: instr_string 'ansi' '(' compQstring ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_string_in_instr23116);
					instr_string1136=instr_string();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_string1136.getTree());

					string_literal1137=(Token)match(input,329,FOLLOW_329_in_instr23118); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1137_tree = (CommonTree)adaptor.create(string_literal1137);
					adaptor.addChild(root_0, string_literal1137_tree);
					}

					char_literal1138=(Token)match(input,258,FOLLOW_258_in_instr23120); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1138_tree = (CommonTree)adaptor.create(char_literal1138);
					adaptor.addChild(root_0, char_literal1138_tree);
					}

					pushFollow(FOLLOW_compQstring_in_instr23122);
					compQstring1139=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1139.getTree());

					char_literal1140=(Token)match(input,259,FOLLOW_259_in_instr23124); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1140_tree = (CommonTree)adaptor.create(char_literal1140);
					adaptor.addChild(root_0, char_literal1140_tree);
					}

					}
					break;
				case 20 :
					// CIL.g:1019:27: instr_string bytearrayhead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_string_in_instr23153);
					instr_string1141=instr_string();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_string1141.getTree());

					pushFollow(FOLLOW_bytearrayhead_in_instr23155);
					bytearrayhead1142=bytearrayhead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytearrayhead1142.getTree());

					pushFollow(FOLLOW_bytes_in_instr23157);
					bytes1143=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes1143.getTree());

					char_literal1144=(Token)match(input,259,FOLLOW_259_in_instr23159); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1144_tree = (CommonTree)adaptor.create(char_literal1144);
					adaptor.addChild(root_0, char_literal1144_tree);
					}

					}
					break;
				case 21 :
					// CIL.g:1020:27: instr_sig callConv type '(' sigArgs0 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_sig_in_instr23188);
					instr_sig1145=instr_sig();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_sig1145.getTree());

					pushFollow(FOLLOW_callConv_in_instr23190);
					callConv1146=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv1146.getTree());

					pushFollow(FOLLOW_type_in_instr23192);
					type1147=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1147.getTree());

					char_literal1148=(Token)match(input,258,FOLLOW_258_in_instr23194); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1148_tree = (CommonTree)adaptor.create(char_literal1148);
					adaptor.addChild(root_0, char_literal1148_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_instr23196);
					sigArgs01149=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs01149.getTree());

					char_literal1150=(Token)match(input,259,FOLLOW_259_in_instr23198); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1150_tree = (CommonTree)adaptor.create(char_literal1150);
					adaptor.addChild(root_0, char_literal1150_tree);
					}

					}
					break;
				case 22 :
					// CIL.g:1021:27: instr_tok ownerType
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_tok_in_instr23227);
					instr_tok1151=instr_tok();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_tok1151.getTree());

					pushFollow(FOLLOW_ownerType_in_instr23229);
					ownerType1152=ownerType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ownerType1152.getTree());

					}
					break;
				case 23 :
					// CIL.g:1022:27: instr_switch '(' labels ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_instr_switch_in_instr23260);
					instr_switch1153=instr_switch();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, instr_switch1153.getTree());

					char_literal1154=(Token)match(input,258,FOLLOW_258_in_instr23262); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1154_tree = (CommonTree)adaptor.create(char_literal1154);
					adaptor.addChild(root_0, char_literal1154_tree);
					}

					pushFollow(FOLLOW_labels_in_instr23264);
					labels1155=labels();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, labels1155.getTree());

					char_literal1156=(Token)match(input,259,FOLLOW_259_in_instr23266); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1156_tree = (CommonTree)adaptor.create(char_literal1156);
					adaptor.addChild(root_0, char_literal1156_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "instr"


	public static class labels_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "labels"
	// CIL.g:1025:1: labels : (| id ',' labels | int32 ',' labels | id | int32 );
	public final CILParser.labels_return labels() throws RecognitionException {
		CILParser.labels_return retval = new CILParser.labels_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1158=null;
		Token char_literal1161=null;
		ParserRuleReturnScope id1157 =null;
		ParserRuleReturnScope labels1159 =null;
		ParserRuleReturnScope int321160 =null;
		ParserRuleReturnScope labels1162 =null;
		ParserRuleReturnScope id1163 =null;
		ParserRuleReturnScope int321164 =null;

		CommonTree char_literal1158_tree=null;
		CommonTree char_literal1161_tree=null;

		try {
			// CIL.g:1025:25: (| id ',' labels | int32 ',' labels | id | int32 )
			int alt84=5;
			switch ( input.LA(1) ) {
			case EOF:
			case 259:
				{
				alt84=1;
				}
				break;
			case ID:
			case SQSTRING:
				{
				int LA84_2 = input.LA(2);
				if ( (LA84_2==262) ) {
					alt84=2;
				}
				else if ( (LA84_2==EOF||LA84_2==259) ) {
					alt84=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 84, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case INT32:
				{
				int LA84_3 = input.LA(2);
				if ( (LA84_3==262) ) {
					alt84=3;
				}
				else if ( (LA84_3==EOF||LA84_3==259) ) {
					alt84=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 84, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 84, 0, input);
				throw nvae;
			}
			switch (alt84) {
				case 1 :
					// CIL.g:1026:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:1026:27: id ',' labels
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_id_in_labels23370);
					id1157=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id1157.getTree());

					char_literal1158=(Token)match(input,262,FOLLOW_262_in_labels23372); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1158_tree = (CommonTree)adaptor.create(char_literal1158);
					adaptor.addChild(root_0, char_literal1158_tree);
					}

					pushFollow(FOLLOW_labels_in_labels23374);
					labels1159=labels();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, labels1159.getTree());

					}
					break;
				case 3 :
					// CIL.g:1027:27: int32 ',' labels
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_int32_in_labels23403);
					int321160=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321160.getTree());

					char_literal1161=(Token)match(input,262,FOLLOW_262_in_labels23405); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1161_tree = (CommonTree)adaptor.create(char_literal1161);
					adaptor.addChild(root_0, char_literal1161_tree);
					}

					pushFollow(FOLLOW_labels_in_labels23407);
					labels1162=labels();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, labels1162.getTree());

					}
					break;
				case 4 :
					// CIL.g:1028:27: id
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_id_in_labels23436);
					id1163=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id1163.getTree());

					}
					break;
				case 5 :
					// CIL.g:1029:27: int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_int32_in_labels23465);
					int321164=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321164.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "labels"


	public static class tyArgs0_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "tyArgs0"
	// CIL.g:1033:1: tyArgs0 : (| '<' tyArgs1 '>' );
	public final CILParser.tyArgs0_return tyArgs0() throws RecognitionException {
		CILParser.tyArgs0_return retval = new CILParser.tyArgs0_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1165=null;
		Token char_literal1167=null;
		ParserRuleReturnScope tyArgs11166 =null;

		CommonTree char_literal1165_tree=null;
		CommonTree char_literal1167_tree=null;

		try {
			// CIL.g:1033:25: (| '<' tyArgs1 '>' )
			int alt85=2;
			int LA85_0 = input.LA(1);
			if ( (LA85_0==258) ) {
				alt85=1;
			}
			else if ( (LA85_0==320) ) {
				alt85=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 85, 0, input);
				throw nvae;
			}

			switch (alt85) {
				case 1 :
					// CIL.g:1034:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:1034:27: '<' tyArgs1 '>'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1165=(Token)match(input,320,FOLLOW_320_in_tyArgs023546); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1165_tree = (CommonTree)adaptor.create(char_literal1165);
					adaptor.addChild(root_0, char_literal1165_tree);
					}

					pushFollow(FOLLOW_tyArgs1_in_tyArgs023548);
					tyArgs11166=tyArgs1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tyArgs11166.getTree());

					char_literal1167=(Token)match(input,322,FOLLOW_322_in_tyArgs023550); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1167_tree = (CommonTree)adaptor.create(char_literal1167);
					adaptor.addChild(root_0, char_literal1167_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tyArgs0"


	public static class tyArgs1_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "tyArgs1"
	// CIL.g:1037:1: tyArgs1 : (| tyArgs2 );
	public final CILParser.tyArgs1_return tyArgs1() throws RecognitionException {
		CILParser.tyArgs1_return retval = new CILParser.tyArgs1_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope tyArgs21168 =null;


		try {
			// CIL.g:1037:25: (| tyArgs2 )
			int alt86=2;
			int LA86_0 = input.LA(1);
			if ( (LA86_0==322) ) {
				alt86=1;
			}
			else if ( (LA86_0==CHAR||LA86_0==CLASS||LA86_0==256||LA86_0==264||LA86_0==310||LA86_0==340||(LA86_0 >= 369 && LA86_0 <= 370)||(LA86_0 >= 388 && LA86_0 <= 391)||LA86_0==407||LA86_0==410||LA86_0==423||LA86_0==462||LA86_0==473||(LA86_0 >= 475 && LA86_0 <= 478)||LA86_0==482||(LA86_0 >= 484 && LA86_0 <= 485)||LA86_0==490) ) {
				alt86=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 86, 0, input);
				throw nvae;
			}

			switch (alt86) {
				case 1 :
					// CIL.g:1038:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:1038:27: tyArgs2
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_tyArgs2_in_tyArgs123629);
					tyArgs21168=tyArgs2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tyArgs21168.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tyArgs1"


	public static class tyArgs2_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "tyArgs2"
	// CIL.g:1041:1: tyArgs2 : ( type ) ( ',' type )* ;
	public final CILParser.tyArgs2_return tyArgs2() throws RecognitionException {
		CILParser.tyArgs2_return retval = new CILParser.tyArgs2_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1170=null;
		ParserRuleReturnScope type1169 =null;
		ParserRuleReturnScope type1171 =null;

		CommonTree char_literal1170_tree=null;

		try {
			// CIL.g:1041:25: ( ( type ) ( ',' type )* )
			// CIL.g:1041:27: ( type ) ( ',' type )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1041:27: ( type )
			// CIL.g:1041:28: type
			{
			pushFollow(FOLLOW_type_in_tyArgs223680);
			type1169=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type1169.getTree());

			}

			// CIL.g:1041:34: ( ',' type )*
			loop87:
			while (true) {
				int alt87=2;
				int LA87_0 = input.LA(1);
				if ( (LA87_0==262) ) {
					alt87=1;
				}

				switch (alt87) {
				case 1 :
					// CIL.g:1041:35: ',' type
					{
					char_literal1170=(Token)match(input,262,FOLLOW_262_in_tyArgs223684); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1170_tree = (CommonTree)adaptor.create(char_literal1170);
					adaptor.addChild(root_0, char_literal1170_tree);
					}

					pushFollow(FOLLOW_type_in_tyArgs223686);
					type1171=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1171.getTree());

					}
					break;

				default :
					break loop87;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tyArgs2"


	public static class sigArgs0_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sigArgs0"
	// CIL.g:1045:1: sigArgs0 : (| sigArgs1 );
	public final CILParser.sigArgs0_return sigArgs0() throws RecognitionException {
		CILParser.sigArgs0_return retval = new CILParser.sigArgs0_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope sigArgs11172 =null;


		try {
			// CIL.g:1045:25: (| sigArgs1 )
			int alt88=2;
			int LA88_0 = input.LA(1);
			if ( (LA88_0==259) ) {
				alt88=1;
			}
			else if ( (LA88_0==CHAR||LA88_0==CLASS||LA88_0==256||LA88_0==264||LA88_0==310||LA88_0==323||LA88_0==340||(LA88_0 >= 369 && LA88_0 <= 370)||(LA88_0 >= 388 && LA88_0 <= 391)||LA88_0==407||LA88_0==410||LA88_0==423||LA88_0==462||LA88_0==473||(LA88_0 >= 475 && LA88_0 <= 478)||LA88_0==482||(LA88_0 >= 484 && LA88_0 <= 485)||LA88_0==490) ) {
				alt88=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 88, 0, input);
				throw nvae;
			}

			switch (alt88) {
				case 1 :
					// CIL.g:1046:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:1046:27: sigArgs1
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_sigArgs1_in_sigArgs023767);
					sigArgs11172=sigArgs1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs11172.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sigArgs0"


	public static class sigArgs1_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sigArgs1"
	// CIL.g:1049:1: sigArgs1 : ( sigArg ) ( ',' sigArg )* ;
	public final CILParser.sigArgs1_return sigArgs1() throws RecognitionException {
		CILParser.sigArgs1_return retval = new CILParser.sigArgs1_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1174=null;
		ParserRuleReturnScope sigArg1173 =null;
		ParserRuleReturnScope sigArg1175 =null;

		CommonTree char_literal1174_tree=null;

		try {
			// CIL.g:1049:25: ( ( sigArg ) ( ',' sigArg )* )
			// CIL.g:1049:27: ( sigArg ) ( ',' sigArg )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1049:27: ( sigArg )
			// CIL.g:1049:28: sigArg
			{
			pushFollow(FOLLOW_sigArg_in_sigArgs123817);
			sigArg1173=sigArg();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArg1173.getTree());

			}

			// CIL.g:1049:36: ( ',' sigArg )*
			loop89:
			while (true) {
				int alt89=2;
				int LA89_0 = input.LA(1);
				if ( (LA89_0==262) ) {
					alt89=1;
				}

				switch (alt89) {
				case 1 :
					// CIL.g:1049:37: ',' sigArg
					{
					char_literal1174=(Token)match(input,262,FOLLOW_262_in_sigArgs123821); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1174_tree = (CommonTree)adaptor.create(char_literal1174);
					adaptor.addChild(root_0, char_literal1174_tree);
					}

					pushFollow(FOLLOW_sigArg_in_sigArgs123823);
					sigArg1175=sigArg();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArg1175.getTree());

					}
					break;

				default :
					break loop89;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sigArgs1"


	public static class sigArg_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sigArg"
	// CIL.g:1052:1: sigArg : ( '...' | paramAttr type marshalClause | paramAttr type marshalClause id );
	public final CILParser.sigArg_return sigArg() throws RecognitionException {
		CILParser.sigArg_return retval = new CILParser.sigArg_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1176=null;
		ParserRuleReturnScope paramAttr1177 =null;
		ParserRuleReturnScope type1178 =null;
		ParserRuleReturnScope marshalClause1179 =null;
		ParserRuleReturnScope paramAttr1180 =null;
		ParserRuleReturnScope type1181 =null;
		ParserRuleReturnScope marshalClause1182 =null;
		ParserRuleReturnScope id1183 =null;

		CommonTree string_literal1176_tree=null;

		try {
			// CIL.g:1052:25: ( '...' | paramAttr type marshalClause | paramAttr type marshalClause id )
			int alt90=3;
			switch ( input.LA(1) ) {
			case 264:
				{
				int LA90_1 = input.LA(2);
				if ( (synpred579_CIL()) ) {
					alt90=1;
				}
				else if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 323:
				{
				int LA90_2 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case CLASS:
				{
				int LA90_3 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 423:
				{
				int LA90_4 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 484:
				{
				int LA90_5 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 485:
				{
				int LA90_6 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 407:
				{
				int LA90_7 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 256:
				{
				int LA90_8 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 473:
				{
				int LA90_9 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 490:
				{
				int LA90_10 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 410:
				{
				int LA90_11 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case CHAR:
				{
				int LA90_12 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 462:
				{
				int LA90_13 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 340:
				{
				int LA90_14 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 391:
				{
				int LA90_15 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 388:
				{
				int LA90_16 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 389:
				{
				int LA90_17 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 390:
				{
				int LA90_18 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 369:
				{
				int LA90_19 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 370:
				{
				int LA90_20 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 482:
				{
				int LA90_21 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 478:
				{
				int LA90_22 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 475:
				{
				int LA90_23 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 476:
				{
				int LA90_24 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 477:
				{
				int LA90_25 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 310:
				{
				int LA90_26 = input.LA(2);
				if ( (synpred580_CIL()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 90, 0, input);
				throw nvae;
			}
			switch (alt90) {
				case 1 :
					// CIL.g:1052:27: '...'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1176=(Token)match(input,264,FOLLOW_264_in_sigArg23876); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1176_tree = (CommonTree)adaptor.create(string_literal1176);
					adaptor.addChild(root_0, string_literal1176_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1053:27: paramAttr type marshalClause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_paramAttr_in_sigArg23905);
					paramAttr1177=paramAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, paramAttr1177.getTree());

					pushFollow(FOLLOW_type_in_sigArg23907);
					type1178=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1178.getTree());

					pushFollow(FOLLOW_marshalClause_in_sigArg23909);
					marshalClause1179=marshalClause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, marshalClause1179.getTree());

					}
					break;
				case 3 :
					// CIL.g:1054:27: paramAttr type marshalClause id
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_paramAttr_in_sigArg23938);
					paramAttr1180=paramAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, paramAttr1180.getTree());

					pushFollow(FOLLOW_type_in_sigArg23940);
					type1181=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1181.getTree());

					pushFollow(FOLLOW_marshalClause_in_sigArg23942);
					marshalClause1182=marshalClause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, marshalClause1182.getTree());

					pushFollow(FOLLOW_id_in_sigArg23944);
					id1183=id();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, id1183.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sigArg"


	public static class className_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "className"
	// CIL.g:1058:1: className : ( '[' dottedName ']' slashedName | '[' mdtoken ']' slashedName | '[' '*' ']' slashedName | '[' '.module' dottedName ']' slashedName | slashedName | mdtoken | typedef_t | '.this' | '.base' | '.nester' );
	public final CILParser.className_return className() throws RecognitionException {
		CILParser.className_return retval = new CILParser.className_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1184=null;
		Token char_literal1186=null;
		Token char_literal1188=null;
		Token char_literal1190=null;
		Token char_literal1192=null;
		Token char_literal1193=null;
		Token char_literal1194=null;
		Token char_literal1196=null;
		Token string_literal1197=null;
		Token char_literal1199=null;
		Token string_literal1204=null;
		Token string_literal1205=null;
		Token string_literal1206=null;
		ParserRuleReturnScope dottedName1185 =null;
		ParserRuleReturnScope slashedName1187 =null;
		ParserRuleReturnScope mdtoken1189 =null;
		ParserRuleReturnScope slashedName1191 =null;
		ParserRuleReturnScope slashedName1195 =null;
		ParserRuleReturnScope dottedName1198 =null;
		ParserRuleReturnScope slashedName1200 =null;
		ParserRuleReturnScope slashedName1201 =null;
		ParserRuleReturnScope mdtoken1202 =null;
		ParserRuleReturnScope typedef_t1203 =null;

		CommonTree char_literal1184_tree=null;
		CommonTree char_literal1186_tree=null;
		CommonTree char_literal1188_tree=null;
		CommonTree char_literal1190_tree=null;
		CommonTree char_literal1192_tree=null;
		CommonTree char_literal1193_tree=null;
		CommonTree char_literal1194_tree=null;
		CommonTree char_literal1196_tree=null;
		CommonTree string_literal1197_tree=null;
		CommonTree char_literal1199_tree=null;
		CommonTree string_literal1204_tree=null;
		CommonTree string_literal1205_tree=null;
		CommonTree string_literal1206_tree=null;

		try {
			// CIL.g:1058:25: ( '[' dottedName ']' slashedName | '[' mdtoken ']' slashedName | '[' '*' ']' slashedName | '[' '.module' dottedName ']' slashedName | slashedName | mdtoken | typedef_t | '.this' | '.base' | '.nester' )
			int alt91=10;
			switch ( input.LA(1) ) {
			case 323:
				{
				switch ( input.LA(2) ) {
				case 260:
					{
					alt91=3;
					}
					break;
				case 290:
					{
					alt91=4;
					}
					break;
				case DOTTEDNAME:
				case ID:
				case SQSTRING:
					{
					alt91=1;
					}
					break;
				case 406:
					{
					alt91=2;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 91, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case DOTTEDNAME:
			case ID:
			case SQSTRING:
				{
				alt91=5;
				}
				break;
			case 406:
				{
				alt91=6;
				}
				break;
			case 310:
				{
				alt91=7;
				}
				break;
			case 308:
				{
				alt91=8;
				}
				break;
			case 267:
				{
				alt91=9;
				}
				break;
			case 294:
				{
				alt91=10;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 91, 0, input);
				throw nvae;
			}
			switch (alt91) {
				case 1 :
					// CIL.g:1058:27: '[' dottedName ']' slashedName
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1184=(Token)match(input,323,FOLLOW_323_in_className23994); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1184_tree = (CommonTree)adaptor.create(char_literal1184);
					adaptor.addChild(root_0, char_literal1184_tree);
					}

					pushFollow(FOLLOW_dottedName_in_className23996);
					dottedName1185=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1185.getTree());

					char_literal1186=(Token)match(input,324,FOLLOW_324_in_className23998); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1186_tree = (CommonTree)adaptor.create(char_literal1186);
					adaptor.addChild(root_0, char_literal1186_tree);
					}

					pushFollow(FOLLOW_slashedName_in_className24000);
					slashedName1187=slashedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, slashedName1187.getTree());

					}
					break;
				case 2 :
					// CIL.g:1059:27: '[' mdtoken ']' slashedName
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1188=(Token)match(input,323,FOLLOW_323_in_className24029); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1188_tree = (CommonTree)adaptor.create(char_literal1188);
					adaptor.addChild(root_0, char_literal1188_tree);
					}

					pushFollow(FOLLOW_mdtoken_in_className24031);
					mdtoken1189=mdtoken();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, mdtoken1189.getTree());

					char_literal1190=(Token)match(input,324,FOLLOW_324_in_className24033); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1190_tree = (CommonTree)adaptor.create(char_literal1190);
					adaptor.addChild(root_0, char_literal1190_tree);
					}

					pushFollow(FOLLOW_slashedName_in_className24035);
					slashedName1191=slashedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, slashedName1191.getTree());

					}
					break;
				case 3 :
					// CIL.g:1060:27: '[' '*' ']' slashedName
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1192=(Token)match(input,323,FOLLOW_323_in_className24064); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1192_tree = (CommonTree)adaptor.create(char_literal1192);
					adaptor.addChild(root_0, char_literal1192_tree);
					}

					char_literal1193=(Token)match(input,260,FOLLOW_260_in_className24066); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1193_tree = (CommonTree)adaptor.create(char_literal1193);
					adaptor.addChild(root_0, char_literal1193_tree);
					}

					char_literal1194=(Token)match(input,324,FOLLOW_324_in_className24068); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1194_tree = (CommonTree)adaptor.create(char_literal1194);
					adaptor.addChild(root_0, char_literal1194_tree);
					}

					pushFollow(FOLLOW_slashedName_in_className24070);
					slashedName1195=slashedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, slashedName1195.getTree());

					}
					break;
				case 4 :
					// CIL.g:1061:27: '[' '.module' dottedName ']' slashedName
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1196=(Token)match(input,323,FOLLOW_323_in_className24099); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1196_tree = (CommonTree)adaptor.create(char_literal1196);
					adaptor.addChild(root_0, char_literal1196_tree);
					}

					string_literal1197=(Token)match(input,290,FOLLOW_290_in_className24101); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1197_tree = (CommonTree)adaptor.create(string_literal1197);
					adaptor.addChild(root_0, string_literal1197_tree);
					}

					pushFollow(FOLLOW_dottedName_in_className24103);
					dottedName1198=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1198.getTree());

					char_literal1199=(Token)match(input,324,FOLLOW_324_in_className24105); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1199_tree = (CommonTree)adaptor.create(char_literal1199);
					adaptor.addChild(root_0, char_literal1199_tree);
					}

					pushFollow(FOLLOW_slashedName_in_className24107);
					slashedName1200=slashedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, slashedName1200.getTree());

					}
					break;
				case 5 :
					// CIL.g:1062:27: slashedName
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_slashedName_in_className24136);
					slashedName1201=slashedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, slashedName1201.getTree());

					}
					break;
				case 6 :
					// CIL.g:1063:27: mdtoken
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_mdtoken_in_className24165);
					mdtoken1202=mdtoken();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, mdtoken1202.getTree());

					}
					break;
				case 7 :
					// CIL.g:1064:27: typedef_t
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_t_in_className24194);
					typedef_t1203=typedef_t();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_t1203.getTree());

					}
					break;
				case 8 :
					// CIL.g:1065:27: '.this'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1204=(Token)match(input,308,FOLLOW_308_in_className24223); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1204_tree = (CommonTree)adaptor.create(string_literal1204);
					adaptor.addChild(root_0, string_literal1204_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:1066:27: '.base'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1205=(Token)match(input,267,FOLLOW_267_in_className24252); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1205_tree = (CommonTree)adaptor.create(string_literal1205);
					adaptor.addChild(root_0, string_literal1205_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:1067:27: '.nester'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1206=(Token)match(input,294,FOLLOW_294_in_className24281); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1206_tree = (CommonTree)adaptor.create(string_literal1206);
					adaptor.addChild(root_0, string_literal1206_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "className"


	public static class slashedName_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "slashedName"
	// CIL.g:1070:1: slashedName : ( dottedName ) ( '/' dottedName )* ;
	public final CILParser.slashedName_return slashedName() throws RecognitionException {
		CILParser.slashedName_return retval = new CILParser.slashedName_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1208=null;
		ParserRuleReturnScope dottedName1207 =null;
		ParserRuleReturnScope dottedName1209 =null;

		CommonTree char_literal1208_tree=null;

		try {
			// CIL.g:1070:25: ( ( dottedName ) ( '/' dottedName )* )
			// CIL.g:1070:27: ( dottedName ) ( '/' dottedName )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1070:27: ( dottedName )
			// CIL.g:1070:28: dottedName
			{
			pushFollow(FOLLOW_dottedName_in_slashedName24328);
			dottedName1207=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1207.getTree());

			}

			// CIL.g:1070:40: ( '/' dottedName )*
			loop92:
			while (true) {
				int alt92=2;
				int LA92_0 = input.LA(1);
				if ( (LA92_0==317) ) {
					alt92=1;
				}

				switch (alt92) {
				case 1 :
					// CIL.g:1070:41: '/' dottedName
					{
					char_literal1208=(Token)match(input,317,FOLLOW_317_in_slashedName24332); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1208_tree = (CommonTree)adaptor.create(char_literal1208);
					adaptor.addChild(root_0, char_literal1208_tree);
					}

					pushFollow(FOLLOW_dottedName_in_slashedName24334);
					dottedName1209=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1209.getTree());

					}
					break;

				default :
					break loop92;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "slashedName"


	public static class typeSpec_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typeSpec"
	// CIL.g:1073:1: typeSpec : ( className | '[' dottedName ']' | '[' '.module' dottedName ']' | type );
	public final CILParser.typeSpec_return typeSpec() throws RecognitionException {
		CILParser.typeSpec_return retval = new CILParser.typeSpec_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1211=null;
		Token char_literal1213=null;
		Token char_literal1214=null;
		Token string_literal1215=null;
		Token char_literal1217=null;
		ParserRuleReturnScope className1210 =null;
		ParserRuleReturnScope dottedName1212 =null;
		ParserRuleReturnScope dottedName1216 =null;
		ParserRuleReturnScope type1218 =null;

		CommonTree char_literal1211_tree=null;
		CommonTree char_literal1213_tree=null;
		CommonTree char_literal1214_tree=null;
		CommonTree string_literal1215_tree=null;
		CommonTree char_literal1217_tree=null;

		try {
			// CIL.g:1073:25: ( className | '[' dottedName ']' | '[' '.module' dottedName ']' | type )
			int alt93=4;
			switch ( input.LA(1) ) {
			case 323:
				{
				int LA93_1 = input.LA(2);
				if ( (synpred591_CIL()) ) {
					alt93=1;
				}
				else if ( (synpred592_CIL()) ) {
					alt93=2;
				}
				else if ( (synpred593_CIL()) ) {
					alt93=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 93, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DOTTEDNAME:
			case ID:
			case SQSTRING:
			case 267:
			case 294:
			case 308:
			case 406:
				{
				alt93=1;
				}
				break;
			case 310:
				{
				int LA93_5 = input.LA(2);
				if ( (synpred591_CIL()) ) {
					alt93=1;
				}
				else if ( (true) ) {
					alt93=4;
				}

				}
				break;
			case CHAR:
			case CLASS:
			case 256:
			case 264:
			case 340:
			case 369:
			case 370:
			case 388:
			case 389:
			case 390:
			case 391:
			case 407:
			case 410:
			case 423:
			case 462:
			case 473:
			case 475:
			case 476:
			case 477:
			case 478:
			case 482:
			case 484:
			case 485:
			case 490:
				{
				alt93=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 93, 0, input);
				throw nvae;
			}
			switch (alt93) {
				case 1 :
					// CIL.g:1073:27: className
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_className_in_typeSpec24385);
					className1210=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1210.getTree());

					}
					break;
				case 2 :
					// CIL.g:1074:27: '[' dottedName ']'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1211=(Token)match(input,323,FOLLOW_323_in_typeSpec24414); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1211_tree = (CommonTree)adaptor.create(char_literal1211);
					adaptor.addChild(root_0, char_literal1211_tree);
					}

					pushFollow(FOLLOW_dottedName_in_typeSpec24416);
					dottedName1212=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1212.getTree());

					char_literal1213=(Token)match(input,324,FOLLOW_324_in_typeSpec24418); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1213_tree = (CommonTree)adaptor.create(char_literal1213);
					adaptor.addChild(root_0, char_literal1213_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1075:27: '[' '.module' dottedName ']'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1214=(Token)match(input,323,FOLLOW_323_in_typeSpec24447); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1214_tree = (CommonTree)adaptor.create(char_literal1214);
					adaptor.addChild(root_0, char_literal1214_tree);
					}

					string_literal1215=(Token)match(input,290,FOLLOW_290_in_typeSpec24449); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1215_tree = (CommonTree)adaptor.create(string_literal1215);
					adaptor.addChild(root_0, string_literal1215_tree);
					}

					pushFollow(FOLLOW_dottedName_in_typeSpec24451);
					dottedName1216=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1216.getTree());

					char_literal1217=(Token)match(input,324,FOLLOW_324_in_typeSpec24453); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1217_tree = (CommonTree)adaptor.create(char_literal1217);
					adaptor.addChild(root_0, char_literal1217_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1076:27: type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_type_in_typeSpec24482);
					type1218=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1218.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "typeSpec"


	public static class nativeType_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "nativeType"
	// CIL.g:1080:1: nativeType : (| 'custom' '(' compQstring ',' compQstring ',' compQstring ',' compQstring ')' | 'custom' '(' compQstring ',' compQstring ')' | 'fixed' 'sysstring' '[' int32 ']' | 'fixed' 'array' '[' int32 ']' nativeType | 'variant' | 'currency' | 'syschar' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'error' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'lptstr' | 'objectref' | 'iunknown' iidParamIndex | 'idispatch' iidParamIndex | 'struct' | 'interface' iidParamIndex | 'safearray' variantType | 'safearray' variantType ',' compQstring | 'int' | 'unsigned' 'int' | 'uint' | 'nested' 'struct' | 'byvalstr' | 'ansi' 'bstr' | 'tbstr' | 'variant' 'bool' | 'method' | 'as' 'any' | 'lpstruct' | typedef_ts ) ( '*' | '[' ']' | '[' int32 ']' | '[' int32 '+' int32 ']' | '[' '+' int32 ']' )* ;
	public final CILParser.nativeType_return nativeType() throws RecognitionException {
		CILParser.nativeType_return retval = new CILParser.nativeType_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1219=null;
		Token char_literal1220=null;
		Token char_literal1222=null;
		Token char_literal1224=null;
		Token char_literal1226=null;
		Token char_literal1228=null;
		Token string_literal1229=null;
		Token char_literal1230=null;
		Token char_literal1232=null;
		Token char_literal1234=null;
		Token string_literal1235=null;
		Token string_literal1236=null;
		Token char_literal1237=null;
		Token char_literal1239=null;
		Token string_literal1240=null;
		Token string_literal1241=null;
		Token char_literal1242=null;
		Token char_literal1244=null;
		Token string_literal1246=null;
		Token string_literal1247=null;
		Token string_literal1248=null;
		Token string_literal1249=null;
		Token string_literal1250=null;
		Token string_literal1251=null;
		Token string_literal1252=null;
		Token string_literal1253=null;
		Token string_literal1254=null;
		Token string_literal1255=null;
		Token string_literal1256=null;
		Token string_literal1257=null;
		Token string_literal1258=null;
		Token string_literal1259=null;
		Token string_literal1260=null;
		Token string_literal1261=null;
		Token string_literal1262=null;
		Token string_literal1263=null;
		Token string_literal1264=null;
		Token string_literal1265=null;
		Token string_literal1266=null;
		Token string_literal1267=null;
		Token string_literal1268=null;
		Token string_literal1269=null;
		Token string_literal1270=null;
		Token string_literal1271=null;
		Token string_literal1272=null;
		Token string_literal1273=null;
		Token string_literal1274=null;
		Token string_literal1275=null;
		Token string_literal1276=null;
		Token string_literal1277=null;
		Token string_literal1279=null;
		Token string_literal1281=null;
		Token string_literal1282=null;
		Token string_literal1284=null;
		Token string_literal1286=null;
		Token char_literal1288=null;
		Token string_literal1290=null;
		Token string_literal1291=null;
		Token string_literal1292=null;
		Token string_literal1293=null;
		Token string_literal1294=null;
		Token string_literal1295=null;
		Token string_literal1296=null;
		Token string_literal1297=null;
		Token string_literal1298=null;
		Token string_literal1299=null;
		Token string_literal1300=null;
		Token string_literal1301=null;
		Token string_literal1302=null;
		Token string_literal1303=null;
		Token string_literal1304=null;
		Token string_literal1305=null;
		Token char_literal1307=null;
		Token char_literal1308=null;
		Token char_literal1309=null;
		Token char_literal1310=null;
		Token char_literal1312=null;
		Token char_literal1313=null;
		Token char_literal1315=null;
		Token char_literal1317=null;
		Token char_literal1318=null;
		Token char_literal1319=null;
		Token char_literal1321=null;
		ParserRuleReturnScope compQstring1221 =null;
		ParserRuleReturnScope compQstring1223 =null;
		ParserRuleReturnScope compQstring1225 =null;
		ParserRuleReturnScope compQstring1227 =null;
		ParserRuleReturnScope compQstring1231 =null;
		ParserRuleReturnScope compQstring1233 =null;
		ParserRuleReturnScope int321238 =null;
		ParserRuleReturnScope int321243 =null;
		ParserRuleReturnScope nativeType1245 =null;
		ParserRuleReturnScope iidParamIndex1278 =null;
		ParserRuleReturnScope iidParamIndex1280 =null;
		ParserRuleReturnScope iidParamIndex1283 =null;
		ParserRuleReturnScope variantType1285 =null;
		ParserRuleReturnScope variantType1287 =null;
		ParserRuleReturnScope compQstring1289 =null;
		ParserRuleReturnScope typedef_ts1306 =null;
		ParserRuleReturnScope int321311 =null;
		ParserRuleReturnScope int321314 =null;
		ParserRuleReturnScope int321316 =null;
		ParserRuleReturnScope int321320 =null;

		CommonTree string_literal1219_tree=null;
		CommonTree char_literal1220_tree=null;
		CommonTree char_literal1222_tree=null;
		CommonTree char_literal1224_tree=null;
		CommonTree char_literal1226_tree=null;
		CommonTree char_literal1228_tree=null;
		CommonTree string_literal1229_tree=null;
		CommonTree char_literal1230_tree=null;
		CommonTree char_literal1232_tree=null;
		CommonTree char_literal1234_tree=null;
		CommonTree string_literal1235_tree=null;
		CommonTree string_literal1236_tree=null;
		CommonTree char_literal1237_tree=null;
		CommonTree char_literal1239_tree=null;
		CommonTree string_literal1240_tree=null;
		CommonTree string_literal1241_tree=null;
		CommonTree char_literal1242_tree=null;
		CommonTree char_literal1244_tree=null;
		CommonTree string_literal1246_tree=null;
		CommonTree string_literal1247_tree=null;
		CommonTree string_literal1248_tree=null;
		CommonTree string_literal1249_tree=null;
		CommonTree string_literal1250_tree=null;
		CommonTree string_literal1251_tree=null;
		CommonTree string_literal1252_tree=null;
		CommonTree string_literal1253_tree=null;
		CommonTree string_literal1254_tree=null;
		CommonTree string_literal1255_tree=null;
		CommonTree string_literal1256_tree=null;
		CommonTree string_literal1257_tree=null;
		CommonTree string_literal1258_tree=null;
		CommonTree string_literal1259_tree=null;
		CommonTree string_literal1260_tree=null;
		CommonTree string_literal1261_tree=null;
		CommonTree string_literal1262_tree=null;
		CommonTree string_literal1263_tree=null;
		CommonTree string_literal1264_tree=null;
		CommonTree string_literal1265_tree=null;
		CommonTree string_literal1266_tree=null;
		CommonTree string_literal1267_tree=null;
		CommonTree string_literal1268_tree=null;
		CommonTree string_literal1269_tree=null;
		CommonTree string_literal1270_tree=null;
		CommonTree string_literal1271_tree=null;
		CommonTree string_literal1272_tree=null;
		CommonTree string_literal1273_tree=null;
		CommonTree string_literal1274_tree=null;
		CommonTree string_literal1275_tree=null;
		CommonTree string_literal1276_tree=null;
		CommonTree string_literal1277_tree=null;
		CommonTree string_literal1279_tree=null;
		CommonTree string_literal1281_tree=null;
		CommonTree string_literal1282_tree=null;
		CommonTree string_literal1284_tree=null;
		CommonTree string_literal1286_tree=null;
		CommonTree char_literal1288_tree=null;
		CommonTree string_literal1290_tree=null;
		CommonTree string_literal1291_tree=null;
		CommonTree string_literal1292_tree=null;
		CommonTree string_literal1293_tree=null;
		CommonTree string_literal1294_tree=null;
		CommonTree string_literal1295_tree=null;
		CommonTree string_literal1296_tree=null;
		CommonTree string_literal1297_tree=null;
		CommonTree string_literal1298_tree=null;
		CommonTree string_literal1299_tree=null;
		CommonTree string_literal1300_tree=null;
		CommonTree string_literal1301_tree=null;
		CommonTree string_literal1302_tree=null;
		CommonTree string_literal1303_tree=null;
		CommonTree string_literal1304_tree=null;
		CommonTree string_literal1305_tree=null;
		CommonTree char_literal1307_tree=null;
		CommonTree char_literal1308_tree=null;
		CommonTree char_literal1309_tree=null;
		CommonTree char_literal1310_tree=null;
		CommonTree char_literal1312_tree=null;
		CommonTree char_literal1313_tree=null;
		CommonTree char_literal1315_tree=null;
		CommonTree char_literal1317_tree=null;
		CommonTree char_literal1318_tree=null;
		CommonTree char_literal1319_tree=null;
		CommonTree char_literal1321_tree=null;

		try {
			// CIL.g:1080:25: ( (| 'custom' '(' compQstring ',' compQstring ',' compQstring ',' compQstring ')' | 'custom' '(' compQstring ',' compQstring ')' | 'fixed' 'sysstring' '[' int32 ']' | 'fixed' 'array' '[' int32 ']' nativeType | 'variant' | 'currency' | 'syschar' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'error' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'lptstr' | 'objectref' | 'iunknown' iidParamIndex | 'idispatch' iidParamIndex | 'struct' | 'interface' iidParamIndex | 'safearray' variantType | 'safearray' variantType ',' compQstring | 'int' | 'unsigned' 'int' | 'uint' | 'nested' 'struct' | 'byvalstr' | 'ansi' 'bstr' | 'tbstr' | 'variant' 'bool' | 'method' | 'as' 'any' | 'lpstruct' | typedef_ts ) ( '*' | '[' ']' | '[' int32 ']' | '[' int32 '+' int32 ']' | '[' '+' int32 ']' )* )
			// CIL.g:1080:27: (| 'custom' '(' compQstring ',' compQstring ',' compQstring ',' compQstring ')' | 'custom' '(' compQstring ',' compQstring ')' | 'fixed' 'sysstring' '[' int32 ']' | 'fixed' 'array' '[' int32 ']' nativeType | 'variant' | 'currency' | 'syschar' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'error' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'lptstr' | 'objectref' | 'iunknown' iidParamIndex | 'idispatch' iidParamIndex | 'struct' | 'interface' iidParamIndex | 'safearray' variantType | 'safearray' variantType ',' compQstring | 'int' | 'unsigned' 'int' | 'uint' | 'nested' 'struct' | 'byvalstr' | 'ansi' 'bstr' | 'tbstr' | 'variant' 'bool' | 'method' | 'as' 'any' | 'lpstruct' | typedef_ts ) ( '*' | '[' ']' | '[' int32 ']' | '[' int32 '+' int32 ']' | '[' '+' int32 ']' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1080:27: (| 'custom' '(' compQstring ',' compQstring ',' compQstring ',' compQstring ')' | 'custom' '(' compQstring ',' compQstring ')' | 'fixed' 'sysstring' '[' int32 ']' | 'fixed' 'array' '[' int32 ']' nativeType | 'variant' | 'currency' | 'syschar' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'error' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'lptstr' | 'objectref' | 'iunknown' iidParamIndex | 'idispatch' iidParamIndex | 'struct' | 'interface' iidParamIndex | 'safearray' variantType | 'safearray' variantType ',' compQstring | 'int' | 'unsigned' 'int' | 'uint' | 'nested' 'struct' | 'byvalstr' | 'ansi' 'bstr' | 'tbstr' | 'variant' 'bool' | 'method' | 'as' 'any' | 'lpstruct' | typedef_ts )
			int alt94=50;
			alt94 = dfa94.predict(input);
			switch (alt94) {
				case 1 :
					// CIL.g:1080:40: 
					{
					}
					break;
				case 2 :
					// CIL.g:1080:42: 'custom' '(' compQstring ',' compQstring ',' compQstring ',' compQstring ')'
					{
					string_literal1219=(Token)match(input,344,FOLLOW_344_in_nativeType24561); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1219_tree = (CommonTree)adaptor.create(string_literal1219);
					adaptor.addChild(root_0, string_literal1219_tree);
					}

					char_literal1220=(Token)match(input,258,FOLLOW_258_in_nativeType24563); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1220_tree = (CommonTree)adaptor.create(char_literal1220);
					adaptor.addChild(root_0, char_literal1220_tree);
					}

					pushFollow(FOLLOW_compQstring_in_nativeType24565);
					compQstring1221=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1221.getTree());

					char_literal1222=(Token)match(input,262,FOLLOW_262_in_nativeType24567); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1222_tree = (CommonTree)adaptor.create(char_literal1222);
					adaptor.addChild(root_0, char_literal1222_tree);
					}

					pushFollow(FOLLOW_compQstring_in_nativeType24569);
					compQstring1223=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1223.getTree());

					char_literal1224=(Token)match(input,262,FOLLOW_262_in_nativeType24571); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1224_tree = (CommonTree)adaptor.create(char_literal1224);
					adaptor.addChild(root_0, char_literal1224_tree);
					}

					pushFollow(FOLLOW_compQstring_in_nativeType24573);
					compQstring1225=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1225.getTree());

					char_literal1226=(Token)match(input,262,FOLLOW_262_in_nativeType24575); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1226_tree = (CommonTree)adaptor.create(char_literal1226);
					adaptor.addChild(root_0, char_literal1226_tree);
					}

					pushFollow(FOLLOW_compQstring_in_nativeType24577);
					compQstring1227=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1227.getTree());

					char_literal1228=(Token)match(input,259,FOLLOW_259_in_nativeType24579); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1228_tree = (CommonTree)adaptor.create(char_literal1228);
					adaptor.addChild(root_0, char_literal1228_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1080:121: 'custom' '(' compQstring ',' compQstring ')'
					{
					string_literal1229=(Token)match(input,344,FOLLOW_344_in_nativeType24583); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1229_tree = (CommonTree)adaptor.create(string_literal1229);
					adaptor.addChild(root_0, string_literal1229_tree);
					}

					char_literal1230=(Token)match(input,258,FOLLOW_258_in_nativeType24585); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1230_tree = (CommonTree)adaptor.create(char_literal1230);
					adaptor.addChild(root_0, char_literal1230_tree);
					}

					pushFollow(FOLLOW_compQstring_in_nativeType24587);
					compQstring1231=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1231.getTree());

					char_literal1232=(Token)match(input,262,FOLLOW_262_in_nativeType24589); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1232_tree = (CommonTree)adaptor.create(char_literal1232);
					adaptor.addChild(root_0, char_literal1232_tree);
					}

					pushFollow(FOLLOW_compQstring_in_nativeType24591);
					compQstring1233=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1233.getTree());

					char_literal1234=(Token)match(input,259,FOLLOW_259_in_nativeType24593); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1234_tree = (CommonTree)adaptor.create(char_literal1234);
					adaptor.addChild(root_0, char_literal1234_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1080:168: 'fixed' 'sysstring' '[' int32 ']'
					{
					string_literal1235=(Token)match(input,366,FOLLOW_366_in_nativeType24597); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1235_tree = (CommonTree)adaptor.create(string_literal1235);
					adaptor.addChild(root_0, string_literal1235_tree);
					}

					string_literal1236=(Token)match(input,466,FOLLOW_466_in_nativeType24599); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1236_tree = (CommonTree)adaptor.create(string_literal1236);
					adaptor.addChild(root_0, string_literal1236_tree);
					}

					char_literal1237=(Token)match(input,323,FOLLOW_323_in_nativeType24601); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1237_tree = (CommonTree)adaptor.create(char_literal1237);
					adaptor.addChild(root_0, char_literal1237_tree);
					}

					pushFollow(FOLLOW_int32_in_nativeType24603);
					int321238=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321238.getTree());

					char_literal1239=(Token)match(input,324,FOLLOW_324_in_nativeType24605); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1239_tree = (CommonTree)adaptor.create(char_literal1239);
					adaptor.addChild(root_0, char_literal1239_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1080:204: 'fixed' 'array' '[' int32 ']' nativeType
					{
					string_literal1240=(Token)match(input,366,FOLLOW_366_in_nativeType24609); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1240_tree = (CommonTree)adaptor.create(string_literal1240);
					adaptor.addChild(root_0, string_literal1240_tree);
					}

					string_literal1241=(Token)match(input,331,FOLLOW_331_in_nativeType24611); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1241_tree = (CommonTree)adaptor.create(string_literal1241);
					adaptor.addChild(root_0, string_literal1241_tree);
					}

					char_literal1242=(Token)match(input,323,FOLLOW_323_in_nativeType24613); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1242_tree = (CommonTree)adaptor.create(char_literal1242);
					adaptor.addChild(root_0, char_literal1242_tree);
					}

					pushFollow(FOLLOW_int32_in_nativeType24615);
					int321243=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321243.getTree());

					char_literal1244=(Token)match(input,324,FOLLOW_324_in_nativeType24617); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1244_tree = (CommonTree)adaptor.create(char_literal1244);
					adaptor.addChild(root_0, char_literal1244_tree);
					}

					pushFollow(FOLLOW_nativeType_in_nativeType24619);
					nativeType1245=nativeType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, nativeType1245.getTree());

					}
					break;
				case 6 :
					// CIL.g:1080:247: 'variant'
					{
					string_literal1246=(Token)match(input,487,FOLLOW_487_in_nativeType24623); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1246_tree = (CommonTree)adaptor.create(string_literal1246);
					adaptor.addChild(root_0, string_literal1246_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:1080:259: 'currency'
					{
					string_literal1247=(Token)match(input,343,FOLLOW_343_in_nativeType24627); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1247_tree = (CommonTree)adaptor.create(string_literal1247);
					adaptor.addChild(root_0, string_literal1247_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:1080:272: 'syschar'
					{
					string_literal1248=(Token)match(input,465,FOLLOW_465_in_nativeType24631); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1248_tree = (CommonTree)adaptor.create(string_literal1248);
					adaptor.addChild(root_0, string_literal1248_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:1080:284: 'void'
					{
					string_literal1249=(Token)match(input,490,FOLLOW_490_in_nativeType24635); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1249_tree = (CommonTree)adaptor.create(string_literal1249);
					adaptor.addChild(root_0, string_literal1249_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:1080:293: 'bool'
					{
					string_literal1250=(Token)match(input,340,FOLLOW_340_in_nativeType24639); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1250_tree = (CommonTree)adaptor.create(string_literal1250);
					adaptor.addChild(root_0, string_literal1250_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:1080:302: 'int8'
					{
					string_literal1251=(Token)match(input,391,FOLLOW_391_in_nativeType24643); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1251_tree = (CommonTree)adaptor.create(string_literal1251);
					adaptor.addChild(root_0, string_literal1251_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:1080:311: 'int16'
					{
					string_literal1252=(Token)match(input,388,FOLLOW_388_in_nativeType24647); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1252_tree = (CommonTree)adaptor.create(string_literal1252);
					adaptor.addChild(root_0, string_literal1252_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:1080:321: 'int32'
					{
					string_literal1253=(Token)match(input,389,FOLLOW_389_in_nativeType24651); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1253_tree = (CommonTree)adaptor.create(string_literal1253);
					adaptor.addChild(root_0, string_literal1253_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:1080:331: 'int64'
					{
					string_literal1254=(Token)match(input,390,FOLLOW_390_in_nativeType24655); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1254_tree = (CommonTree)adaptor.create(string_literal1254);
					adaptor.addChild(root_0, string_literal1254_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:1080:341: 'float32'
					{
					string_literal1255=(Token)match(input,369,FOLLOW_369_in_nativeType24659); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1255_tree = (CommonTree)adaptor.create(string_literal1255);
					adaptor.addChild(root_0, string_literal1255_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:1080:353: 'float64'
					{
					string_literal1256=(Token)match(input,370,FOLLOW_370_in_nativeType24663); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1256_tree = (CommonTree)adaptor.create(string_literal1256);
					adaptor.addChild(root_0, string_literal1256_tree);
					}

					}
					break;
				case 17 :
					// CIL.g:1080:365: 'error'
					{
					string_literal1257=(Token)match(input,351,FOLLOW_351_in_nativeType24667); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1257_tree = (CommonTree)adaptor.create(string_literal1257);
					adaptor.addChild(root_0, string_literal1257_tree);
					}

					}
					break;
				case 18 :
					// CIL.g:1080:375: 'unsigned' 'int8'
					{
					string_literal1258=(Token)match(input,482,FOLLOW_482_in_nativeType24671); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1258_tree = (CommonTree)adaptor.create(string_literal1258);
					adaptor.addChild(root_0, string_literal1258_tree);
					}

					string_literal1259=(Token)match(input,391,FOLLOW_391_in_nativeType24673); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1259_tree = (CommonTree)adaptor.create(string_literal1259);
					adaptor.addChild(root_0, string_literal1259_tree);
					}

					}
					break;
				case 19 :
					// CIL.g:1080:395: 'unsigned' 'int16'
					{
					string_literal1260=(Token)match(input,482,FOLLOW_482_in_nativeType24677); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1260_tree = (CommonTree)adaptor.create(string_literal1260);
					adaptor.addChild(root_0, string_literal1260_tree);
					}

					string_literal1261=(Token)match(input,388,FOLLOW_388_in_nativeType24679); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1261_tree = (CommonTree)adaptor.create(string_literal1261);
					adaptor.addChild(root_0, string_literal1261_tree);
					}

					}
					break;
				case 20 :
					// CIL.g:1080:416: 'unsigned' 'int32'
					{
					string_literal1262=(Token)match(input,482,FOLLOW_482_in_nativeType24683); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1262_tree = (CommonTree)adaptor.create(string_literal1262);
					adaptor.addChild(root_0, string_literal1262_tree);
					}

					string_literal1263=(Token)match(input,389,FOLLOW_389_in_nativeType24685); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1263_tree = (CommonTree)adaptor.create(string_literal1263);
					adaptor.addChild(root_0, string_literal1263_tree);
					}

					}
					break;
				case 21 :
					// CIL.g:1080:437: 'unsigned' 'int64'
					{
					string_literal1264=(Token)match(input,482,FOLLOW_482_in_nativeType24689); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1264_tree = (CommonTree)adaptor.create(string_literal1264);
					adaptor.addChild(root_0, string_literal1264_tree);
					}

					string_literal1265=(Token)match(input,390,FOLLOW_390_in_nativeType24691); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1265_tree = (CommonTree)adaptor.create(string_literal1265);
					adaptor.addChild(root_0, string_literal1265_tree);
					}

					}
					break;
				case 22 :
					// CIL.g:1080:458: 'uint8'
					{
					string_literal1266=(Token)match(input,478,FOLLOW_478_in_nativeType24695); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1266_tree = (CommonTree)adaptor.create(string_literal1266);
					adaptor.addChild(root_0, string_literal1266_tree);
					}

					}
					break;
				case 23 :
					// CIL.g:1080:468: 'uint16'
					{
					string_literal1267=(Token)match(input,475,FOLLOW_475_in_nativeType24699); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1267_tree = (CommonTree)adaptor.create(string_literal1267);
					adaptor.addChild(root_0, string_literal1267_tree);
					}

					}
					break;
				case 24 :
					// CIL.g:1080:479: 'uint32'
					{
					string_literal1268=(Token)match(input,476,FOLLOW_476_in_nativeType24703); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1268_tree = (CommonTree)adaptor.create(string_literal1268);
					adaptor.addChild(root_0, string_literal1268_tree);
					}

					}
					break;
				case 25 :
					// CIL.g:1080:490: 'uint64'
					{
					string_literal1269=(Token)match(input,477,FOLLOW_477_in_nativeType24707); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1269_tree = (CommonTree)adaptor.create(string_literal1269);
					adaptor.addChild(root_0, string_literal1269_tree);
					}

					}
					break;
				case 26 :
					// CIL.g:1080:501: 'decimal'
					{
					string_literal1270=(Token)match(input,346,FOLLOW_346_in_nativeType24711); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1270_tree = (CommonTree)adaptor.create(string_literal1270);
					adaptor.addChild(root_0, string_literal1270_tree);
					}

					}
					break;
				case 27 :
					// CIL.g:1080:513: 'date'
					{
					string_literal1271=(Token)match(input,345,FOLLOW_345_in_nativeType24715); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1271_tree = (CommonTree)adaptor.create(string_literal1271);
					adaptor.addChild(root_0, string_literal1271_tree);
					}

					}
					break;
				case 28 :
					// CIL.g:1080:522: 'bstr'
					{
					string_literal1272=(Token)match(input,BSTR,FOLLOW_BSTR_in_nativeType24719); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1272_tree = (CommonTree)adaptor.create(string_literal1272);
					adaptor.addChild(root_0, string_literal1272_tree);
					}

					}
					break;
				case 29 :
					// CIL.g:1080:531: 'lpstr'
					{
					string_literal1273=(Token)match(input,400,FOLLOW_400_in_nativeType24723); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1273_tree = (CommonTree)adaptor.create(string_literal1273);
					adaptor.addChild(root_0, string_literal1273_tree);
					}

					}
					break;
				case 30 :
					// CIL.g:1080:541: 'lpwstr'
					{
					string_literal1274=(Token)match(input,403,FOLLOW_403_in_nativeType24727); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1274_tree = (CommonTree)adaptor.create(string_literal1274);
					adaptor.addChild(root_0, string_literal1274_tree);
					}

					}
					break;
				case 31 :
					// CIL.g:1080:552: 'lptstr'
					{
					string_literal1275=(Token)match(input,402,FOLLOW_402_in_nativeType24731); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1275_tree = (CommonTree)adaptor.create(string_literal1275);
					adaptor.addChild(root_0, string_literal1275_tree);
					}

					}
					break;
				case 32 :
					// CIL.g:1080:563: 'objectref'
					{
					string_literal1276=(Token)match(input,424,FOLLOW_424_in_nativeType24735); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1276_tree = (CommonTree)adaptor.create(string_literal1276);
					adaptor.addChild(root_0, string_literal1276_tree);
					}

					}
					break;
				case 33 :
					// CIL.g:1080:577: 'iunknown' iidParamIndex
					{
					string_literal1277=(Token)match(input,394,FOLLOW_394_in_nativeType24739); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1277_tree = (CommonTree)adaptor.create(string_literal1277);
					adaptor.addChild(root_0, string_literal1277_tree);
					}

					pushFollow(FOLLOW_iidParamIndex_in_nativeType24742);
					iidParamIndex1278=iidParamIndex();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, iidParamIndex1278.getTree());

					}
					break;
				case 34 :
					// CIL.g:1080:605: 'idispatch' iidParamIndex
					{
					string_literal1279=(Token)match(input,378,FOLLOW_378_in_nativeType24746); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1279_tree = (CommonTree)adaptor.create(string_literal1279);
					adaptor.addChild(root_0, string_literal1279_tree);
					}

					pushFollow(FOLLOW_iidParamIndex_in_nativeType24748);
					iidParamIndex1280=iidParamIndex();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, iidParamIndex1280.getTree());

					}
					break;
				case 35 :
					// CIL.g:1080:633: 'struct'
					{
					string_literal1281=(Token)match(input,463,FOLLOW_463_in_nativeType24752); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1281_tree = (CommonTree)adaptor.create(string_literal1281);
					adaptor.addChild(root_0, string_literal1281_tree);
					}

					}
					break;
				case 36 :
					// CIL.g:1080:644: 'interface' iidParamIndex
					{
					string_literal1282=(Token)match(input,392,FOLLOW_392_in_nativeType24756); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1282_tree = (CommonTree)adaptor.create(string_literal1282);
					adaptor.addChild(root_0, string_literal1282_tree);
					}

					pushFollow(FOLLOW_iidParamIndex_in_nativeType24758);
					iidParamIndex1283=iidParamIndex();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, iidParamIndex1283.getTree());

					}
					break;
				case 37 :
					// CIL.g:1080:672: 'safearray' variantType
					{
					string_literal1284=(Token)match(input,450,FOLLOW_450_in_nativeType24762); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1284_tree = (CommonTree)adaptor.create(string_literal1284);
					adaptor.addChild(root_0, string_literal1284_tree);
					}

					pushFollow(FOLLOW_variantType_in_nativeType24764);
					variantType1285=variantType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variantType1285.getTree());

					}
					break;
				case 38 :
					// CIL.g:1080:698: 'safearray' variantType ',' compQstring
					{
					string_literal1286=(Token)match(input,450,FOLLOW_450_in_nativeType24768); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1286_tree = (CommonTree)adaptor.create(string_literal1286);
					adaptor.addChild(root_0, string_literal1286_tree);
					}

					pushFollow(FOLLOW_variantType_in_nativeType24770);
					variantType1287=variantType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variantType1287.getTree());

					char_literal1288=(Token)match(input,262,FOLLOW_262_in_nativeType24772); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1288_tree = (CommonTree)adaptor.create(char_literal1288);
					adaptor.addChild(root_0, char_literal1288_tree);
					}

					pushFollow(FOLLOW_compQstring_in_nativeType24774);
					compQstring1289=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1289.getTree());

					}
					break;
				case 39 :
					// CIL.g:1080:740: 'int'
					{
					string_literal1290=(Token)match(input,387,FOLLOW_387_in_nativeType24778); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1290_tree = (CommonTree)adaptor.create(string_literal1290);
					adaptor.addChild(root_0, string_literal1290_tree);
					}

					}
					break;
				case 40 :
					// CIL.g:1080:748: 'unsigned' 'int'
					{
					string_literal1291=(Token)match(input,482,FOLLOW_482_in_nativeType24782); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1291_tree = (CommonTree)adaptor.create(string_literal1291);
					adaptor.addChild(root_0, string_literal1291_tree);
					}

					string_literal1292=(Token)match(input,387,FOLLOW_387_in_nativeType24784); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1292_tree = (CommonTree)adaptor.create(string_literal1292);
					adaptor.addChild(root_0, string_literal1292_tree);
					}

					}
					break;
				case 41 :
					// CIL.g:1080:767: 'uint'
					{
					string_literal1293=(Token)match(input,474,FOLLOW_474_in_nativeType24788); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1293_tree = (CommonTree)adaptor.create(string_literal1293);
					adaptor.addChild(root_0, string_literal1293_tree);
					}

					}
					break;
				case 42 :
					// CIL.g:1080:776: 'nested' 'struct'
					{
					string_literal1294=(Token)match(input,411,FOLLOW_411_in_nativeType24792); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1294_tree = (CommonTree)adaptor.create(string_literal1294);
					adaptor.addChild(root_0, string_literal1294_tree);
					}

					string_literal1295=(Token)match(input,463,FOLLOW_463_in_nativeType24794); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1295_tree = (CommonTree)adaptor.create(string_literal1295);
					adaptor.addChild(root_0, string_literal1295_tree);
					}

					}
					break;
				case 43 :
					// CIL.g:1080:796: 'byvalstr'
					{
					string_literal1296=(Token)match(input,BYVALSTR,FOLLOW_BYVALSTR_in_nativeType24798); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1296_tree = (CommonTree)adaptor.create(string_literal1296);
					adaptor.addChild(root_0, string_literal1296_tree);
					}

					}
					break;
				case 44 :
					// CIL.g:1080:809: 'ansi' 'bstr'
					{
					string_literal1297=(Token)match(input,329,FOLLOW_329_in_nativeType24802); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1297_tree = (CommonTree)adaptor.create(string_literal1297);
					adaptor.addChild(root_0, string_literal1297_tree);
					}

					string_literal1298=(Token)match(input,BSTR,FOLLOW_BSTR_in_nativeType24804); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1298_tree = (CommonTree)adaptor.create(string_literal1298);
					adaptor.addChild(root_0, string_literal1298_tree);
					}

					}
					break;
				case 45 :
					// CIL.g:1080:825: 'tbstr'
					{
					string_literal1299=(Token)match(input,467,FOLLOW_467_in_nativeType24808); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1299_tree = (CommonTree)adaptor.create(string_literal1299);
					adaptor.addChild(root_0, string_literal1299_tree);
					}

					}
					break;
				case 46 :
					// CIL.g:1080:835: 'variant' 'bool'
					{
					string_literal1300=(Token)match(input,487,FOLLOW_487_in_nativeType24812); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1300_tree = (CommonTree)adaptor.create(string_literal1300);
					adaptor.addChild(root_0, string_literal1300_tree);
					}

					string_literal1301=(Token)match(input,340,FOLLOW_340_in_nativeType24814); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1301_tree = (CommonTree)adaptor.create(string_literal1301);
					adaptor.addChild(root_0, string_literal1301_tree);
					}

					}
					break;
				case 47 :
					// CIL.g:1080:854: 'method'
					{
					string_literal1302=(Token)match(input,407,FOLLOW_407_in_nativeType24818); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1302_tree = (CommonTree)adaptor.create(string_literal1302);
					adaptor.addChild(root_0, string_literal1302_tree);
					}

					}
					break;
				case 48 :
					// CIL.g:1080:865: 'as' 'any'
					{
					string_literal1303=(Token)match(input,332,FOLLOW_332_in_nativeType24822); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1303_tree = (CommonTree)adaptor.create(string_literal1303);
					adaptor.addChild(root_0, string_literal1303_tree);
					}

					string_literal1304=(Token)match(input,330,FOLLOW_330_in_nativeType24824); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1304_tree = (CommonTree)adaptor.create(string_literal1304);
					adaptor.addChild(root_0, string_literal1304_tree);
					}

					}
					break;
				case 49 :
					// CIL.g:1080:878: 'lpstruct'
					{
					string_literal1305=(Token)match(input,401,FOLLOW_401_in_nativeType24828); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1305_tree = (CommonTree)adaptor.create(string_literal1305);
					adaptor.addChild(root_0, string_literal1305_tree);
					}

					}
					break;
				case 50 :
					// CIL.g:1080:891: typedef_ts
					{
					pushFollow(FOLLOW_typedef_ts_in_nativeType24832);
					typedef_ts1306=typedef_ts();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_ts1306.getTree());

					}
					break;

			}

			// CIL.g:1080:903: ( '*' | '[' ']' | '[' int32 ']' | '[' int32 '+' int32 ']' | '[' '+' int32 ']' )*
			loop95:
			while (true) {
				int alt95=6;
				int LA95_0 = input.LA(1);
				if ( (LA95_0==260) ) {
					int LA95_2 = input.LA(2);
					if ( (synpred643_CIL()) ) {
						alt95=1;
					}

				}
				else if ( (LA95_0==323) ) {
					int LA95_3 = input.LA(2);
					if ( (synpred644_CIL()) ) {
						alt95=2;
					}
					else if ( (synpred645_CIL()) ) {
						alt95=3;
					}
					else if ( (synpred646_CIL()) ) {
						alt95=4;
					}
					else if ( (synpred647_CIL()) ) {
						alt95=5;
					}

				}

				switch (alt95) {
				case 1 :
					// CIL.g:1080:904: '*'
					{
					char_literal1307=(Token)match(input,260,FOLLOW_260_in_nativeType24836); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1307_tree = (CommonTree)adaptor.create(char_literal1307);
					adaptor.addChild(root_0, char_literal1307_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1080:910: '[' ']'
					{
					char_literal1308=(Token)match(input,323,FOLLOW_323_in_nativeType24840); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1308_tree = (CommonTree)adaptor.create(char_literal1308);
					adaptor.addChild(root_0, char_literal1308_tree);
					}

					char_literal1309=(Token)match(input,324,FOLLOW_324_in_nativeType24842); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1309_tree = (CommonTree)adaptor.create(char_literal1309);
					adaptor.addChild(root_0, char_literal1309_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1080:920: '[' int32 ']'
					{
					char_literal1310=(Token)match(input,323,FOLLOW_323_in_nativeType24846); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1310_tree = (CommonTree)adaptor.create(char_literal1310);
					adaptor.addChild(root_0, char_literal1310_tree);
					}

					pushFollow(FOLLOW_int32_in_nativeType24848);
					int321311=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321311.getTree());

					char_literal1312=(Token)match(input,324,FOLLOW_324_in_nativeType24850); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1312_tree = (CommonTree)adaptor.create(char_literal1312);
					adaptor.addChild(root_0, char_literal1312_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1080:936: '[' int32 '+' int32 ']'
					{
					char_literal1313=(Token)match(input,323,FOLLOW_323_in_nativeType24854); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1313_tree = (CommonTree)adaptor.create(char_literal1313);
					adaptor.addChild(root_0, char_literal1313_tree);
					}

					pushFollow(FOLLOW_int32_in_nativeType24856);
					int321314=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321314.getTree());

					char_literal1315=(Token)match(input,261,FOLLOW_261_in_nativeType24858); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1315_tree = (CommonTree)adaptor.create(char_literal1315);
					adaptor.addChild(root_0, char_literal1315_tree);
					}

					pushFollow(FOLLOW_int32_in_nativeType24860);
					int321316=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321316.getTree());

					char_literal1317=(Token)match(input,324,FOLLOW_324_in_nativeType24862); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1317_tree = (CommonTree)adaptor.create(char_literal1317);
					adaptor.addChild(root_0, char_literal1317_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1080:962: '[' '+' int32 ']'
					{
					char_literal1318=(Token)match(input,323,FOLLOW_323_in_nativeType24866); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1318_tree = (CommonTree)adaptor.create(char_literal1318);
					adaptor.addChild(root_0, char_literal1318_tree);
					}

					char_literal1319=(Token)match(input,261,FOLLOW_261_in_nativeType24868); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1319_tree = (CommonTree)adaptor.create(char_literal1319);
					adaptor.addChild(root_0, char_literal1319_tree);
					}

					pushFollow(FOLLOW_int32_in_nativeType24870);
					int321320=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321320.getTree());

					char_literal1321=(Token)match(input,324,FOLLOW_324_in_nativeType24872); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1321_tree = (CommonTree)adaptor.create(char_literal1321);
					adaptor.addChild(root_0, char_literal1321_tree);
					}

					}
					break;

				default :
					break loop95;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "nativeType"


	public static class iidParamIndex_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "iidParamIndex"
	// CIL.g:1083:1: iidParamIndex : (| '(' 'iidparam' '=' int32 ')' );
	public final CILParser.iidParamIndex_return iidParamIndex() throws RecognitionException {
		CILParser.iidParamIndex_return retval = new CILParser.iidParamIndex_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1322=null;
		Token string_literal1323=null;
		Token char_literal1324=null;
		Token char_literal1326=null;
		ParserRuleReturnScope int321325 =null;

		CommonTree char_literal1322_tree=null;
		CommonTree string_literal1323_tree=null;
		CommonTree char_literal1324_tree=null;
		CommonTree char_literal1326_tree=null;

		try {
			// CIL.g:1083:25: (| '(' 'iidparam' '=' int32 ')' )
			int alt96=2;
			int LA96_0 = input.LA(1);
			if ( (LA96_0==EOF||(LA96_0 >= 259 && LA96_0 <= 260)||LA96_0==323) ) {
				alt96=1;
			}
			else if ( (LA96_0==258) ) {
				alt96=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 96, 0, input);
				throw nvae;
			}

			switch (alt96) {
				case 1 :
					// CIL.g:1084:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:1084:27: '(' 'iidparam' '=' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1322=(Token)match(input,258,FOLLOW_258_in_iidParamIndex24971); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1322_tree = (CommonTree)adaptor.create(char_literal1322);
					adaptor.addChild(root_0, char_literal1322_tree);
					}

					string_literal1323=(Token)match(input,379,FOLLOW_379_in_iidParamIndex24973); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1323_tree = (CommonTree)adaptor.create(string_literal1323);
					adaptor.addChild(root_0, string_literal1323_tree);
					}

					char_literal1324=(Token)match(input,321,FOLLOW_321_in_iidParamIndex24975); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1324_tree = (CommonTree)adaptor.create(char_literal1324);
					adaptor.addChild(root_0, char_literal1324_tree);
					}

					pushFollow(FOLLOW_int32_in_iidParamIndex24977);
					int321325=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321325.getTree());

					char_literal1326=(Token)match(input,259,FOLLOW_259_in_iidParamIndex24979); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1326_tree = (CommonTree)adaptor.create(char_literal1326);
					adaptor.addChild(root_0, char_literal1326_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "iidParamIndex"


	public static class variantType_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variantType"
	// CIL.g:1087:1: variantType : (| 'null' | 'variant' | 'currency' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | '*' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'iunknown' | 'idispatch' | 'safearray' | 'int' | 'unsigned' 'int' | 'uint' | 'error' | 'hresult' | 'carray' | 'userdefined' | 'record' | 'filetime' | 'blob' | 'stream' | 'storage' | 'streamed_object' | 'stored_object' | 'blob_object' | 'cf' | 'clsid' ) ( '[' ']' | 'vector' | '&' )* ;
	public final CILParser.variantType_return variantType() throws RecognitionException {
		CILParser.variantType_return retval = new CILParser.variantType_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1327=null;
		Token string_literal1328=null;
		Token string_literal1329=null;
		Token string_literal1330=null;
		Token string_literal1331=null;
		Token string_literal1332=null;
		Token string_literal1333=null;
		Token string_literal1334=null;
		Token string_literal1335=null;
		Token string_literal1336=null;
		Token string_literal1337=null;
		Token string_literal1338=null;
		Token string_literal1339=null;
		Token string_literal1340=null;
		Token string_literal1341=null;
		Token string_literal1342=null;
		Token string_literal1343=null;
		Token string_literal1344=null;
		Token string_literal1345=null;
		Token string_literal1346=null;
		Token string_literal1347=null;
		Token string_literal1348=null;
		Token string_literal1349=null;
		Token char_literal1350=null;
		Token string_literal1351=null;
		Token string_literal1352=null;
		Token string_literal1353=null;
		Token string_literal1354=null;
		Token string_literal1355=null;
		Token string_literal1356=null;
		Token string_literal1357=null;
		Token string_literal1358=null;
		Token string_literal1359=null;
		Token string_literal1360=null;
		Token string_literal1361=null;
		Token string_literal1362=null;
		Token string_literal1363=null;
		Token string_literal1364=null;
		Token string_literal1365=null;
		Token string_literal1366=null;
		Token string_literal1367=null;
		Token string_literal1368=null;
		Token string_literal1369=null;
		Token string_literal1370=null;
		Token string_literal1371=null;
		Token string_literal1372=null;
		Token string_literal1373=null;
		Token string_literal1374=null;
		Token string_literal1375=null;
		Token string_literal1376=null;
		Token char_literal1377=null;
		Token char_literal1378=null;
		Token string_literal1379=null;
		Token char_literal1380=null;

		CommonTree string_literal1327_tree=null;
		CommonTree string_literal1328_tree=null;
		CommonTree string_literal1329_tree=null;
		CommonTree string_literal1330_tree=null;
		CommonTree string_literal1331_tree=null;
		CommonTree string_literal1332_tree=null;
		CommonTree string_literal1333_tree=null;
		CommonTree string_literal1334_tree=null;
		CommonTree string_literal1335_tree=null;
		CommonTree string_literal1336_tree=null;
		CommonTree string_literal1337_tree=null;
		CommonTree string_literal1338_tree=null;
		CommonTree string_literal1339_tree=null;
		CommonTree string_literal1340_tree=null;
		CommonTree string_literal1341_tree=null;
		CommonTree string_literal1342_tree=null;
		CommonTree string_literal1343_tree=null;
		CommonTree string_literal1344_tree=null;
		CommonTree string_literal1345_tree=null;
		CommonTree string_literal1346_tree=null;
		CommonTree string_literal1347_tree=null;
		CommonTree string_literal1348_tree=null;
		CommonTree string_literal1349_tree=null;
		CommonTree char_literal1350_tree=null;
		CommonTree string_literal1351_tree=null;
		CommonTree string_literal1352_tree=null;
		CommonTree string_literal1353_tree=null;
		CommonTree string_literal1354_tree=null;
		CommonTree string_literal1355_tree=null;
		CommonTree string_literal1356_tree=null;
		CommonTree string_literal1357_tree=null;
		CommonTree string_literal1358_tree=null;
		CommonTree string_literal1359_tree=null;
		CommonTree string_literal1360_tree=null;
		CommonTree string_literal1361_tree=null;
		CommonTree string_literal1362_tree=null;
		CommonTree string_literal1363_tree=null;
		CommonTree string_literal1364_tree=null;
		CommonTree string_literal1365_tree=null;
		CommonTree string_literal1366_tree=null;
		CommonTree string_literal1367_tree=null;
		CommonTree string_literal1368_tree=null;
		CommonTree string_literal1369_tree=null;
		CommonTree string_literal1370_tree=null;
		CommonTree string_literal1371_tree=null;
		CommonTree string_literal1372_tree=null;
		CommonTree string_literal1373_tree=null;
		CommonTree string_literal1374_tree=null;
		CommonTree string_literal1375_tree=null;
		CommonTree string_literal1376_tree=null;
		CommonTree char_literal1377_tree=null;
		CommonTree char_literal1378_tree=null;
		CommonTree string_literal1379_tree=null;
		CommonTree char_literal1380_tree=null;

		try {
			// CIL.g:1087:25: ( (| 'null' | 'variant' | 'currency' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | '*' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'iunknown' | 'idispatch' | 'safearray' | 'int' | 'unsigned' 'int' | 'uint' | 'error' | 'hresult' | 'carray' | 'userdefined' | 'record' | 'filetime' | 'blob' | 'stream' | 'storage' | 'streamed_object' | 'stored_object' | 'blob_object' | 'cf' | 'clsid' ) ( '[' ']' | 'vector' | '&' )* )
			// CIL.g:1087:27: (| 'null' | 'variant' | 'currency' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | '*' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'iunknown' | 'idispatch' | 'safearray' | 'int' | 'unsigned' 'int' | 'uint' | 'error' | 'hresult' | 'carray' | 'userdefined' | 'record' | 'filetime' | 'blob' | 'stream' | 'storage' | 'streamed_object' | 'stored_object' | 'blob_object' | 'cf' | 'clsid' ) ( '[' ']' | 'vector' | '&' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1087:27: (| 'null' | 'variant' | 'currency' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | '*' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'iunknown' | 'idispatch' | 'safearray' | 'int' | 'unsigned' 'int' | 'uint' | 'error' | 'hresult' | 'carray' | 'userdefined' | 'record' | 'filetime' | 'blob' | 'stream' | 'storage' | 'streamed_object' | 'stored_object' | 'blob_object' | 'cf' | 'clsid' )
			int alt97=46;
			switch ( input.LA(1) ) {
			case EOF:
			case 257:
			case 259:
			case 262:
			case 323:
			case 488:
				{
				alt97=1;
				}
				break;
			case 260:
				{
				int LA97_2 = input.LA(2);
				if ( (synpred649_CIL()) ) {
					alt97=1;
				}
				else if ( (synpred669_CIL()) ) {
					alt97=21;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 97, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 421:
				{
				alt97=2;
				}
				break;
			case 487:
				{
				alt97=3;
				}
				break;
			case 343:
				{
				alt97=4;
				}
				break;
			case 490:
				{
				alt97=5;
				}
				break;
			case 340:
				{
				alt97=6;
				}
				break;
			case 391:
				{
				alt97=7;
				}
				break;
			case 388:
				{
				alt97=8;
				}
				break;
			case 389:
				{
				alt97=9;
				}
				break;
			case 390:
				{
				alt97=10;
				}
				break;
			case 369:
				{
				alt97=11;
				}
				break;
			case 370:
				{
				alt97=12;
				}
				break;
			case 482:
				{
				switch ( input.LA(2) ) {
				case 391:
					{
					alt97=13;
					}
					break;
				case 388:
					{
					alt97=14;
					}
					break;
				case 389:
					{
					alt97=15;
					}
					break;
				case 390:
					{
					alt97=16;
					}
					break;
				case 387:
					{
					alt97=31;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 97, 14, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case 478:
				{
				alt97=17;
				}
				break;
			case 475:
				{
				alt97=18;
				}
				break;
			case 476:
				{
				alt97=19;
				}
				break;
			case 477:
				{
				alt97=20;
				}
				break;
			case 346:
				{
				alt97=22;
				}
				break;
			case 345:
				{
				alt97=23;
				}
				break;
			case BSTR:
				{
				alt97=24;
				}
				break;
			case 400:
				{
				alt97=25;
				}
				break;
			case 403:
				{
				alt97=26;
				}
				break;
			case 394:
				{
				alt97=27;
				}
				break;
			case 378:
				{
				alt97=28;
				}
				break;
			case 450:
				{
				alt97=29;
				}
				break;
			case 387:
				{
				alt97=30;
				}
				break;
			case 474:
				{
				alt97=32;
				}
				break;
			case 351:
				{
				alt97=33;
				}
				break;
			case 376:
				{
				alt97=34;
				}
				break;
			case CARRAY:
				{
				alt97=35;
				}
				break;
			case 483:
				{
				alt97=36;
				}
				break;
			case 441:
				{
				alt97=37;
				}
				break;
			case 362:
				{
				alt97=38;
				}
				break;
			case BLOB:
				{
				alt97=39;
				}
				break;
			case 459:
				{
				alt97=40;
				}
				break;
			case 457:
				{
				alt97=41;
				}
				break;
			case 460:
				{
				alt97=42;
				}
				break;
			case 458:
				{
				alt97=43;
				}
				break;
			case BLOB_OBJECT:
				{
				alt97=44;
				}
				break;
			case CF:
				{
				alt97=45;
				}
				break;
			case CLSID:
				{
				alt97=46;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 97, 0, input);
				throw nvae;
			}
			switch (alt97) {
				case 1 :
					// CIL.g:1087:40: 
					{
					}
					break;
				case 2 :
					// CIL.g:1087:42: 'null'
					{
					string_literal1327=(Token)match(input,421,FOLLOW_421_in_variantType25054); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1327_tree = (CommonTree)adaptor.create(string_literal1327);
					adaptor.addChild(root_0, string_literal1327_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1087:51: 'variant'
					{
					string_literal1328=(Token)match(input,487,FOLLOW_487_in_variantType25058); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1328_tree = (CommonTree)adaptor.create(string_literal1328);
					adaptor.addChild(root_0, string_literal1328_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1087:63: 'currency'
					{
					string_literal1329=(Token)match(input,343,FOLLOW_343_in_variantType25062); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1329_tree = (CommonTree)adaptor.create(string_literal1329);
					adaptor.addChild(root_0, string_literal1329_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1087:76: 'void'
					{
					string_literal1330=(Token)match(input,490,FOLLOW_490_in_variantType25066); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1330_tree = (CommonTree)adaptor.create(string_literal1330);
					adaptor.addChild(root_0, string_literal1330_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:1087:85: 'bool'
					{
					string_literal1331=(Token)match(input,340,FOLLOW_340_in_variantType25070); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1331_tree = (CommonTree)adaptor.create(string_literal1331);
					adaptor.addChild(root_0, string_literal1331_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:1087:94: 'int8'
					{
					string_literal1332=(Token)match(input,391,FOLLOW_391_in_variantType25074); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1332_tree = (CommonTree)adaptor.create(string_literal1332);
					adaptor.addChild(root_0, string_literal1332_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:1087:103: 'int16'
					{
					string_literal1333=(Token)match(input,388,FOLLOW_388_in_variantType25078); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1333_tree = (CommonTree)adaptor.create(string_literal1333);
					adaptor.addChild(root_0, string_literal1333_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:1087:113: 'int32'
					{
					string_literal1334=(Token)match(input,389,FOLLOW_389_in_variantType25082); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1334_tree = (CommonTree)adaptor.create(string_literal1334);
					adaptor.addChild(root_0, string_literal1334_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:1087:123: 'int64'
					{
					string_literal1335=(Token)match(input,390,FOLLOW_390_in_variantType25086); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1335_tree = (CommonTree)adaptor.create(string_literal1335);
					adaptor.addChild(root_0, string_literal1335_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:1087:133: 'float32'
					{
					string_literal1336=(Token)match(input,369,FOLLOW_369_in_variantType25090); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1336_tree = (CommonTree)adaptor.create(string_literal1336);
					adaptor.addChild(root_0, string_literal1336_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:1087:145: 'float64'
					{
					string_literal1337=(Token)match(input,370,FOLLOW_370_in_variantType25094); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1337_tree = (CommonTree)adaptor.create(string_literal1337);
					adaptor.addChild(root_0, string_literal1337_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:1087:157: 'unsigned' 'int8'
					{
					string_literal1338=(Token)match(input,482,FOLLOW_482_in_variantType25098); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1338_tree = (CommonTree)adaptor.create(string_literal1338);
					adaptor.addChild(root_0, string_literal1338_tree);
					}

					string_literal1339=(Token)match(input,391,FOLLOW_391_in_variantType25100); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1339_tree = (CommonTree)adaptor.create(string_literal1339);
					adaptor.addChild(root_0, string_literal1339_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:1087:177: 'unsigned' 'int16'
					{
					string_literal1340=(Token)match(input,482,FOLLOW_482_in_variantType25104); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1340_tree = (CommonTree)adaptor.create(string_literal1340);
					adaptor.addChild(root_0, string_literal1340_tree);
					}

					string_literal1341=(Token)match(input,388,FOLLOW_388_in_variantType25106); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1341_tree = (CommonTree)adaptor.create(string_literal1341);
					adaptor.addChild(root_0, string_literal1341_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:1087:198: 'unsigned' 'int32'
					{
					string_literal1342=(Token)match(input,482,FOLLOW_482_in_variantType25110); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1342_tree = (CommonTree)adaptor.create(string_literal1342);
					adaptor.addChild(root_0, string_literal1342_tree);
					}

					string_literal1343=(Token)match(input,389,FOLLOW_389_in_variantType25112); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1343_tree = (CommonTree)adaptor.create(string_literal1343);
					adaptor.addChild(root_0, string_literal1343_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:1087:219: 'unsigned' 'int64'
					{
					string_literal1344=(Token)match(input,482,FOLLOW_482_in_variantType25116); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1344_tree = (CommonTree)adaptor.create(string_literal1344);
					adaptor.addChild(root_0, string_literal1344_tree);
					}

					string_literal1345=(Token)match(input,390,FOLLOW_390_in_variantType25118); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1345_tree = (CommonTree)adaptor.create(string_literal1345);
					adaptor.addChild(root_0, string_literal1345_tree);
					}

					}
					break;
				case 17 :
					// CIL.g:1087:240: 'uint8'
					{
					string_literal1346=(Token)match(input,478,FOLLOW_478_in_variantType25122); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1346_tree = (CommonTree)adaptor.create(string_literal1346);
					adaptor.addChild(root_0, string_literal1346_tree);
					}

					}
					break;
				case 18 :
					// CIL.g:1087:250: 'uint16'
					{
					string_literal1347=(Token)match(input,475,FOLLOW_475_in_variantType25126); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1347_tree = (CommonTree)adaptor.create(string_literal1347);
					adaptor.addChild(root_0, string_literal1347_tree);
					}

					}
					break;
				case 19 :
					// CIL.g:1087:261: 'uint32'
					{
					string_literal1348=(Token)match(input,476,FOLLOW_476_in_variantType25130); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1348_tree = (CommonTree)adaptor.create(string_literal1348);
					adaptor.addChild(root_0, string_literal1348_tree);
					}

					}
					break;
				case 20 :
					// CIL.g:1087:272: 'uint64'
					{
					string_literal1349=(Token)match(input,477,FOLLOW_477_in_variantType25134); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1349_tree = (CommonTree)adaptor.create(string_literal1349);
					adaptor.addChild(root_0, string_literal1349_tree);
					}

					}
					break;
				case 21 :
					// CIL.g:1087:283: '*'
					{
					char_literal1350=(Token)match(input,260,FOLLOW_260_in_variantType25138); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1350_tree = (CommonTree)adaptor.create(char_literal1350);
					adaptor.addChild(root_0, char_literal1350_tree);
					}

					}
					break;
				case 22 :
					// CIL.g:1087:289: 'decimal'
					{
					string_literal1351=(Token)match(input,346,FOLLOW_346_in_variantType25142); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1351_tree = (CommonTree)adaptor.create(string_literal1351);
					adaptor.addChild(root_0, string_literal1351_tree);
					}

					}
					break;
				case 23 :
					// CIL.g:1087:301: 'date'
					{
					string_literal1352=(Token)match(input,345,FOLLOW_345_in_variantType25146); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1352_tree = (CommonTree)adaptor.create(string_literal1352);
					adaptor.addChild(root_0, string_literal1352_tree);
					}

					}
					break;
				case 24 :
					// CIL.g:1087:310: 'bstr'
					{
					string_literal1353=(Token)match(input,BSTR,FOLLOW_BSTR_in_variantType25150); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1353_tree = (CommonTree)adaptor.create(string_literal1353);
					adaptor.addChild(root_0, string_literal1353_tree);
					}

					}
					break;
				case 25 :
					// CIL.g:1087:319: 'lpstr'
					{
					string_literal1354=(Token)match(input,400,FOLLOW_400_in_variantType25154); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1354_tree = (CommonTree)adaptor.create(string_literal1354);
					adaptor.addChild(root_0, string_literal1354_tree);
					}

					}
					break;
				case 26 :
					// CIL.g:1087:329: 'lpwstr'
					{
					string_literal1355=(Token)match(input,403,FOLLOW_403_in_variantType25158); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1355_tree = (CommonTree)adaptor.create(string_literal1355);
					adaptor.addChild(root_0, string_literal1355_tree);
					}

					}
					break;
				case 27 :
					// CIL.g:1087:340: 'iunknown'
					{
					string_literal1356=(Token)match(input,394,FOLLOW_394_in_variantType25162); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1356_tree = (CommonTree)adaptor.create(string_literal1356);
					adaptor.addChild(root_0, string_literal1356_tree);
					}

					}
					break;
				case 28 :
					// CIL.g:1087:353: 'idispatch'
					{
					string_literal1357=(Token)match(input,378,FOLLOW_378_in_variantType25166); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1357_tree = (CommonTree)adaptor.create(string_literal1357);
					adaptor.addChild(root_0, string_literal1357_tree);
					}

					}
					break;
				case 29 :
					// CIL.g:1087:367: 'safearray'
					{
					string_literal1358=(Token)match(input,450,FOLLOW_450_in_variantType25170); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1358_tree = (CommonTree)adaptor.create(string_literal1358);
					adaptor.addChild(root_0, string_literal1358_tree);
					}

					}
					break;
				case 30 :
					// CIL.g:1087:381: 'int'
					{
					string_literal1359=(Token)match(input,387,FOLLOW_387_in_variantType25174); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1359_tree = (CommonTree)adaptor.create(string_literal1359);
					adaptor.addChild(root_0, string_literal1359_tree);
					}

					}
					break;
				case 31 :
					// CIL.g:1087:389: 'unsigned' 'int'
					{
					string_literal1360=(Token)match(input,482,FOLLOW_482_in_variantType25178); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1360_tree = (CommonTree)adaptor.create(string_literal1360);
					adaptor.addChild(root_0, string_literal1360_tree);
					}

					string_literal1361=(Token)match(input,387,FOLLOW_387_in_variantType25180); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1361_tree = (CommonTree)adaptor.create(string_literal1361);
					adaptor.addChild(root_0, string_literal1361_tree);
					}

					}
					break;
				case 32 :
					// CIL.g:1087:408: 'uint'
					{
					string_literal1362=(Token)match(input,474,FOLLOW_474_in_variantType25184); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1362_tree = (CommonTree)adaptor.create(string_literal1362);
					adaptor.addChild(root_0, string_literal1362_tree);
					}

					}
					break;
				case 33 :
					// CIL.g:1087:417: 'error'
					{
					string_literal1363=(Token)match(input,351,FOLLOW_351_in_variantType25188); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1363_tree = (CommonTree)adaptor.create(string_literal1363);
					adaptor.addChild(root_0, string_literal1363_tree);
					}

					}
					break;
				case 34 :
					// CIL.g:1087:427: 'hresult'
					{
					string_literal1364=(Token)match(input,376,FOLLOW_376_in_variantType25192); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1364_tree = (CommonTree)adaptor.create(string_literal1364);
					adaptor.addChild(root_0, string_literal1364_tree);
					}

					}
					break;
				case 35 :
					// CIL.g:1087:439: 'carray'
					{
					string_literal1365=(Token)match(input,CARRAY,FOLLOW_CARRAY_in_variantType25196); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1365_tree = (CommonTree)adaptor.create(string_literal1365);
					adaptor.addChild(root_0, string_literal1365_tree);
					}

					}
					break;
				case 36 :
					// CIL.g:1087:450: 'userdefined'
					{
					string_literal1366=(Token)match(input,483,FOLLOW_483_in_variantType25200); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1366_tree = (CommonTree)adaptor.create(string_literal1366);
					adaptor.addChild(root_0, string_literal1366_tree);
					}

					}
					break;
				case 37 :
					// CIL.g:1087:466: 'record'
					{
					string_literal1367=(Token)match(input,441,FOLLOW_441_in_variantType25204); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1367_tree = (CommonTree)adaptor.create(string_literal1367);
					adaptor.addChild(root_0, string_literal1367_tree);
					}

					}
					break;
				case 38 :
					// CIL.g:1087:477: 'filetime'
					{
					string_literal1368=(Token)match(input,362,FOLLOW_362_in_variantType25208); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1368_tree = (CommonTree)adaptor.create(string_literal1368);
					adaptor.addChild(root_0, string_literal1368_tree);
					}

					}
					break;
				case 39 :
					// CIL.g:1087:490: 'blob'
					{
					string_literal1369=(Token)match(input,BLOB,FOLLOW_BLOB_in_variantType25212); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1369_tree = (CommonTree)adaptor.create(string_literal1369);
					adaptor.addChild(root_0, string_literal1369_tree);
					}

					}
					break;
				case 40 :
					// CIL.g:1087:499: 'stream'
					{
					string_literal1370=(Token)match(input,459,FOLLOW_459_in_variantType25216); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1370_tree = (CommonTree)adaptor.create(string_literal1370);
					adaptor.addChild(root_0, string_literal1370_tree);
					}

					}
					break;
				case 41 :
					// CIL.g:1087:510: 'storage'
					{
					string_literal1371=(Token)match(input,457,FOLLOW_457_in_variantType25220); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1371_tree = (CommonTree)adaptor.create(string_literal1371);
					adaptor.addChild(root_0, string_literal1371_tree);
					}

					}
					break;
				case 42 :
					// CIL.g:1087:522: 'streamed_object'
					{
					string_literal1372=(Token)match(input,460,FOLLOW_460_in_variantType25224); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1372_tree = (CommonTree)adaptor.create(string_literal1372);
					adaptor.addChild(root_0, string_literal1372_tree);
					}

					}
					break;
				case 43 :
					// CIL.g:1087:542: 'stored_object'
					{
					string_literal1373=(Token)match(input,458,FOLLOW_458_in_variantType25228); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1373_tree = (CommonTree)adaptor.create(string_literal1373);
					adaptor.addChild(root_0, string_literal1373_tree);
					}

					}
					break;
				case 44 :
					// CIL.g:1087:560: 'blob_object'
					{
					string_literal1374=(Token)match(input,BLOB_OBJECT,FOLLOW_BLOB_OBJECT_in_variantType25232); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1374_tree = (CommonTree)adaptor.create(string_literal1374);
					adaptor.addChild(root_0, string_literal1374_tree);
					}

					}
					break;
				case 45 :
					// CIL.g:1087:576: 'cf'
					{
					string_literal1375=(Token)match(input,CF,FOLLOW_CF_in_variantType25236); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1375_tree = (CommonTree)adaptor.create(string_literal1375);
					adaptor.addChild(root_0, string_literal1375_tree);
					}

					}
					break;
				case 46 :
					// CIL.g:1087:583: 'clsid'
					{
					string_literal1376=(Token)match(input,CLSID,FOLLOW_CLSID_in_variantType25240); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1376_tree = (CommonTree)adaptor.create(string_literal1376);
					adaptor.addChild(root_0, string_literal1376_tree);
					}

					}
					break;

			}

			// CIL.g:1087:593: ( '[' ']' | 'vector' | '&' )*
			loop98:
			while (true) {
				int alt98=4;
				switch ( input.LA(1) ) {
				case 323:
					{
					int LA98_2 = input.LA(2);
					if ( (LA98_2==324) ) {
						int LA98_5 = input.LA(3);
						if ( (synpred694_CIL()) ) {
							alt98=1;
						}

					}

					}
					break;
				case 488:
					{
					alt98=2;
					}
					break;
				case 257:
					{
					alt98=3;
					}
					break;
				}
				switch (alt98) {
				case 1 :
					// CIL.g:1087:594: '[' ']'
					{
					char_literal1377=(Token)match(input,323,FOLLOW_323_in_variantType25245); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1377_tree = (CommonTree)adaptor.create(char_literal1377);
					adaptor.addChild(root_0, char_literal1377_tree);
					}

					char_literal1378=(Token)match(input,324,FOLLOW_324_in_variantType25247); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1378_tree = (CommonTree)adaptor.create(char_literal1378);
					adaptor.addChild(root_0, char_literal1378_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1087:604: 'vector'
					{
					string_literal1379=(Token)match(input,488,FOLLOW_488_in_variantType25251); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1379_tree = (CommonTree)adaptor.create(string_literal1379);
					adaptor.addChild(root_0, string_literal1379_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1087:615: '&'
					{
					char_literal1380=(Token)match(input,257,FOLLOW_257_in_variantType25255); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1380_tree = (CommonTree)adaptor.create(char_literal1380);
					adaptor.addChild(root_0, char_literal1380_tree);
					}

					}
					break;

				default :
					break loop98;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "variantType"


	public static class type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type"
	// CIL.g:1090:1: type : ( 'class' className | 'object' | 'value' 'class' className | 'valuetype' className | methodSpec callConv type '*' '(' sigArgs0 ')' | '!' '!' int32 | '!' int32 | '!' '!' dottedName | '!' dottedName | 'typedref' | 'void' | 'native' 'int' | 'native' 'unsigned' 'int' | 'native' 'uint' | 'native' 'float' | simpleType | '...' type ) ( '[' ']' | '[' bounds1 ']' | '&' | '*' | 'pinned' | 'modreq' '(' typeSpec ')' | 'modopt' '(' typeSpec ')' | '<' tyArgs1 '>' )* ;
	public final CILParser.type_return type() throws RecognitionException {
		CILParser.type_return retval = new CILParser.type_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1381=null;
		Token string_literal1383=null;
		Token string_literal1384=null;
		Token string_literal1385=null;
		Token string_literal1387=null;
		Token char_literal1392=null;
		Token char_literal1393=null;
		Token char_literal1395=null;
		Token char_literal1396=null;
		Token char_literal1397=null;
		Token char_literal1399=null;
		Token char_literal1401=null;
		Token char_literal1402=null;
		Token char_literal1404=null;
		Token string_literal1406=null;
		Token string_literal1407=null;
		Token string_literal1408=null;
		Token string_literal1409=null;
		Token string_literal1410=null;
		Token string_literal1411=null;
		Token string_literal1412=null;
		Token string_literal1413=null;
		Token string_literal1414=null;
		Token string_literal1415=null;
		Token string_literal1416=null;
		Token string_literal1418=null;
		Token char_literal1420=null;
		Token char_literal1421=null;
		Token char_literal1422=null;
		Token char_literal1424=null;
		Token char_literal1425=null;
		Token char_literal1426=null;
		Token string_literal1427=null;
		Token string_literal1428=null;
		Token char_literal1429=null;
		Token char_literal1431=null;
		Token string_literal1432=null;
		Token char_literal1433=null;
		Token char_literal1435=null;
		Token char_literal1436=null;
		Token char_literal1438=null;
		ParserRuleReturnScope className1382 =null;
		ParserRuleReturnScope className1386 =null;
		ParserRuleReturnScope className1388 =null;
		ParserRuleReturnScope methodSpec1389 =null;
		ParserRuleReturnScope callConv1390 =null;
		ParserRuleReturnScope type1391 =null;
		ParserRuleReturnScope sigArgs01394 =null;
		ParserRuleReturnScope int321398 =null;
		ParserRuleReturnScope int321400 =null;
		ParserRuleReturnScope dottedName1403 =null;
		ParserRuleReturnScope dottedName1405 =null;
		ParserRuleReturnScope simpleType1417 =null;
		ParserRuleReturnScope type1419 =null;
		ParserRuleReturnScope bounds11423 =null;
		ParserRuleReturnScope typeSpec1430 =null;
		ParserRuleReturnScope typeSpec1434 =null;
		ParserRuleReturnScope tyArgs11437 =null;

		CommonTree string_literal1381_tree=null;
		CommonTree string_literal1383_tree=null;
		CommonTree string_literal1384_tree=null;
		CommonTree string_literal1385_tree=null;
		CommonTree string_literal1387_tree=null;
		CommonTree char_literal1392_tree=null;
		CommonTree char_literal1393_tree=null;
		CommonTree char_literal1395_tree=null;
		CommonTree char_literal1396_tree=null;
		CommonTree char_literal1397_tree=null;
		CommonTree char_literal1399_tree=null;
		CommonTree char_literal1401_tree=null;
		CommonTree char_literal1402_tree=null;
		CommonTree char_literal1404_tree=null;
		CommonTree string_literal1406_tree=null;
		CommonTree string_literal1407_tree=null;
		CommonTree string_literal1408_tree=null;
		CommonTree string_literal1409_tree=null;
		CommonTree string_literal1410_tree=null;
		CommonTree string_literal1411_tree=null;
		CommonTree string_literal1412_tree=null;
		CommonTree string_literal1413_tree=null;
		CommonTree string_literal1414_tree=null;
		CommonTree string_literal1415_tree=null;
		CommonTree string_literal1416_tree=null;
		CommonTree string_literal1418_tree=null;
		CommonTree char_literal1420_tree=null;
		CommonTree char_literal1421_tree=null;
		CommonTree char_literal1422_tree=null;
		CommonTree char_literal1424_tree=null;
		CommonTree char_literal1425_tree=null;
		CommonTree char_literal1426_tree=null;
		CommonTree string_literal1427_tree=null;
		CommonTree string_literal1428_tree=null;
		CommonTree char_literal1429_tree=null;
		CommonTree char_literal1431_tree=null;
		CommonTree string_literal1432_tree=null;
		CommonTree char_literal1433_tree=null;
		CommonTree char_literal1435_tree=null;
		CommonTree char_literal1436_tree=null;
		CommonTree char_literal1438_tree=null;

		try {
			// CIL.g:1090:25: ( ( 'class' className | 'object' | 'value' 'class' className | 'valuetype' className | methodSpec callConv type '*' '(' sigArgs0 ')' | '!' '!' int32 | '!' int32 | '!' '!' dottedName | '!' dottedName | 'typedref' | 'void' | 'native' 'int' | 'native' 'unsigned' 'int' | 'native' 'uint' | 'native' 'float' | simpleType | '...' type ) ( '[' ']' | '[' bounds1 ']' | '&' | '*' | 'pinned' | 'modreq' '(' typeSpec ')' | 'modopt' '(' typeSpec ')' | '<' tyArgs1 '>' )* )
			// CIL.g:1090:27: ( 'class' className | 'object' | 'value' 'class' className | 'valuetype' className | methodSpec callConv type '*' '(' sigArgs0 ')' | '!' '!' int32 | '!' int32 | '!' '!' dottedName | '!' dottedName | 'typedref' | 'void' | 'native' 'int' | 'native' 'unsigned' 'int' | 'native' 'uint' | 'native' 'float' | simpleType | '...' type ) ( '[' ']' | '[' bounds1 ']' | '&' | '*' | 'pinned' | 'modreq' '(' typeSpec ')' | 'modopt' '(' typeSpec ')' | '<' tyArgs1 '>' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1090:27: ( 'class' className | 'object' | 'value' 'class' className | 'valuetype' className | methodSpec callConv type '*' '(' sigArgs0 ')' | '!' '!' int32 | '!' int32 | '!' '!' dottedName | '!' dottedName | 'typedref' | 'void' | 'native' 'int' | 'native' 'unsigned' 'int' | 'native' 'uint' | 'native' 'float' | simpleType | '...' type )
			int alt99=17;
			switch ( input.LA(1) ) {
			case CLASS:
				{
				alt99=1;
				}
				break;
			case 423:
				{
				alt99=2;
				}
				break;
			case 484:
				{
				alt99=3;
				}
				break;
			case 485:
				{
				alt99=4;
				}
				break;
			case 407:
				{
				alt99=5;
				}
				break;
			case 256:
				{
				switch ( input.LA(2) ) {
				case 256:
					{
					int LA99_12 = input.LA(3);
					if ( (LA99_12==INT32) ) {
						alt99=6;
					}
					else if ( (LA99_12==DOTTEDNAME||LA99_12==ID||LA99_12==SQSTRING) ) {
						alt99=8;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 99, 12, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case INT32:
					{
					alt99=7;
					}
					break;
				case DOTTEDNAME:
				case ID:
				case SQSTRING:
					{
					alt99=9;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 99, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case 473:
				{
				alt99=10;
				}
				break;
			case 490:
				{
				alt99=11;
				}
				break;
			case 410:
				{
				switch ( input.LA(2) ) {
				case 387:
					{
					alt99=12;
					}
					break;
				case 482:
					{
					alt99=13;
					}
					break;
				case 474:
					{
					alt99=14;
					}
					break;
				case 368:
					{
					alt99=15;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 99, 9, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case CHAR:
			case 310:
			case 340:
			case 369:
			case 370:
			case 388:
			case 389:
			case 390:
			case 391:
			case 462:
			case 475:
			case 476:
			case 477:
			case 478:
			case 482:
				{
				alt99=16;
				}
				break;
			case 264:
				{
				alt99=17;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 99, 0, input);
				throw nvae;
			}
			switch (alt99) {
				case 1 :
					// CIL.g:1090:28: 'class' className
					{
					string_literal1381=(Token)match(input,CLASS,FOLLOW_CLASS_in_type25345); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1381_tree = (CommonTree)adaptor.create(string_literal1381);
					adaptor.addChild(root_0, string_literal1381_tree);
					}

					pushFollow(FOLLOW_className_in_type25347);
					className1382=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1382.getTree());

					}
					break;
				case 2 :
					// CIL.g:1090:48: 'object'
					{
					string_literal1383=(Token)match(input,423,FOLLOW_423_in_type25351); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1383_tree = (CommonTree)adaptor.create(string_literal1383);
					adaptor.addChild(root_0, string_literal1383_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1090:59: 'value' 'class' className
					{
					string_literal1384=(Token)match(input,484,FOLLOW_484_in_type25355); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1384_tree = (CommonTree)adaptor.create(string_literal1384);
					adaptor.addChild(root_0, string_literal1384_tree);
					}

					string_literal1385=(Token)match(input,CLASS,FOLLOW_CLASS_in_type25357); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1385_tree = (CommonTree)adaptor.create(string_literal1385);
					adaptor.addChild(root_0, string_literal1385_tree);
					}

					pushFollow(FOLLOW_className_in_type25359);
					className1386=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1386.getTree());

					}
					break;
				case 4 :
					// CIL.g:1090:87: 'valuetype' className
					{
					string_literal1387=(Token)match(input,485,FOLLOW_485_in_type25363); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1387_tree = (CommonTree)adaptor.create(string_literal1387);
					adaptor.addChild(root_0, string_literal1387_tree);
					}

					pushFollow(FOLLOW_className_in_type25365);
					className1388=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1388.getTree());

					}
					break;
				case 5 :
					// CIL.g:1090:111: methodSpec callConv type '*' '(' sigArgs0 ')'
					{
					pushFollow(FOLLOW_methodSpec_in_type25369);
					methodSpec1389=methodSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, methodSpec1389.getTree());

					pushFollow(FOLLOW_callConv_in_type25371);
					callConv1390=callConv();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, callConv1390.getTree());

					pushFollow(FOLLOW_type_in_type25373);
					type1391=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1391.getTree());

					char_literal1392=(Token)match(input,260,FOLLOW_260_in_type25375); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1392_tree = (CommonTree)adaptor.create(char_literal1392);
					adaptor.addChild(root_0, char_literal1392_tree);
					}

					char_literal1393=(Token)match(input,258,FOLLOW_258_in_type25377); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1393_tree = (CommonTree)adaptor.create(char_literal1393);
					adaptor.addChild(root_0, char_literal1393_tree);
					}

					pushFollow(FOLLOW_sigArgs0_in_type25379);
					sigArgs01394=sigArgs0();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sigArgs01394.getTree());

					char_literal1395=(Token)match(input,259,FOLLOW_259_in_type25381); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1395_tree = (CommonTree)adaptor.create(char_literal1395);
					adaptor.addChild(root_0, char_literal1395_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:1090:159: '!' '!' int32
					{
					char_literal1396=(Token)match(input,256,FOLLOW_256_in_type25385); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1396_tree = (CommonTree)adaptor.create(char_literal1396);
					adaptor.addChild(root_0, char_literal1396_tree);
					}

					char_literal1397=(Token)match(input,256,FOLLOW_256_in_type25387); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1397_tree = (CommonTree)adaptor.create(char_literal1397);
					adaptor.addChild(root_0, char_literal1397_tree);
					}

					pushFollow(FOLLOW_int32_in_type25389);
					int321398=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321398.getTree());

					}
					break;
				case 7 :
					// CIL.g:1090:175: '!' int32
					{
					char_literal1399=(Token)match(input,256,FOLLOW_256_in_type25393); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1399_tree = (CommonTree)adaptor.create(char_literal1399);
					adaptor.addChild(root_0, char_literal1399_tree);
					}

					pushFollow(FOLLOW_int32_in_type25395);
					int321400=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321400.getTree());

					}
					break;
				case 8 :
					// CIL.g:1090:187: '!' '!' dottedName
					{
					char_literal1401=(Token)match(input,256,FOLLOW_256_in_type25399); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1401_tree = (CommonTree)adaptor.create(char_literal1401);
					adaptor.addChild(root_0, char_literal1401_tree);
					}

					char_literal1402=(Token)match(input,256,FOLLOW_256_in_type25401); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1402_tree = (CommonTree)adaptor.create(char_literal1402);
					adaptor.addChild(root_0, char_literal1402_tree);
					}

					pushFollow(FOLLOW_dottedName_in_type25403);
					dottedName1403=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1403.getTree());

					}
					break;
				case 9 :
					// CIL.g:1090:208: '!' dottedName
					{
					char_literal1404=(Token)match(input,256,FOLLOW_256_in_type25407); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1404_tree = (CommonTree)adaptor.create(char_literal1404);
					adaptor.addChild(root_0, char_literal1404_tree);
					}

					pushFollow(FOLLOW_dottedName_in_type25409);
					dottedName1405=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1405.getTree());

					}
					break;
				case 10 :
					// CIL.g:1090:225: 'typedref'
					{
					string_literal1406=(Token)match(input,473,FOLLOW_473_in_type25413); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1406_tree = (CommonTree)adaptor.create(string_literal1406);
					adaptor.addChild(root_0, string_literal1406_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:1090:238: 'void'
					{
					string_literal1407=(Token)match(input,490,FOLLOW_490_in_type25417); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1407_tree = (CommonTree)adaptor.create(string_literal1407);
					adaptor.addChild(root_0, string_literal1407_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:1090:247: 'native' 'int'
					{
					string_literal1408=(Token)match(input,410,FOLLOW_410_in_type25421); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1408_tree = (CommonTree)adaptor.create(string_literal1408);
					adaptor.addChild(root_0, string_literal1408_tree);
					}

					string_literal1409=(Token)match(input,387,FOLLOW_387_in_type25423); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1409_tree = (CommonTree)adaptor.create(string_literal1409);
					adaptor.addChild(root_0, string_literal1409_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:1090:264: 'native' 'unsigned' 'int'
					{
					string_literal1410=(Token)match(input,410,FOLLOW_410_in_type25427); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1410_tree = (CommonTree)adaptor.create(string_literal1410);
					adaptor.addChild(root_0, string_literal1410_tree);
					}

					string_literal1411=(Token)match(input,482,FOLLOW_482_in_type25429); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1411_tree = (CommonTree)adaptor.create(string_literal1411);
					adaptor.addChild(root_0, string_literal1411_tree);
					}

					string_literal1412=(Token)match(input,387,FOLLOW_387_in_type25431); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1412_tree = (CommonTree)adaptor.create(string_literal1412);
					adaptor.addChild(root_0, string_literal1412_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:1090:292: 'native' 'uint'
					{
					string_literal1413=(Token)match(input,410,FOLLOW_410_in_type25435); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1413_tree = (CommonTree)adaptor.create(string_literal1413);
					adaptor.addChild(root_0, string_literal1413_tree);
					}

					string_literal1414=(Token)match(input,474,FOLLOW_474_in_type25437); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1414_tree = (CommonTree)adaptor.create(string_literal1414);
					adaptor.addChild(root_0, string_literal1414_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:1090:310: 'native' 'float'
					{
					string_literal1415=(Token)match(input,410,FOLLOW_410_in_type25441); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1415_tree = (CommonTree)adaptor.create(string_literal1415);
					adaptor.addChild(root_0, string_literal1415_tree);
					}

					string_literal1416=(Token)match(input,368,FOLLOW_368_in_type25443); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1416_tree = (CommonTree)adaptor.create(string_literal1416);
					adaptor.addChild(root_0, string_literal1416_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:1090:329: simpleType
					{
					pushFollow(FOLLOW_simpleType_in_type25447);
					simpleType1417=simpleType();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, simpleType1417.getTree());

					}
					break;
				case 17 :
					// CIL.g:1090:342: '...' type
					{
					string_literal1418=(Token)match(input,264,FOLLOW_264_in_type25451); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1418_tree = (CommonTree)adaptor.create(string_literal1418);
					adaptor.addChild(root_0, string_literal1418_tree);
					}

					pushFollow(FOLLOW_type_in_type25453);
					type1419=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1419.getTree());

					}
					break;

			}

			// CIL.g:1090:354: ( '[' ']' | '[' bounds1 ']' | '&' | '*' | 'pinned' | 'modreq' '(' typeSpec ')' | 'modopt' '(' typeSpec ')' | '<' tyArgs1 '>' )*
			loop100:
			while (true) {
				int alt100=9;
				switch ( input.LA(1) ) {
				case 323:
					{
					int LA100_2 = input.LA(2);
					if ( (synpred713_CIL()) ) {
						alt100=1;
					}
					else if ( (synpred714_CIL()) ) {
						alt100=2;
					}

					}
					break;
				case 260:
					{
					int LA100_3 = input.LA(2);
					if ( (synpred716_CIL()) ) {
						alt100=4;
					}

					}
					break;
				case 257:
					{
					int LA100_4 = input.LA(2);
					if ( (synpred715_CIL()) ) {
						alt100=3;
					}

					}
					break;
				case 432:
					{
					int LA100_5 = input.LA(2);
					if ( (synpred717_CIL()) ) {
						alt100=5;
					}

					}
					break;
				case 409:
					{
					int LA100_6 = input.LA(2);
					if ( (synpred718_CIL()) ) {
						alt100=6;
					}

					}
					break;
				case 408:
					{
					int LA100_7 = input.LA(2);
					if ( (synpred719_CIL()) ) {
						alt100=7;
					}

					}
					break;
				case 320:
					{
					int LA100_8 = input.LA(2);
					if ( (synpred720_CIL()) ) {
						alt100=8;
					}

					}
					break;
				}
				switch (alt100) {
				case 1 :
					// CIL.g:1090:355: '[' ']'
					{
					char_literal1420=(Token)match(input,323,FOLLOW_323_in_type25457); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1420_tree = (CommonTree)adaptor.create(char_literal1420);
					adaptor.addChild(root_0, char_literal1420_tree);
					}

					char_literal1421=(Token)match(input,324,FOLLOW_324_in_type25459); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1421_tree = (CommonTree)adaptor.create(char_literal1421);
					adaptor.addChild(root_0, char_literal1421_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1090:365: '[' bounds1 ']'
					{
					char_literal1422=(Token)match(input,323,FOLLOW_323_in_type25463); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1422_tree = (CommonTree)adaptor.create(char_literal1422);
					adaptor.addChild(root_0, char_literal1422_tree);
					}

					pushFollow(FOLLOW_bounds1_in_type25465);
					bounds11423=bounds1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bounds11423.getTree());

					char_literal1424=(Token)match(input,324,FOLLOW_324_in_type25467); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1424_tree = (CommonTree)adaptor.create(char_literal1424);
					adaptor.addChild(root_0, char_literal1424_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1093:30: '&'
					{
					char_literal1425=(Token)match(input,257,FOLLOW_257_in_type25499); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1425_tree = (CommonTree)adaptor.create(char_literal1425);
					adaptor.addChild(root_0, char_literal1425_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1093:36: '*'
					{
					char_literal1426=(Token)match(input,260,FOLLOW_260_in_type25503); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1426_tree = (CommonTree)adaptor.create(char_literal1426);
					adaptor.addChild(root_0, char_literal1426_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1093:42: 'pinned'
					{
					string_literal1427=(Token)match(input,432,FOLLOW_432_in_type25507); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1427_tree = (CommonTree)adaptor.create(string_literal1427);
					adaptor.addChild(root_0, string_literal1427_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:1093:53: 'modreq' '(' typeSpec ')'
					{
					string_literal1428=(Token)match(input,409,FOLLOW_409_in_type25511); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1428_tree = (CommonTree)adaptor.create(string_literal1428);
					adaptor.addChild(root_0, string_literal1428_tree);
					}

					char_literal1429=(Token)match(input,258,FOLLOW_258_in_type25513); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1429_tree = (CommonTree)adaptor.create(char_literal1429);
					adaptor.addChild(root_0, char_literal1429_tree);
					}

					pushFollow(FOLLOW_typeSpec_in_type25515);
					typeSpec1430=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec1430.getTree());

					char_literal1431=(Token)match(input,259,FOLLOW_259_in_type25517); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1431_tree = (CommonTree)adaptor.create(char_literal1431);
					adaptor.addChild(root_0, char_literal1431_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:1093:81: 'modopt' '(' typeSpec ')'
					{
					string_literal1432=(Token)match(input,408,FOLLOW_408_in_type25521); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1432_tree = (CommonTree)adaptor.create(string_literal1432);
					adaptor.addChild(root_0, string_literal1432_tree);
					}

					char_literal1433=(Token)match(input,258,FOLLOW_258_in_type25523); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1433_tree = (CommonTree)adaptor.create(char_literal1433);
					adaptor.addChild(root_0, char_literal1433_tree);
					}

					pushFollow(FOLLOW_typeSpec_in_type25525);
					typeSpec1434=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec1434.getTree());

					char_literal1435=(Token)match(input,259,FOLLOW_259_in_type25527); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1435_tree = (CommonTree)adaptor.create(char_literal1435);
					adaptor.addChild(root_0, char_literal1435_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:1093:109: '<' tyArgs1 '>'
					{
					char_literal1436=(Token)match(input,320,FOLLOW_320_in_type25531); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1436_tree = (CommonTree)adaptor.create(char_literal1436);
					adaptor.addChild(root_0, char_literal1436_tree);
					}

					pushFollow(FOLLOW_tyArgs1_in_type25533);
					tyArgs11437=tyArgs1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, tyArgs11437.getTree());

					char_literal1438=(Token)match(input,322,FOLLOW_322_in_type25535); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1438_tree = (CommonTree)adaptor.create(char_literal1438);
					adaptor.addChild(root_0, char_literal1438_tree);
					}

					}
					break;

				default :
					break loop100;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type"


	public static class simpleType_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "simpleType"
	// CIL.g:1096:1: simpleType : ( 'char' | 'string' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | typedef_ts );
	public final CILParser.simpleType_return simpleType() throws RecognitionException {
		CILParser.simpleType_return retval = new CILParser.simpleType_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1439=null;
		Token string_literal1440=null;
		Token string_literal1441=null;
		Token string_literal1442=null;
		Token string_literal1443=null;
		Token string_literal1444=null;
		Token string_literal1445=null;
		Token string_literal1446=null;
		Token string_literal1447=null;
		Token string_literal1448=null;
		Token string_literal1449=null;
		Token string_literal1450=null;
		Token string_literal1451=null;
		Token string_literal1452=null;
		Token string_literal1453=null;
		Token string_literal1454=null;
		Token string_literal1455=null;
		Token string_literal1456=null;
		Token string_literal1457=null;
		Token string_literal1458=null;
		Token string_literal1459=null;
		ParserRuleReturnScope typedef_ts1460 =null;

		CommonTree string_literal1439_tree=null;
		CommonTree string_literal1440_tree=null;
		CommonTree string_literal1441_tree=null;
		CommonTree string_literal1442_tree=null;
		CommonTree string_literal1443_tree=null;
		CommonTree string_literal1444_tree=null;
		CommonTree string_literal1445_tree=null;
		CommonTree string_literal1446_tree=null;
		CommonTree string_literal1447_tree=null;
		CommonTree string_literal1448_tree=null;
		CommonTree string_literal1449_tree=null;
		CommonTree string_literal1450_tree=null;
		CommonTree string_literal1451_tree=null;
		CommonTree string_literal1452_tree=null;
		CommonTree string_literal1453_tree=null;
		CommonTree string_literal1454_tree=null;
		CommonTree string_literal1455_tree=null;
		CommonTree string_literal1456_tree=null;
		CommonTree string_literal1457_tree=null;
		CommonTree string_literal1458_tree=null;
		CommonTree string_literal1459_tree=null;

		try {
			// CIL.g:1096:25: ( 'char' | 'string' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | typedef_ts )
			int alt101=18;
			switch ( input.LA(1) ) {
			case CHAR:
				{
				alt101=1;
				}
				break;
			case 462:
				{
				alt101=2;
				}
				break;
			case 340:
				{
				alt101=3;
				}
				break;
			case 391:
				{
				alt101=4;
				}
				break;
			case 388:
				{
				alt101=5;
				}
				break;
			case 389:
				{
				alt101=6;
				}
				break;
			case 390:
				{
				alt101=7;
				}
				break;
			case 369:
				{
				alt101=8;
				}
				break;
			case 370:
				{
				alt101=9;
				}
				break;
			case 482:
				{
				switch ( input.LA(2) ) {
				case 391:
					{
					alt101=10;
					}
					break;
				case 388:
					{
					alt101=11;
					}
					break;
				case 389:
					{
					alt101=12;
					}
					break;
				case 390:
					{
					alt101=13;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 101, 10, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case 478:
				{
				alt101=14;
				}
				break;
			case 475:
				{
				alt101=15;
				}
				break;
			case 476:
				{
				alt101=16;
				}
				break;
			case 477:
				{
				alt101=17;
				}
				break;
			case 310:
				{
				alt101=18;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 101, 0, input);
				throw nvae;
			}
			switch (alt101) {
				case 1 :
					// CIL.g:1096:27: 'char'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1439=(Token)match(input,CHAR,FOLLOW_CHAR_in_simpleType25608); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1439_tree = (CommonTree)adaptor.create(string_literal1439);
					adaptor.addChild(root_0, string_literal1439_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1097:27: 'string'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1440=(Token)match(input,462,FOLLOW_462_in_simpleType25637); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1440_tree = (CommonTree)adaptor.create(string_literal1440);
					adaptor.addChild(root_0, string_literal1440_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1098:27: 'bool'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1441=(Token)match(input,340,FOLLOW_340_in_simpleType25667); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1441_tree = (CommonTree)adaptor.create(string_literal1441);
					adaptor.addChild(root_0, string_literal1441_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1099:27: 'int8'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1442=(Token)match(input,391,FOLLOW_391_in_simpleType25696); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1442_tree = (CommonTree)adaptor.create(string_literal1442);
					adaptor.addChild(root_0, string_literal1442_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1100:27: 'int16'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1443=(Token)match(input,388,FOLLOW_388_in_simpleType25725); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1443_tree = (CommonTree)adaptor.create(string_literal1443);
					adaptor.addChild(root_0, string_literal1443_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:1101:27: 'int32'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1444=(Token)match(input,389,FOLLOW_389_in_simpleType25754); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1444_tree = (CommonTree)adaptor.create(string_literal1444);
					adaptor.addChild(root_0, string_literal1444_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:1102:27: 'int64'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1445=(Token)match(input,390,FOLLOW_390_in_simpleType25783); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1445_tree = (CommonTree)adaptor.create(string_literal1445);
					adaptor.addChild(root_0, string_literal1445_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:1103:27: 'float32'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1446=(Token)match(input,369,FOLLOW_369_in_simpleType25812); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1446_tree = (CommonTree)adaptor.create(string_literal1446);
					adaptor.addChild(root_0, string_literal1446_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:1104:27: 'float64'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1447=(Token)match(input,370,FOLLOW_370_in_simpleType25841); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1447_tree = (CommonTree)adaptor.create(string_literal1447);
					adaptor.addChild(root_0, string_literal1447_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:1105:27: 'unsigned' 'int8'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1448=(Token)match(input,482,FOLLOW_482_in_simpleType25870); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1448_tree = (CommonTree)adaptor.create(string_literal1448);
					adaptor.addChild(root_0, string_literal1448_tree);
					}

					string_literal1449=(Token)match(input,391,FOLLOW_391_in_simpleType25872); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1449_tree = (CommonTree)adaptor.create(string_literal1449);
					adaptor.addChild(root_0, string_literal1449_tree);
					}

					}
					break;
				case 11 :
					// CIL.g:1106:27: 'unsigned' 'int16'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1450=(Token)match(input,482,FOLLOW_482_in_simpleType25901); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1450_tree = (CommonTree)adaptor.create(string_literal1450);
					adaptor.addChild(root_0, string_literal1450_tree);
					}

					string_literal1451=(Token)match(input,388,FOLLOW_388_in_simpleType25903); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1451_tree = (CommonTree)adaptor.create(string_literal1451);
					adaptor.addChild(root_0, string_literal1451_tree);
					}

					}
					break;
				case 12 :
					// CIL.g:1107:27: 'unsigned' 'int32'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1452=(Token)match(input,482,FOLLOW_482_in_simpleType25932); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1452_tree = (CommonTree)adaptor.create(string_literal1452);
					adaptor.addChild(root_0, string_literal1452_tree);
					}

					string_literal1453=(Token)match(input,389,FOLLOW_389_in_simpleType25934); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1453_tree = (CommonTree)adaptor.create(string_literal1453);
					adaptor.addChild(root_0, string_literal1453_tree);
					}

					}
					break;
				case 13 :
					// CIL.g:1108:27: 'unsigned' 'int64'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1454=(Token)match(input,482,FOLLOW_482_in_simpleType25963); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1454_tree = (CommonTree)adaptor.create(string_literal1454);
					adaptor.addChild(root_0, string_literal1454_tree);
					}

					string_literal1455=(Token)match(input,390,FOLLOW_390_in_simpleType25965); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1455_tree = (CommonTree)adaptor.create(string_literal1455);
					adaptor.addChild(root_0, string_literal1455_tree);
					}

					}
					break;
				case 14 :
					// CIL.g:1109:27: 'uint8'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1456=(Token)match(input,478,FOLLOW_478_in_simpleType25994); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1456_tree = (CommonTree)adaptor.create(string_literal1456);
					adaptor.addChild(root_0, string_literal1456_tree);
					}

					}
					break;
				case 15 :
					// CIL.g:1110:27: 'uint16'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1457=(Token)match(input,475,FOLLOW_475_in_simpleType26023); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1457_tree = (CommonTree)adaptor.create(string_literal1457);
					adaptor.addChild(root_0, string_literal1457_tree);
					}

					}
					break;
				case 16 :
					// CIL.g:1111:27: 'uint32'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1458=(Token)match(input,476,FOLLOW_476_in_simpleType26052); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1458_tree = (CommonTree)adaptor.create(string_literal1458);
					adaptor.addChild(root_0, string_literal1458_tree);
					}

					}
					break;
				case 17 :
					// CIL.g:1112:27: 'uint64'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1459=(Token)match(input,477,FOLLOW_477_in_simpleType26081); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1459_tree = (CommonTree)adaptor.create(string_literal1459);
					adaptor.addChild(root_0, string_literal1459_tree);
					}

					}
					break;
				case 18 :
					// CIL.g:1113:27: typedef_ts
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typedef_ts_in_simpleType26110);
					typedef_ts1460=typedef_ts();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typedef_ts1460.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "simpleType"


	public static class bounds1_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "bounds1"
	// CIL.g:1116:1: bounds1 : ( bound ) ( ',' bound )* ;
	public final CILParser.bounds1_return bounds1() throws RecognitionException {
		CILParser.bounds1_return retval = new CILParser.bounds1_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1462=null;
		ParserRuleReturnScope bound1461 =null;
		ParserRuleReturnScope bound1463 =null;

		CommonTree char_literal1462_tree=null;

		try {
			// CIL.g:1116:25: ( ( bound ) ( ',' bound )* )
			// CIL.g:1116:27: ( bound ) ( ',' bound )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1116:27: ( bound )
			// CIL.g:1116:28: bound
			{
			pushFollow(FOLLOW_bound_in_bounds126185);
			bound1461=bound();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, bound1461.getTree());

			}

			// CIL.g:1116:35: ( ',' bound )*
			loop102:
			while (true) {
				int alt102=2;
				int LA102_0 = input.LA(1);
				if ( (LA102_0==262) ) {
					alt102=1;
				}

				switch (alt102) {
				case 1 :
					// CIL.g:1116:36: ',' bound
					{
					char_literal1462=(Token)match(input,262,FOLLOW_262_in_bounds126189); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1462_tree = (CommonTree)adaptor.create(char_literal1462);
					adaptor.addChild(root_0, char_literal1462_tree);
					}

					pushFollow(FOLLOW_bound_in_bounds126191);
					bound1463=bound();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bound1463.getTree());

					}
					break;

				default :
					break loop102;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bounds1"


	public static class bound_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "bound"
	// CIL.g:1119:1: bound : (| '...' | int32 | int32 '...' int32 | int32 '...' );
	public final CILParser.bound_return bound() throws RecognitionException {
		CILParser.bound_return retval = new CILParser.bound_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1464=null;
		Token string_literal1467=null;
		Token string_literal1470=null;
		ParserRuleReturnScope int321465 =null;
		ParserRuleReturnScope int321466 =null;
		ParserRuleReturnScope int321468 =null;
		ParserRuleReturnScope int321469 =null;

		CommonTree string_literal1464_tree=null;
		CommonTree string_literal1467_tree=null;
		CommonTree string_literal1470_tree=null;

		try {
			// CIL.g:1119:25: (| '...' | int32 | int32 '...' int32 | int32 '...' )
			int alt103=5;
			switch ( input.LA(1) ) {
			case EOF:
			case 262:
			case 324:
				{
				alt103=1;
				}
				break;
			case 264:
				{
				alt103=2;
				}
				break;
			case INT32:
				{
				int LA103_3 = input.LA(2);
				if ( (LA103_3==EOF||LA103_3==262||LA103_3==324) ) {
					alt103=3;
				}
				else if ( (LA103_3==264) ) {
					int LA103_5 = input.LA(3);
					if ( (LA103_5==INT32) ) {
						alt103=4;
					}
					else if ( (LA103_5==EOF||LA103_5==262||LA103_5==324) ) {
						alt103=5;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 103, 5, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 103, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 103, 0, input);
				throw nvae;
			}
			switch (alt103) {
				case 1 :
					// CIL.g:1120:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:1120:27: '...'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1464=(Token)match(input,264,FOLLOW_264_in_bound26274); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1464_tree = (CommonTree)adaptor.create(string_literal1464);
					adaptor.addChild(root_0, string_literal1464_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1121:27: int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_int32_in_bound26303);
					int321465=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321465.getTree());

					}
					break;
				case 4 :
					// CIL.g:1122:27: int32 '...' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_int32_in_bound26333);
					int321466=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321466.getTree());

					string_literal1467=(Token)match(input,264,FOLLOW_264_in_bound26335); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1467_tree = (CommonTree)adaptor.create(string_literal1467);
					adaptor.addChild(root_0, string_literal1467_tree);
					}

					pushFollow(FOLLOW_int32_in_bound26337);
					int321468=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321468.getTree());

					}
					break;
				case 5 :
					// CIL.g:1123:27: int32 '...'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_int32_in_bound26369);
					int321469=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321469.getTree());

					string_literal1470=(Token)match(input,264,FOLLOW_264_in_bound26371); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1470_tree = (CommonTree)adaptor.create(string_literal1470);
					adaptor.addChild(root_0, string_literal1470_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bound"


	public static class secDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "secDecl"
	// CIL.g:1127:1: secDecl : ( '.permission' secAction typeSpec '(' nameValPairs ')' | '.permission' secAction typeSpec '=' '{' customBlobDescr '}' | '.permission' secAction typeSpec | psetHead bytes ')' | '.permissionset' secAction compQstring | '.permissionset' secAction '=' '{' secAttrSetBlob '}' );
	public final CILParser.secDecl_return secDecl() throws RecognitionException {
		CILParser.secDecl_return retval = new CILParser.secDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1471=null;
		Token char_literal1474=null;
		Token char_literal1476=null;
		Token string_literal1477=null;
		Token char_literal1480=null;
		Token char_literal1481=null;
		Token char_literal1483=null;
		Token string_literal1484=null;
		Token char_literal1489=null;
		Token string_literal1490=null;
		Token string_literal1493=null;
		Token char_literal1495=null;
		Token char_literal1496=null;
		Token char_literal1498=null;
		ParserRuleReturnScope secAction1472 =null;
		ParserRuleReturnScope typeSpec1473 =null;
		ParserRuleReturnScope nameValPairs1475 =null;
		ParserRuleReturnScope secAction1478 =null;
		ParserRuleReturnScope typeSpec1479 =null;
		ParserRuleReturnScope customBlobDescr1482 =null;
		ParserRuleReturnScope secAction1485 =null;
		ParserRuleReturnScope typeSpec1486 =null;
		ParserRuleReturnScope psetHead1487 =null;
		ParserRuleReturnScope bytes1488 =null;
		ParserRuleReturnScope secAction1491 =null;
		ParserRuleReturnScope compQstring1492 =null;
		ParserRuleReturnScope secAction1494 =null;
		ParserRuleReturnScope secAttrSetBlob1497 =null;

		CommonTree string_literal1471_tree=null;
		CommonTree char_literal1474_tree=null;
		CommonTree char_literal1476_tree=null;
		CommonTree string_literal1477_tree=null;
		CommonTree char_literal1480_tree=null;
		CommonTree char_literal1481_tree=null;
		CommonTree char_literal1483_tree=null;
		CommonTree string_literal1484_tree=null;
		CommonTree char_literal1489_tree=null;
		CommonTree string_literal1490_tree=null;
		CommonTree string_literal1493_tree=null;
		CommonTree char_literal1495_tree=null;
		CommonTree char_literal1496_tree=null;
		CommonTree char_literal1498_tree=null;

		try {
			// CIL.g:1127:25: ( '.permission' secAction typeSpec '(' nameValPairs ')' | '.permission' secAction typeSpec '=' '{' customBlobDescr '}' | '.permission' secAction typeSpec | psetHead bytes ')' | '.permissionset' secAction compQstring | '.permissionset' secAction '=' '{' secAttrSetBlob '}' )
			int alt104=6;
			int LA104_0 = input.LA(1);
			if ( (LA104_0==298) ) {
				int LA104_1 = input.LA(2);
				if ( (synpred743_CIL()) ) {
					alt104=1;
				}
				else if ( (synpred744_CIL()) ) {
					alt104=2;
				}
				else if ( (synpred745_CIL()) ) {
					alt104=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 104, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA104_0==299) ) {
				int LA104_2 = input.LA(2);
				if ( (synpred746_CIL()) ) {
					alt104=4;
				}
				else if ( (synpred747_CIL()) ) {
					alt104=5;
				}
				else if ( (true) ) {
					alt104=6;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 104, 0, input);
				throw nvae;
			}

			switch (alt104) {
				case 1 :
					// CIL.g:1127:27: '.permission' secAction typeSpec '(' nameValPairs ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1471=(Token)match(input,298,FOLLOW_298_in_secDecl26448); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1471_tree = (CommonTree)adaptor.create(string_literal1471);
					adaptor.addChild(root_0, string_literal1471_tree);
					}

					pushFollow(FOLLOW_secAction_in_secDecl26450);
					secAction1472=secAction();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAction1472.getTree());

					pushFollow(FOLLOW_typeSpec_in_secDecl26452);
					typeSpec1473=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec1473.getTree());

					char_literal1474=(Token)match(input,258,FOLLOW_258_in_secDecl26454); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1474_tree = (CommonTree)adaptor.create(char_literal1474);
					adaptor.addChild(root_0, char_literal1474_tree);
					}

					pushFollow(FOLLOW_nameValPairs_in_secDecl26456);
					nameValPairs1475=nameValPairs();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, nameValPairs1475.getTree());

					char_literal1476=(Token)match(input,259,FOLLOW_259_in_secDecl26458); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1476_tree = (CommonTree)adaptor.create(char_literal1476);
					adaptor.addChild(root_0, char_literal1476_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1128:27: '.permission' secAction typeSpec '=' '{' customBlobDescr '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1477=(Token)match(input,298,FOLLOW_298_in_secDecl26487); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1477_tree = (CommonTree)adaptor.create(string_literal1477);
					adaptor.addChild(root_0, string_literal1477_tree);
					}

					pushFollow(FOLLOW_secAction_in_secDecl26489);
					secAction1478=secAction();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAction1478.getTree());

					pushFollow(FOLLOW_typeSpec_in_secDecl26491);
					typeSpec1479=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec1479.getTree());

					char_literal1480=(Token)match(input,321,FOLLOW_321_in_secDecl26493); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1480_tree = (CommonTree)adaptor.create(char_literal1480);
					adaptor.addChild(root_0, char_literal1480_tree);
					}

					char_literal1481=(Token)match(input,494,FOLLOW_494_in_secDecl26495); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1481_tree = (CommonTree)adaptor.create(char_literal1481);
					adaptor.addChild(root_0, char_literal1481_tree);
					}

					pushFollow(FOLLOW_customBlobDescr_in_secDecl26497);
					customBlobDescr1482=customBlobDescr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customBlobDescr1482.getTree());

					char_literal1483=(Token)match(input,495,FOLLOW_495_in_secDecl26499); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1483_tree = (CommonTree)adaptor.create(char_literal1483);
					adaptor.addChild(root_0, char_literal1483_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1129:27: '.permission' secAction typeSpec
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1484=(Token)match(input,298,FOLLOW_298_in_secDecl26528); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1484_tree = (CommonTree)adaptor.create(string_literal1484);
					adaptor.addChild(root_0, string_literal1484_tree);
					}

					pushFollow(FOLLOW_secAction_in_secDecl26530);
					secAction1485=secAction();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAction1485.getTree());

					pushFollow(FOLLOW_typeSpec_in_secDecl26532);
					typeSpec1486=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec1486.getTree());

					}
					break;
				case 4 :
					// CIL.g:1130:27: psetHead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_psetHead_in_secDecl26561);
					psetHead1487=psetHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, psetHead1487.getTree());

					pushFollow(FOLLOW_bytes_in_secDecl26563);
					bytes1488=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes1488.getTree());

					char_literal1489=(Token)match(input,259,FOLLOW_259_in_secDecl26565); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1489_tree = (CommonTree)adaptor.create(char_literal1489);
					adaptor.addChild(root_0, char_literal1489_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1131:27: '.permissionset' secAction compQstring
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1490=(Token)match(input,299,FOLLOW_299_in_secDecl26594); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1490_tree = (CommonTree)adaptor.create(string_literal1490);
					adaptor.addChild(root_0, string_literal1490_tree);
					}

					pushFollow(FOLLOW_secAction_in_secDecl26596);
					secAction1491=secAction();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAction1491.getTree());

					pushFollow(FOLLOW_compQstring_in_secDecl26598);
					compQstring1492=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1492.getTree());

					}
					break;
				case 6 :
					// CIL.g:1132:27: '.permissionset' secAction '=' '{' secAttrSetBlob '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1493=(Token)match(input,299,FOLLOW_299_in_secDecl26627); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1493_tree = (CommonTree)adaptor.create(string_literal1493);
					adaptor.addChild(root_0, string_literal1493_tree);
					}

					pushFollow(FOLLOW_secAction_in_secDecl26629);
					secAction1494=secAction();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAction1494.getTree());

					char_literal1495=(Token)match(input,321,FOLLOW_321_in_secDecl26631); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1495_tree = (CommonTree)adaptor.create(char_literal1495);
					adaptor.addChild(root_0, char_literal1495_tree);
					}

					char_literal1496=(Token)match(input,494,FOLLOW_494_in_secDecl26633); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1496_tree = (CommonTree)adaptor.create(char_literal1496);
					adaptor.addChild(root_0, char_literal1496_tree);
					}

					pushFollow(FOLLOW_secAttrSetBlob_in_secDecl26635);
					secAttrSetBlob1497=secAttrSetBlob();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAttrSetBlob1497.getTree());

					char_literal1498=(Token)match(input,495,FOLLOW_495_in_secDecl26637); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1498_tree = (CommonTree)adaptor.create(char_literal1498);
					adaptor.addChild(root_0, char_literal1498_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "secDecl"


	public static class secAttrSetBlob_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "secAttrSetBlob"
	// CIL.g:1135:1: secAttrSetBlob : (| secAttrBlob | secAttrBlob ',' secAttrSetBlob );
	public final CILParser.secAttrSetBlob_return secAttrSetBlob() throws RecognitionException {
		CILParser.secAttrSetBlob_return retval = new CILParser.secAttrSetBlob_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1501=null;
		ParserRuleReturnScope secAttrBlob1499 =null;
		ParserRuleReturnScope secAttrBlob1500 =null;
		ParserRuleReturnScope secAttrSetBlob1502 =null;

		CommonTree char_literal1501_tree=null;

		try {
			// CIL.g:1135:25: (| secAttrBlob | secAttrBlob ',' secAttrSetBlob )
			int alt105=3;
			switch ( input.LA(1) ) {
			case 495:
				{
				alt105=1;
				}
				break;
			case 323:
				{
				int LA105_2 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case ID:
			case SQSTRING:
				{
				int LA105_3 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case DOTTEDNAME:
				{
				int LA105_4 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 406:
				{
				int LA105_5 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 310:
				{
				int LA105_6 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 308:
				{
				int LA105_7 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 267:
				{
				int LA105_8 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 294:
				{
				int LA105_9 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case CLASS:
				{
				int LA105_10 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 423:
				{
				int LA105_11 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 484:
				{
				int LA105_12 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 485:
				{
				int LA105_13 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 407:
				{
				int LA105_14 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 256:
				{
				int LA105_15 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 473:
				{
				int LA105_16 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 490:
				{
				int LA105_17 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 410:
				{
				int LA105_18 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case CHAR:
				{
				int LA105_19 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 462:
				{
				int LA105_20 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 340:
				{
				int LA105_21 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 391:
				{
				int LA105_22 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 388:
				{
				int LA105_23 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 389:
				{
				int LA105_24 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 390:
				{
				int LA105_25 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 369:
				{
				int LA105_26 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 370:
				{
				int LA105_27 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 482:
				{
				int LA105_28 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 478:
				{
				int LA105_29 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 475:
				{
				int LA105_30 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 476:
				{
				int LA105_31 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 477:
				{
				int LA105_32 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			case 264:
				{
				int LA105_33 = input.LA(2);
				if ( (synpred749_CIL()) ) {
					alt105=2;
				}
				else if ( (true) ) {
					alt105=3;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 105, 0, input);
				throw nvae;
			}
			switch (alt105) {
				case 1 :
					// CIL.g:1136:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:1136:27: secAttrBlob
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_secAttrBlob_in_secAttrSetBlob26733);
					secAttrBlob1499=secAttrBlob();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAttrBlob1499.getTree());

					}
					break;
				case 3 :
					// CIL.g:1137:27: secAttrBlob ',' secAttrSetBlob
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_secAttrBlob_in_secAttrSetBlob26762);
					secAttrBlob1500=secAttrBlob();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAttrBlob1500.getTree());

					char_literal1501=(Token)match(input,262,FOLLOW_262_in_secAttrSetBlob26764); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1501_tree = (CommonTree)adaptor.create(char_literal1501);
					adaptor.addChild(root_0, char_literal1501_tree);
					}

					pushFollow(FOLLOW_secAttrSetBlob_in_secAttrSetBlob26766);
					secAttrSetBlob1502=secAttrSetBlob();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAttrSetBlob1502.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "secAttrSetBlob"


	public static class secAttrBlob_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "secAttrBlob"
	// CIL.g:1140:1: secAttrBlob : ( typeSpec '=' '{' customBlobNVPairs '}' | 'class' SQSTRING '=' '{' customBlobNVPairs '}' );
	public final CILParser.secAttrBlob_return secAttrBlob() throws RecognitionException {
		CILParser.secAttrBlob_return retval = new CILParser.secAttrBlob_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1504=null;
		Token char_literal1505=null;
		Token char_literal1507=null;
		Token string_literal1508=null;
		Token SQSTRING1509=null;
		Token char_literal1510=null;
		Token char_literal1511=null;
		Token char_literal1513=null;
		ParserRuleReturnScope typeSpec1503 =null;
		ParserRuleReturnScope customBlobNVPairs1506 =null;
		ParserRuleReturnScope customBlobNVPairs1512 =null;

		CommonTree char_literal1504_tree=null;
		CommonTree char_literal1505_tree=null;
		CommonTree char_literal1507_tree=null;
		CommonTree string_literal1508_tree=null;
		CommonTree SQSTRING1509_tree=null;
		CommonTree char_literal1510_tree=null;
		CommonTree char_literal1511_tree=null;
		CommonTree char_literal1513_tree=null;

		try {
			// CIL.g:1140:25: ( typeSpec '=' '{' customBlobNVPairs '}' | 'class' SQSTRING '=' '{' customBlobNVPairs '}' )
			int alt106=2;
			int LA106_0 = input.LA(1);
			if ( (LA106_0==CHAR||LA106_0==DOTTEDNAME||LA106_0==ID||LA106_0==SQSTRING||LA106_0==256||LA106_0==264||LA106_0==267||LA106_0==294||LA106_0==308||LA106_0==310||LA106_0==323||LA106_0==340||(LA106_0 >= 369 && LA106_0 <= 370)||(LA106_0 >= 388 && LA106_0 <= 391)||(LA106_0 >= 406 && LA106_0 <= 407)||LA106_0==410||LA106_0==423||LA106_0==462||LA106_0==473||(LA106_0 >= 475 && LA106_0 <= 478)||LA106_0==482||(LA106_0 >= 484 && LA106_0 <= 485)||LA106_0==490) ) {
				alt106=1;
			}
			else if ( (LA106_0==CLASS) ) {
				int LA106_9 = input.LA(2);
				if ( (synpred750_CIL()) ) {
					alt106=1;
				}
				else if ( (true) ) {
					alt106=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 106, 0, input);
				throw nvae;
			}

			switch (alt106) {
				case 1 :
					// CIL.g:1140:27: typeSpec '=' '{' customBlobNVPairs '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typeSpec_in_secAttrBlob26836);
					typeSpec1503=typeSpec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeSpec1503.getTree());

					char_literal1504=(Token)match(input,321,FOLLOW_321_in_secAttrBlob26838); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1504_tree = (CommonTree)adaptor.create(char_literal1504);
					adaptor.addChild(root_0, char_literal1504_tree);
					}

					char_literal1505=(Token)match(input,494,FOLLOW_494_in_secAttrBlob26840); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1505_tree = (CommonTree)adaptor.create(char_literal1505);
					adaptor.addChild(root_0, char_literal1505_tree);
					}

					pushFollow(FOLLOW_customBlobNVPairs_in_secAttrBlob26842);
					customBlobNVPairs1506=customBlobNVPairs();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customBlobNVPairs1506.getTree());

					char_literal1507=(Token)match(input,495,FOLLOW_495_in_secAttrBlob26844); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1507_tree = (CommonTree)adaptor.create(char_literal1507);
					adaptor.addChild(root_0, char_literal1507_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1141:27: 'class' SQSTRING '=' '{' customBlobNVPairs '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1508=(Token)match(input,CLASS,FOLLOW_CLASS_in_secAttrBlob26920); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1508_tree = (CommonTree)adaptor.create(string_literal1508);
					adaptor.addChild(root_0, string_literal1508_tree);
					}

					SQSTRING1509=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_secAttrBlob26922); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING1509_tree = (CommonTree)adaptor.create(SQSTRING1509);
					adaptor.addChild(root_0, SQSTRING1509_tree);
					}

					char_literal1510=(Token)match(input,321,FOLLOW_321_in_secAttrBlob26924); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1510_tree = (CommonTree)adaptor.create(char_literal1510);
					adaptor.addChild(root_0, char_literal1510_tree);
					}

					char_literal1511=(Token)match(input,494,FOLLOW_494_in_secAttrBlob26926); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1511_tree = (CommonTree)adaptor.create(char_literal1511);
					adaptor.addChild(root_0, char_literal1511_tree);
					}

					pushFollow(FOLLOW_customBlobNVPairs_in_secAttrBlob26928);
					customBlobNVPairs1512=customBlobNVPairs();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customBlobNVPairs1512.getTree());

					char_literal1513=(Token)match(input,495,FOLLOW_495_in_secAttrBlob26930); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1513_tree = (CommonTree)adaptor.create(char_literal1513);
					adaptor.addChild(root_0, char_literal1513_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "secAttrBlob"


	public static class psetHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "psetHead"
	// CIL.g:1144:1: psetHead : ( '.permissionset' secAction '=' '(' | '.permissionset' secAction 'bytearray' '(' );
	public final CILParser.psetHead_return psetHead() throws RecognitionException {
		CILParser.psetHead_return retval = new CILParser.psetHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1514=null;
		Token char_literal1516=null;
		Token char_literal1517=null;
		Token string_literal1518=null;
		Token string_literal1520=null;
		Token char_literal1521=null;
		ParserRuleReturnScope secAction1515 =null;
		ParserRuleReturnScope secAction1519 =null;

		CommonTree string_literal1514_tree=null;
		CommonTree char_literal1516_tree=null;
		CommonTree char_literal1517_tree=null;
		CommonTree string_literal1518_tree=null;
		CommonTree string_literal1520_tree=null;
		CommonTree char_literal1521_tree=null;

		try {
			// CIL.g:1144:25: ( '.permissionset' secAction '=' '(' | '.permissionset' secAction 'bytearray' '(' )
			int alt107=2;
			int LA107_0 = input.LA(1);
			if ( (LA107_0==299) ) {
				int LA107_1 = input.LA(2);
				if ( (LA107_1==REQUEST||LA107_1==334||(LA107_1 >= 348 && LA107_1 <= 349)||LA107_1==383||LA107_1==398||(LA107_1 >= 416 && LA107_1 <= 418)||LA107_1==431||(LA107_1 >= 434 && LA107_1 <= 435)||(LA107_1 >= 442 && LA107_1 <= 444)) ) {
					int LA107_2 = input.LA(3);
					if ( (LA107_2==321) ) {
						alt107=1;
					}
					else if ( (LA107_2==BYTEARRAY) ) {
						alt107=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 107, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 107, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 107, 0, input);
				throw nvae;
			}

			switch (alt107) {
				case 1 :
					// CIL.g:1144:27: '.permissionset' secAction '=' '('
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1514=(Token)match(input,299,FOLLOW_299_in_psetHead27026); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1514_tree = (CommonTree)adaptor.create(string_literal1514);
					adaptor.addChild(root_0, string_literal1514_tree);
					}

					pushFollow(FOLLOW_secAction_in_psetHead27028);
					secAction1515=secAction();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAction1515.getTree());

					char_literal1516=(Token)match(input,321,FOLLOW_321_in_psetHead27030); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1516_tree = (CommonTree)adaptor.create(char_literal1516);
					adaptor.addChild(root_0, char_literal1516_tree);
					}

					char_literal1517=(Token)match(input,258,FOLLOW_258_in_psetHead27032); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1517_tree = (CommonTree)adaptor.create(char_literal1517);
					adaptor.addChild(root_0, char_literal1517_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1145:27: '.permissionset' secAction 'bytearray' '('
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1518=(Token)match(input,299,FOLLOW_299_in_psetHead27061); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1518_tree = (CommonTree)adaptor.create(string_literal1518);
					adaptor.addChild(root_0, string_literal1518_tree);
					}

					pushFollow(FOLLOW_secAction_in_psetHead27063);
					secAction1519=secAction();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secAction1519.getTree());

					string_literal1520=(Token)match(input,BYTEARRAY,FOLLOW_BYTEARRAY_in_psetHead27065); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1520_tree = (CommonTree)adaptor.create(string_literal1520);
					adaptor.addChild(root_0, string_literal1520_tree);
					}

					char_literal1521=(Token)match(input,258,FOLLOW_258_in_psetHead27067); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1521_tree = (CommonTree)adaptor.create(char_literal1521);
					adaptor.addChild(root_0, char_literal1521_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "psetHead"


	public static class nameValPairs_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "nameValPairs"
	// CIL.g:1148:1: nameValPairs : ( nameValPair | nameValPair ',' nameValPairs );
	public final CILParser.nameValPairs_return nameValPairs() throws RecognitionException {
		CILParser.nameValPairs_return retval = new CILParser.nameValPairs_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1524=null;
		ParserRuleReturnScope nameValPair1522 =null;
		ParserRuleReturnScope nameValPair1523 =null;
		ParserRuleReturnScope nameValPairs1525 =null;

		CommonTree char_literal1524_tree=null;

		try {
			// CIL.g:1148:25: ( nameValPair | nameValPair ',' nameValPairs )
			int alt108=2;
			int LA108_0 = input.LA(1);
			if ( (LA108_0==QSTRING) ) {
				int LA108_1 = input.LA(2);
				if ( (synpred752_CIL()) ) {
					alt108=1;
				}
				else if ( (true) ) {
					alt108=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 108, 0, input);
				throw nvae;
			}

			switch (alt108) {
				case 1 :
					// CIL.g:1148:27: nameValPair
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_nameValPair_in_nameValPairs27112);
					nameValPair1522=nameValPair();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, nameValPair1522.getTree());

					}
					break;
				case 2 :
					// CIL.g:1149:27: nameValPair ',' nameValPairs
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_nameValPair_in_nameValPairs27141);
					nameValPair1523=nameValPair();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, nameValPair1523.getTree());

					char_literal1524=(Token)match(input,262,FOLLOW_262_in_nameValPairs27143); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1524_tree = (CommonTree)adaptor.create(char_literal1524);
					adaptor.addChild(root_0, char_literal1524_tree);
					}

					pushFollow(FOLLOW_nameValPairs_in_nameValPairs27145);
					nameValPairs1525=nameValPairs();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, nameValPairs1525.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "nameValPairs"


	public static class nameValPair_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "nameValPair"
	// CIL.g:1152:1: nameValPair : compQstring '=' caValue ;
	public final CILParser.nameValPair_return nameValPair() throws RecognitionException {
		CILParser.nameValPair_return retval = new CILParser.nameValPair_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1527=null;
		ParserRuleReturnScope compQstring1526 =null;
		ParserRuleReturnScope caValue1528 =null;

		CommonTree char_literal1527_tree=null;

		try {
			// CIL.g:1152:25: ( compQstring '=' caValue )
			// CIL.g:1152:27: compQstring '=' caValue
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_compQstring_in_nameValPair27191);
			compQstring1526=compQstring();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1526.getTree());

			char_literal1527=(Token)match(input,321,FOLLOW_321_in_nameValPair27193); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1527_tree = (CommonTree)adaptor.create(char_literal1527);
			adaptor.addChild(root_0, char_literal1527_tree);
			}

			pushFollow(FOLLOW_caValue_in_nameValPair27195);
			caValue1528=caValue();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, caValue1528.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "nameValPair"


	public static class truefalse_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "truefalse"
	// CIL.g:1155:1: truefalse : ( 'true' | 'false' );
	public final CILParser.truefalse_return truefalse() throws RecognitionException {
		CILParser.truefalse_return retval = new CILParser.truefalse_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1529=null;

		CommonTree set1529_tree=null;

		try {
			// CIL.g:1155:25: ( 'true' | 'false' )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1529=input.LT(1);
			if ( input.LA(1)==355||input.LA(1)==471 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1529));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "truefalse"


	public static class caValue_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "caValue"
	// CIL.g:1159:1: caValue : ( truefalse | int32 | 'int32' '(' int32 ')' | compQstring | className '(' 'int8' ':' int32 ')' | className '(' 'int16' ':' int32 ')' | className '(' 'int32' ':' int32 ')' | className '(' int32 ')' );
	public final CILParser.caValue_return caValue() throws RecognitionException {
		CILParser.caValue_return retval = new CILParser.caValue_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1532=null;
		Token char_literal1533=null;
		Token char_literal1535=null;
		Token char_literal1538=null;
		Token string_literal1539=null;
		Token char_literal1540=null;
		Token char_literal1542=null;
		Token char_literal1544=null;
		Token string_literal1545=null;
		Token char_literal1546=null;
		Token char_literal1548=null;
		Token char_literal1550=null;
		Token string_literal1551=null;
		Token char_literal1552=null;
		Token char_literal1554=null;
		Token char_literal1556=null;
		Token char_literal1558=null;
		ParserRuleReturnScope truefalse1530 =null;
		ParserRuleReturnScope int321531 =null;
		ParserRuleReturnScope int321534 =null;
		ParserRuleReturnScope compQstring1536 =null;
		ParserRuleReturnScope className1537 =null;
		ParserRuleReturnScope int321541 =null;
		ParserRuleReturnScope className1543 =null;
		ParserRuleReturnScope int321547 =null;
		ParserRuleReturnScope className1549 =null;
		ParserRuleReturnScope int321553 =null;
		ParserRuleReturnScope className1555 =null;
		ParserRuleReturnScope int321557 =null;

		CommonTree string_literal1532_tree=null;
		CommonTree char_literal1533_tree=null;
		CommonTree char_literal1535_tree=null;
		CommonTree char_literal1538_tree=null;
		CommonTree string_literal1539_tree=null;
		CommonTree char_literal1540_tree=null;
		CommonTree char_literal1542_tree=null;
		CommonTree char_literal1544_tree=null;
		CommonTree string_literal1545_tree=null;
		CommonTree char_literal1546_tree=null;
		CommonTree char_literal1548_tree=null;
		CommonTree char_literal1550_tree=null;
		CommonTree string_literal1551_tree=null;
		CommonTree char_literal1552_tree=null;
		CommonTree char_literal1554_tree=null;
		CommonTree char_literal1556_tree=null;
		CommonTree char_literal1558_tree=null;

		try {
			// CIL.g:1159:25: ( truefalse | int32 | 'int32' '(' int32 ')' | compQstring | className '(' 'int8' ':' int32 ')' | className '(' 'int16' ':' int32 ')' | className '(' 'int32' ':' int32 ')' | className '(' int32 ')' )
			int alt109=8;
			switch ( input.LA(1) ) {
			case 355:
			case 471:
				{
				alt109=1;
				}
				break;
			case INT32:
				{
				alt109=2;
				}
				break;
			case 389:
				{
				alt109=3;
				}
				break;
			case QSTRING:
				{
				alt109=4;
				}
				break;
			case 323:
				{
				int LA109_5 = input.LA(2);
				if ( (synpred758_CIL()) ) {
					alt109=5;
				}
				else if ( (synpred759_CIL()) ) {
					alt109=6;
				}
				else if ( (synpred760_CIL()) ) {
					alt109=7;
				}
				else if ( (true) ) {
					alt109=8;
				}

				}
				break;
			case ID:
			case SQSTRING:
				{
				int LA109_6 = input.LA(2);
				if ( (synpred758_CIL()) ) {
					alt109=5;
				}
				else if ( (synpred759_CIL()) ) {
					alt109=6;
				}
				else if ( (synpred760_CIL()) ) {
					alt109=7;
				}
				else if ( (true) ) {
					alt109=8;
				}

				}
				break;
			case DOTTEDNAME:
				{
				int LA109_7 = input.LA(2);
				if ( (synpred758_CIL()) ) {
					alt109=5;
				}
				else if ( (synpred759_CIL()) ) {
					alt109=6;
				}
				else if ( (synpred760_CIL()) ) {
					alt109=7;
				}
				else if ( (true) ) {
					alt109=8;
				}

				}
				break;
			case 406:
				{
				int LA109_8 = input.LA(2);
				if ( (synpred758_CIL()) ) {
					alt109=5;
				}
				else if ( (synpred759_CIL()) ) {
					alt109=6;
				}
				else if ( (synpred760_CIL()) ) {
					alt109=7;
				}
				else if ( (true) ) {
					alt109=8;
				}

				}
				break;
			case 310:
				{
				int LA109_9 = input.LA(2);
				if ( (synpred758_CIL()) ) {
					alt109=5;
				}
				else if ( (synpred759_CIL()) ) {
					alt109=6;
				}
				else if ( (synpred760_CIL()) ) {
					alt109=7;
				}
				else if ( (true) ) {
					alt109=8;
				}

				}
				break;
			case 308:
				{
				int LA109_10 = input.LA(2);
				if ( (synpred758_CIL()) ) {
					alt109=5;
				}
				else if ( (synpred759_CIL()) ) {
					alt109=6;
				}
				else if ( (synpred760_CIL()) ) {
					alt109=7;
				}
				else if ( (true) ) {
					alt109=8;
				}

				}
				break;
			case 267:
				{
				int LA109_11 = input.LA(2);
				if ( (synpred758_CIL()) ) {
					alt109=5;
				}
				else if ( (synpred759_CIL()) ) {
					alt109=6;
				}
				else if ( (synpred760_CIL()) ) {
					alt109=7;
				}
				else if ( (true) ) {
					alt109=8;
				}

				}
				break;
			case 294:
				{
				int LA109_12 = input.LA(2);
				if ( (synpred758_CIL()) ) {
					alt109=5;
				}
				else if ( (synpred759_CIL()) ) {
					alt109=6;
				}
				else if ( (synpred760_CIL()) ) {
					alt109=7;
				}
				else if ( (true) ) {
					alt109=8;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 109, 0, input);
				throw nvae;
			}
			switch (alt109) {
				case 1 :
					// CIL.g:1159:27: truefalse
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_truefalse_in_caValue27322);
					truefalse1530=truefalse();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, truefalse1530.getTree());

					}
					break;
				case 2 :
					// CIL.g:1160:27: int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_int32_in_caValue27351);
					int321531=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321531.getTree());

					}
					break;
				case 3 :
					// CIL.g:1161:27: 'int32' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1532=(Token)match(input,389,FOLLOW_389_in_caValue27380); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1532_tree = (CommonTree)adaptor.create(string_literal1532);
					adaptor.addChild(root_0, string_literal1532_tree);
					}

					char_literal1533=(Token)match(input,258,FOLLOW_258_in_caValue27382); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1533_tree = (CommonTree)adaptor.create(char_literal1533);
					adaptor.addChild(root_0, char_literal1533_tree);
					}

					pushFollow(FOLLOW_int32_in_caValue27384);
					int321534=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321534.getTree());

					char_literal1535=(Token)match(input,259,FOLLOW_259_in_caValue27386); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1535_tree = (CommonTree)adaptor.create(char_literal1535);
					adaptor.addChild(root_0, char_literal1535_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1162:27: compQstring
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_compQstring_in_caValue27415);
					compQstring1536=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1536.getTree());

					}
					break;
				case 5 :
					// CIL.g:1163:27: className '(' 'int8' ':' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_className_in_caValue27444);
					className1537=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1537.getTree());

					char_literal1538=(Token)match(input,258,FOLLOW_258_in_caValue27446); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1538_tree = (CommonTree)adaptor.create(char_literal1538);
					adaptor.addChild(root_0, char_literal1538_tree);
					}

					string_literal1539=(Token)match(input,391,FOLLOW_391_in_caValue27448); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1539_tree = (CommonTree)adaptor.create(string_literal1539);
					adaptor.addChild(root_0, string_literal1539_tree);
					}

					char_literal1540=(Token)match(input,318,FOLLOW_318_in_caValue27450); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1540_tree = (CommonTree)adaptor.create(char_literal1540);
					adaptor.addChild(root_0, char_literal1540_tree);
					}

					pushFollow(FOLLOW_int32_in_caValue27452);
					int321541=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321541.getTree());

					char_literal1542=(Token)match(input,259,FOLLOW_259_in_caValue27454); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1542_tree = (CommonTree)adaptor.create(char_literal1542);
					adaptor.addChild(root_0, char_literal1542_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:1164:27: className '(' 'int16' ':' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_className_in_caValue27483);
					className1543=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1543.getTree());

					char_literal1544=(Token)match(input,258,FOLLOW_258_in_caValue27485); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1544_tree = (CommonTree)adaptor.create(char_literal1544);
					adaptor.addChild(root_0, char_literal1544_tree);
					}

					string_literal1545=(Token)match(input,388,FOLLOW_388_in_caValue27487); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1545_tree = (CommonTree)adaptor.create(string_literal1545);
					adaptor.addChild(root_0, string_literal1545_tree);
					}

					char_literal1546=(Token)match(input,318,FOLLOW_318_in_caValue27489); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1546_tree = (CommonTree)adaptor.create(char_literal1546);
					adaptor.addChild(root_0, char_literal1546_tree);
					}

					pushFollow(FOLLOW_int32_in_caValue27491);
					int321547=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321547.getTree());

					char_literal1548=(Token)match(input,259,FOLLOW_259_in_caValue27493); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1548_tree = (CommonTree)adaptor.create(char_literal1548);
					adaptor.addChild(root_0, char_literal1548_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:1165:27: className '(' 'int32' ':' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_className_in_caValue27522);
					className1549=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1549.getTree());

					char_literal1550=(Token)match(input,258,FOLLOW_258_in_caValue27524); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1550_tree = (CommonTree)adaptor.create(char_literal1550);
					adaptor.addChild(root_0, char_literal1550_tree);
					}

					string_literal1551=(Token)match(input,389,FOLLOW_389_in_caValue27526); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1551_tree = (CommonTree)adaptor.create(string_literal1551);
					adaptor.addChild(root_0, string_literal1551_tree);
					}

					char_literal1552=(Token)match(input,318,FOLLOW_318_in_caValue27528); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1552_tree = (CommonTree)adaptor.create(char_literal1552);
					adaptor.addChild(root_0, char_literal1552_tree);
					}

					pushFollow(FOLLOW_int32_in_caValue27530);
					int321553=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321553.getTree());

					char_literal1554=(Token)match(input,259,FOLLOW_259_in_caValue27532); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1554_tree = (CommonTree)adaptor.create(char_literal1554);
					adaptor.addChild(root_0, char_literal1554_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:1166:27: className '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_className_in_caValue27561);
					className1555=className();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, className1555.getTree());

					char_literal1556=(Token)match(input,258,FOLLOW_258_in_caValue27563); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1556_tree = (CommonTree)adaptor.create(char_literal1556);
					adaptor.addChild(root_0, char_literal1556_tree);
					}

					pushFollow(FOLLOW_int32_in_caValue27565);
					int321557=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321557.getTree());

					char_literal1558=(Token)match(input,259,FOLLOW_259_in_caValue27567); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1558_tree = (CommonTree)adaptor.create(char_literal1558);
					adaptor.addChild(root_0, char_literal1558_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "caValue"


	public static class secAction_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "secAction"
	// CIL.g:1169:1: secAction : ( 'request' | 'demand' | 'assert' | 'deny' | 'permitonly' | 'linkcheck' | 'inheritcheck' | 'reqmin' | 'reqopt' | 'reqrefuse' | 'prejitgrant' | 'prejitdeny' | 'noncasdemand' | 'noncaslinkdemand' | 'noncasinheritance' );
	public final CILParser.secAction_return secAction() throws RecognitionException {
		CILParser.secAction_return retval = new CILParser.secAction_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1559=null;

		CommonTree set1559_tree=null;

		try {
			// CIL.g:1169:25: ( 'request' | 'demand' | 'assert' | 'deny' | 'permitonly' | 'linkcheck' | 'inheritcheck' | 'reqmin' | 'reqopt' | 'reqrefuse' | 'prejitgrant' | 'prejitdeny' | 'noncasdemand' | 'noncaslinkdemand' | 'noncasinheritance' )
			// CIL.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1559=input.LT(1);
			if ( input.LA(1)==REQUEST||input.LA(1)==334||(input.LA(1) >= 348 && input.LA(1) <= 349)||input.LA(1)==383||input.LA(1)==398||(input.LA(1) >= 416 && input.LA(1) <= 418)||input.LA(1)==431||(input.LA(1) >= 434 && input.LA(1) <= 435)||(input.LA(1) >= 442 && input.LA(1) <= 444) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1559));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "secAction"


	public static class esHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "esHead"
	// CIL.g:1187:1: esHead : '.line' ;
	public final CILParser.esHead_return esHead() throws RecognitionException {
		CILParser.esHead_return retval = new CILParser.esHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1560=null;

		CommonTree string_literal1560_tree=null;

		try {
			// CIL.g:1187:25: ( '.line' )
			// CIL.g:1187:27: '.line'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1560=(Token)match(input,285,FOLLOW_285_in_esHead28098); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1560_tree = (CommonTree)adaptor.create(string_literal1560);
			adaptor.addChild(root_0, string_literal1560_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "esHead"


	public static class extSourceSpec_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "extSourceSpec"
	// CIL.g:1191:1: extSourceSpec : ( esHead int32 SQSTRING | esHead int32 | esHead int32 ':' int32 SQSTRING | esHead int32 ':' int32 | esHead int32 ':' int32 ',' int32 SQSTRING | esHead int32 ':' int32 ',' int32 | esHead int32 ',' int32 ':' int32 SQSTRING | esHead int32 ',' int32 ':' int32 | esHead int32 ',' int32 ':' int32 ',' int32 SQSTRING | esHead int32 ',' int32 ':' int32 ',' int32 | esHead int32 QSTRING );
	public final CILParser.extSourceSpec_return extSourceSpec() throws RecognitionException {
		CILParser.extSourceSpec_return retval = new CILParser.extSourceSpec_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token SQSTRING1563=null;
		Token char_literal1568=null;
		Token SQSTRING1570=null;
		Token char_literal1573=null;
		Token char_literal1577=null;
		Token char_literal1579=null;
		Token SQSTRING1581=null;
		Token char_literal1584=null;
		Token char_literal1586=null;
		Token char_literal1590=null;
		Token char_literal1592=null;
		Token SQSTRING1594=null;
		Token char_literal1597=null;
		Token char_literal1599=null;
		Token char_literal1603=null;
		Token char_literal1605=null;
		Token char_literal1607=null;
		Token SQSTRING1609=null;
		Token char_literal1612=null;
		Token char_literal1614=null;
		Token char_literal1616=null;
		Token QSTRING1620=null;
		ParserRuleReturnScope esHead1561 =null;
		ParserRuleReturnScope int321562 =null;
		ParserRuleReturnScope esHead1564 =null;
		ParserRuleReturnScope int321565 =null;
		ParserRuleReturnScope esHead1566 =null;
		ParserRuleReturnScope int321567 =null;
		ParserRuleReturnScope int321569 =null;
		ParserRuleReturnScope esHead1571 =null;
		ParserRuleReturnScope int321572 =null;
		ParserRuleReturnScope int321574 =null;
		ParserRuleReturnScope esHead1575 =null;
		ParserRuleReturnScope int321576 =null;
		ParserRuleReturnScope int321578 =null;
		ParserRuleReturnScope int321580 =null;
		ParserRuleReturnScope esHead1582 =null;
		ParserRuleReturnScope int321583 =null;
		ParserRuleReturnScope int321585 =null;
		ParserRuleReturnScope int321587 =null;
		ParserRuleReturnScope esHead1588 =null;
		ParserRuleReturnScope int321589 =null;
		ParserRuleReturnScope int321591 =null;
		ParserRuleReturnScope int321593 =null;
		ParserRuleReturnScope esHead1595 =null;
		ParserRuleReturnScope int321596 =null;
		ParserRuleReturnScope int321598 =null;
		ParserRuleReturnScope int321600 =null;
		ParserRuleReturnScope esHead1601 =null;
		ParserRuleReturnScope int321602 =null;
		ParserRuleReturnScope int321604 =null;
		ParserRuleReturnScope int321606 =null;
		ParserRuleReturnScope int321608 =null;
		ParserRuleReturnScope esHead1610 =null;
		ParserRuleReturnScope int321611 =null;
		ParserRuleReturnScope int321613 =null;
		ParserRuleReturnScope int321615 =null;
		ParserRuleReturnScope int321617 =null;
		ParserRuleReturnScope esHead1618 =null;
		ParserRuleReturnScope int321619 =null;

		CommonTree SQSTRING1563_tree=null;
		CommonTree char_literal1568_tree=null;
		CommonTree SQSTRING1570_tree=null;
		CommonTree char_literal1573_tree=null;
		CommonTree char_literal1577_tree=null;
		CommonTree char_literal1579_tree=null;
		CommonTree SQSTRING1581_tree=null;
		CommonTree char_literal1584_tree=null;
		CommonTree char_literal1586_tree=null;
		CommonTree char_literal1590_tree=null;
		CommonTree char_literal1592_tree=null;
		CommonTree SQSTRING1594_tree=null;
		CommonTree char_literal1597_tree=null;
		CommonTree char_literal1599_tree=null;
		CommonTree char_literal1603_tree=null;
		CommonTree char_literal1605_tree=null;
		CommonTree char_literal1607_tree=null;
		CommonTree SQSTRING1609_tree=null;
		CommonTree char_literal1612_tree=null;
		CommonTree char_literal1614_tree=null;
		CommonTree char_literal1616_tree=null;
		CommonTree QSTRING1620_tree=null;

		try {
			// CIL.g:1191:25: ( esHead int32 SQSTRING | esHead int32 | esHead int32 ':' int32 SQSTRING | esHead int32 ':' int32 | esHead int32 ':' int32 ',' int32 SQSTRING | esHead int32 ':' int32 ',' int32 | esHead int32 ',' int32 ':' int32 SQSTRING | esHead int32 ',' int32 ':' int32 | esHead int32 ',' int32 ':' int32 ',' int32 SQSTRING | esHead int32 ',' int32 ':' int32 ',' int32 | esHead int32 QSTRING )
			int alt110=11;
			int LA110_0 = input.LA(1);
			if ( (LA110_0==285) ) {
				int LA110_1 = input.LA(2);
				if ( (LA110_1==INT32) ) {
					switch ( input.LA(3) ) {
					case SQSTRING:
						{
						int LA110_3 = input.LA(4);
						if ( (LA110_3==EOF||(LA110_3 >= ADD && LA110_3 <= BLE_UN_S)||(LA110_3 >= BLT && LA110_3 <= BRFALSE_S)||(LA110_3 >= BRTRUE && LA110_3 <= BRTRUE_S)||LA110_3==BR_S||(LA110_3 >= CALL && LA110_3 <= CALLI)||LA110_3==CALLVIRT||LA110_3==CASTCLASS||LA110_3==CEQ||(LA110_3 >= CGT && LA110_3 <= CGT_UN)||LA110_3==CKFINITE||(LA110_3 >= CLT && LA110_3 <= CLT_UN)||(LA110_3 >= CONV_I && LA110_3 <= CPOBJ)||(LA110_3 >= DIV && LA110_3 <= DIV_UN)||(LA110_3 >= DUP && LA110_3 <= ENDFINALLY)||(LA110_3 >= ID && LA110_3 <= INITOBJ)||(LA110_3 >= ISINST && LA110_3 <= LDELEM_U4)||(LA110_3 >= LDFLD && LA110_3 <= LDIND_U4)||(LA110_3 >= LDLEN && LA110_3 <= LEAVE_S)||(LA110_3 >= LOCALLOC && LA110_3 <= POP)||(LA110_3 >= REFANYTYPE && LA110_3 <= REM_UN)||(LA110_3 >= RET && LA110_3 <= VOLATILE_)||LA110_3==XOR||(LA110_3 >= 265 && LA110_3 <= 266)||(LA110_3 >= 269 && LA110_3 <= 270)||(LA110_3 >= 272 && LA110_3 <= 281)||(LA110_3 >= 283 && LA110_3 <= 285)||(LA110_3 >= 287 && LA110_3 <= 293)||(LA110_3 >= 295 && LA110_3 <= 300)||(LA110_3 >= 303 && LA110_3 <= 307)||(LA110_3 >= 309 && LA110_3 <= 311)||(LA110_3 >= 313 && LA110_3 <= 316)||LA110_3==430||(LA110_3 >= 494 && LA110_3 <= 495)) ) {
							alt110=1;
						}
						else if ( (LA110_3==318) ) {
							alt110=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 110, 3, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case EOF:
					case ADD:
					case ADD_OVF:
					case ADD_OVF_UN:
					case AND:
					case ARGLIST:
					case BEQ:
					case BEQ_S:
					case BGE:
					case BGE_S:
					case BGE_UN:
					case BGE_UN_S:
					case BGT:
					case BGT_S:
					case BGT_UN:
					case BGT_UN_S:
					case BLE:
					case BLE_S:
					case BLE_UN:
					case BLE_UN_S:
					case BLT:
					case BLT_S:
					case BLT_UN:
					case BLT_UN_S:
					case BNE_UN:
					case BNE_UN_S:
					case BOX:
					case BR:
					case BREAK:
					case BRFALSE:
					case BRFALSE_S:
					case BRTRUE:
					case BRTRUE_S:
					case BR_S:
					case CALL:
					case CALLI:
					case CALLVIRT:
					case CASTCLASS:
					case CEQ:
					case CGT:
					case CGT_UN:
					case CKFINITE:
					case CLT:
					case CLT_UN:
					case CONV_I:
					case CONV_I1:
					case CONV_I2:
					case CONV_I4:
					case CONV_I8:
					case CONV_OVF_I:
					case CONV_OVF_I1:
					case CONV_OVF_I1_UN:
					case CONV_OVF_I2:
					case CONV_OVF_I2_UN:
					case CONV_OVF_I4:
					case CONV_OVF_I4_UN:
					case CONV_OVF_I8:
					case CONV_OVF_I8_UN:
					case CONV_OVF_I_UN:
					case CONV_OVF_U:
					case CONV_OVF_U1:
					case CONV_OVF_U1_UN:
					case CONV_OVF_U2:
					case CONV_OVF_U2_UN:
					case CONV_OVF_U4:
					case CONV_OVF_U4_UN:
					case CONV_OVF_U8:
					case CONV_OVF_U8_UN:
					case CONV_OVF_U_UN:
					case CONV_R4:
					case CONV_R8:
					case CONV_R_UN:
					case CONV_U:
					case CONV_U1:
					case CONV_U2:
					case CONV_U4:
					case CONV_U8:
					case CPBLK:
					case CPOBJ:
					case DIV:
					case DIV_UN:
					case DUP:
					case ENDFAULT:
					case ENDFILTER:
					case ENDFINALLY:
					case ID:
					case INITBLK:
					case INITOBJ:
					case ISINST:
					case JMP:
					case LDARG:
					case LDARGA:
					case LDARGA_S:
					case LDARG_0:
					case LDARG_1:
					case LDARG_2:
					case LDARG_3:
					case LDARG_S:
					case LDC_I4:
					case LDC_I4_0:
					case LDC_I4_1:
					case LDC_I4_2:
					case LDC_I4_3:
					case LDC_I4_4:
					case LDC_I4_5:
					case LDC_I4_6:
					case LDC_I4_7:
					case LDC_I4_8:
					case LDC_I4_M1:
					case LDC_I4_S:
					case LDC_I8:
					case LDC_R4:
					case LDC_R8:
					case LDELEMA:
					case LDELEM_I:
					case LDELEM_I1:
					case LDELEM_I2:
					case LDELEM_I4:
					case LDELEM_I8:
					case LDELEM_R4:
					case LDELEM_R8:
					case LDELEM_REF:
					case LDELEM_U1:
					case LDELEM_U2:
					case LDELEM_U4:
					case LDFLD:
					case LDFLDA:
					case LDFTN:
					case LDIND_I:
					case LDIND_I1:
					case LDIND_I2:
					case LDIND_I4:
					case LDIND_I8:
					case LDIND_R4:
					case LDIND_R8:
					case LDIND_REF:
					case LDIND_U1:
					case LDIND_U2:
					case LDIND_U4:
					case LDLEN:
					case LDLOC:
					case LDLOCA:
					case LDLOCA_S:
					case LDLOC_0:
					case LDLOC_1:
					case LDLOC_2:
					case LDLOC_3:
					case LDLOC_S:
					case LDNULL:
					case LDOBJ:
					case LDSFLD:
					case LDSFLDA:
					case LDSTR:
					case LDTOKEN:
					case LDVIRTFTN:
					case LEAVE:
					case LEAVE_S:
					case LOCALLOC:
					case MKREFANY:
					case MUL:
					case MUL_OVF:
					case MUL_OVF_UN:
					case NEG:
					case NEWARR:
					case NEWOBJ:
					case NOP:
					case NOT:
					case OR:
					case POP:
					case REFANYTYPE:
					case REFANYVAL:
					case REM:
					case REM_UN:
					case RET:
					case RETHROW:
					case SHL:
					case SHR:
					case SHR_UN:
					case SIZEOF:
					case STARG:
					case STARG_S:
					case STELEM_I:
					case STELEM_I1:
					case STELEM_I2:
					case STELEM_I4:
					case STELEM_I8:
					case STELEM_R4:
					case STELEM_R8:
					case STELEM_REF:
					case STFLD:
					case STIND_I:
					case STIND_I1:
					case STIND_I2:
					case STIND_I4:
					case STIND_I8:
					case STIND_R4:
					case STIND_R8:
					case STIND_REF:
					case STLOC:
					case STLOC_0:
					case STLOC_1:
					case STLOC_2:
					case STLOC_3:
					case STLOC_S:
					case STOBJ:
					case STSFLD:
					case SUB:
					case SUB_OVF:
					case SUB_OVF_UN:
					case SWITCH:
					case TAIL_:
					case THROW:
					case UNALIGNED_:
					case UNBOX:
					case VOLATILE_:
					case XOR:
					case 265:
					case 266:
					case 269:
					case 270:
					case 272:
					case 273:
					case 274:
					case 275:
					case 276:
					case 277:
					case 278:
					case 279:
					case 280:
					case 281:
					case 283:
					case 284:
					case 285:
					case 287:
					case 288:
					case 289:
					case 290:
					case 291:
					case 292:
					case 293:
					case 295:
					case 296:
					case 297:
					case 298:
					case 299:
					case 300:
					case 303:
					case 304:
					case 305:
					case 306:
					case 307:
					case 309:
					case 310:
					case 311:
					case 313:
					case 314:
					case 315:
					case 316:
					case 430:
					case 494:
					case 495:
						{
						alt110=2;
						}
						break;
					case 318:
						{
						int LA110_5 = input.LA(4);
						if ( (LA110_5==INT32) ) {
							switch ( input.LA(5) ) {
							case SQSTRING:
								{
								int LA110_11 = input.LA(6);
								if ( (LA110_11==EOF||(LA110_11 >= ADD && LA110_11 <= BLE_UN_S)||(LA110_11 >= BLT && LA110_11 <= BRFALSE_S)||(LA110_11 >= BRTRUE && LA110_11 <= BRTRUE_S)||LA110_11==BR_S||(LA110_11 >= CALL && LA110_11 <= CALLI)||LA110_11==CALLVIRT||LA110_11==CASTCLASS||LA110_11==CEQ||(LA110_11 >= CGT && LA110_11 <= CGT_UN)||LA110_11==CKFINITE||(LA110_11 >= CLT && LA110_11 <= CLT_UN)||(LA110_11 >= CONV_I && LA110_11 <= CPOBJ)||(LA110_11 >= DIV && LA110_11 <= DIV_UN)||(LA110_11 >= DUP && LA110_11 <= ENDFINALLY)||(LA110_11 >= ID && LA110_11 <= INITOBJ)||(LA110_11 >= ISINST && LA110_11 <= LDELEM_U4)||(LA110_11 >= LDFLD && LA110_11 <= LDIND_U4)||(LA110_11 >= LDLEN && LA110_11 <= LEAVE_S)||(LA110_11 >= LOCALLOC && LA110_11 <= POP)||(LA110_11 >= REFANYTYPE && LA110_11 <= REM_UN)||(LA110_11 >= RET && LA110_11 <= VOLATILE_)||LA110_11==XOR||(LA110_11 >= 265 && LA110_11 <= 266)||(LA110_11 >= 269 && LA110_11 <= 270)||(LA110_11 >= 272 && LA110_11 <= 281)||(LA110_11 >= 283 && LA110_11 <= 285)||(LA110_11 >= 287 && LA110_11 <= 293)||(LA110_11 >= 295 && LA110_11 <= 300)||(LA110_11 >= 303 && LA110_11 <= 307)||(LA110_11 >= 309 && LA110_11 <= 311)||(LA110_11 >= 313 && LA110_11 <= 316)||LA110_11==430||(LA110_11 >= 494 && LA110_11 <= 495)) ) {
									alt110=3;
								}
								else if ( (LA110_11==318) ) {
									alt110=4;
								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 110, 11, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

								}
								break;
							case EOF:
							case ADD:
							case ADD_OVF:
							case ADD_OVF_UN:
							case AND:
							case ARGLIST:
							case BEQ:
							case BEQ_S:
							case BGE:
							case BGE_S:
							case BGE_UN:
							case BGE_UN_S:
							case BGT:
							case BGT_S:
							case BGT_UN:
							case BGT_UN_S:
							case BLE:
							case BLE_S:
							case BLE_UN:
							case BLE_UN_S:
							case BLT:
							case BLT_S:
							case BLT_UN:
							case BLT_UN_S:
							case BNE_UN:
							case BNE_UN_S:
							case BOX:
							case BR:
							case BREAK:
							case BRFALSE:
							case BRFALSE_S:
							case BRTRUE:
							case BRTRUE_S:
							case BR_S:
							case CALL:
							case CALLI:
							case CALLVIRT:
							case CASTCLASS:
							case CEQ:
							case CGT:
							case CGT_UN:
							case CKFINITE:
							case CLT:
							case CLT_UN:
							case CONV_I:
							case CONV_I1:
							case CONV_I2:
							case CONV_I4:
							case CONV_I8:
							case CONV_OVF_I:
							case CONV_OVF_I1:
							case CONV_OVF_I1_UN:
							case CONV_OVF_I2:
							case CONV_OVF_I2_UN:
							case CONV_OVF_I4:
							case CONV_OVF_I4_UN:
							case CONV_OVF_I8:
							case CONV_OVF_I8_UN:
							case CONV_OVF_I_UN:
							case CONV_OVF_U:
							case CONV_OVF_U1:
							case CONV_OVF_U1_UN:
							case CONV_OVF_U2:
							case CONV_OVF_U2_UN:
							case CONV_OVF_U4:
							case CONV_OVF_U4_UN:
							case CONV_OVF_U8:
							case CONV_OVF_U8_UN:
							case CONV_OVF_U_UN:
							case CONV_R4:
							case CONV_R8:
							case CONV_R_UN:
							case CONV_U:
							case CONV_U1:
							case CONV_U2:
							case CONV_U4:
							case CONV_U8:
							case CPBLK:
							case CPOBJ:
							case DIV:
							case DIV_UN:
							case DUP:
							case ENDFAULT:
							case ENDFILTER:
							case ENDFINALLY:
							case ID:
							case INITBLK:
							case INITOBJ:
							case ISINST:
							case JMP:
							case LDARG:
							case LDARGA:
							case LDARGA_S:
							case LDARG_0:
							case LDARG_1:
							case LDARG_2:
							case LDARG_3:
							case LDARG_S:
							case LDC_I4:
							case LDC_I4_0:
							case LDC_I4_1:
							case LDC_I4_2:
							case LDC_I4_3:
							case LDC_I4_4:
							case LDC_I4_5:
							case LDC_I4_6:
							case LDC_I4_7:
							case LDC_I4_8:
							case LDC_I4_M1:
							case LDC_I4_S:
							case LDC_I8:
							case LDC_R4:
							case LDC_R8:
							case LDELEMA:
							case LDELEM_I:
							case LDELEM_I1:
							case LDELEM_I2:
							case LDELEM_I4:
							case LDELEM_I8:
							case LDELEM_R4:
							case LDELEM_R8:
							case LDELEM_REF:
							case LDELEM_U1:
							case LDELEM_U2:
							case LDELEM_U4:
							case LDFLD:
							case LDFLDA:
							case LDFTN:
							case LDIND_I:
							case LDIND_I1:
							case LDIND_I2:
							case LDIND_I4:
							case LDIND_I8:
							case LDIND_R4:
							case LDIND_R8:
							case LDIND_REF:
							case LDIND_U1:
							case LDIND_U2:
							case LDIND_U4:
							case LDLEN:
							case LDLOC:
							case LDLOCA:
							case LDLOCA_S:
							case LDLOC_0:
							case LDLOC_1:
							case LDLOC_2:
							case LDLOC_3:
							case LDLOC_S:
							case LDNULL:
							case LDOBJ:
							case LDSFLD:
							case LDSFLDA:
							case LDSTR:
							case LDTOKEN:
							case LDVIRTFTN:
							case LEAVE:
							case LEAVE_S:
							case LOCALLOC:
							case MKREFANY:
							case MUL:
							case MUL_OVF:
							case MUL_OVF_UN:
							case NEG:
							case NEWARR:
							case NEWOBJ:
							case NOP:
							case NOT:
							case OR:
							case POP:
							case REFANYTYPE:
							case REFANYVAL:
							case REM:
							case REM_UN:
							case RET:
							case RETHROW:
							case SHL:
							case SHR:
							case SHR_UN:
							case SIZEOF:
							case STARG:
							case STARG_S:
							case STELEM_I:
							case STELEM_I1:
							case STELEM_I2:
							case STELEM_I4:
							case STELEM_I8:
							case STELEM_R4:
							case STELEM_R8:
							case STELEM_REF:
							case STFLD:
							case STIND_I:
							case STIND_I1:
							case STIND_I2:
							case STIND_I4:
							case STIND_I8:
							case STIND_R4:
							case STIND_R8:
							case STIND_REF:
							case STLOC:
							case STLOC_0:
							case STLOC_1:
							case STLOC_2:
							case STLOC_3:
							case STLOC_S:
							case STOBJ:
							case STSFLD:
							case SUB:
							case SUB_OVF:
							case SUB_OVF_UN:
							case SWITCH:
							case TAIL_:
							case THROW:
							case UNALIGNED_:
							case UNBOX:
							case VOLATILE_:
							case XOR:
							case 265:
							case 266:
							case 269:
							case 270:
							case 272:
							case 273:
							case 274:
							case 275:
							case 276:
							case 277:
							case 278:
							case 279:
							case 280:
							case 281:
							case 283:
							case 284:
							case 285:
							case 287:
							case 288:
							case 289:
							case 290:
							case 291:
							case 292:
							case 293:
							case 295:
							case 296:
							case 297:
							case 298:
							case 299:
							case 300:
							case 303:
							case 304:
							case 305:
							case 306:
							case 307:
							case 309:
							case 310:
							case 311:
							case 313:
							case 314:
							case 315:
							case 316:
							case 430:
							case 494:
							case 495:
								{
								alt110=4;
								}
								break;
							case 262:
								{
								int LA110_13 = input.LA(6);
								if ( (LA110_13==INT32) ) {
									int LA110_16 = input.LA(7);
									if ( (LA110_16==SQSTRING) ) {
										int LA110_18 = input.LA(8);
										if ( (LA110_18==EOF||(LA110_18 >= ADD && LA110_18 <= BLE_UN_S)||(LA110_18 >= BLT && LA110_18 <= BRFALSE_S)||(LA110_18 >= BRTRUE && LA110_18 <= BRTRUE_S)||LA110_18==BR_S||(LA110_18 >= CALL && LA110_18 <= CALLI)||LA110_18==CALLVIRT||LA110_18==CASTCLASS||LA110_18==CEQ||(LA110_18 >= CGT && LA110_18 <= CGT_UN)||LA110_18==CKFINITE||(LA110_18 >= CLT && LA110_18 <= CLT_UN)||(LA110_18 >= CONV_I && LA110_18 <= CPOBJ)||(LA110_18 >= DIV && LA110_18 <= DIV_UN)||(LA110_18 >= DUP && LA110_18 <= ENDFINALLY)||(LA110_18 >= ID && LA110_18 <= INITOBJ)||(LA110_18 >= ISINST && LA110_18 <= LDELEM_U4)||(LA110_18 >= LDFLD && LA110_18 <= LDIND_U4)||(LA110_18 >= LDLEN && LA110_18 <= LEAVE_S)||(LA110_18 >= LOCALLOC && LA110_18 <= POP)||(LA110_18 >= REFANYTYPE && LA110_18 <= REM_UN)||(LA110_18 >= RET && LA110_18 <= VOLATILE_)||LA110_18==XOR||(LA110_18 >= 265 && LA110_18 <= 266)||(LA110_18 >= 269 && LA110_18 <= 270)||(LA110_18 >= 272 && LA110_18 <= 281)||(LA110_18 >= 283 && LA110_18 <= 285)||(LA110_18 >= 287 && LA110_18 <= 293)||(LA110_18 >= 295 && LA110_18 <= 300)||(LA110_18 >= 303 && LA110_18 <= 307)||(LA110_18 >= 309 && LA110_18 <= 311)||(LA110_18 >= 313 && LA110_18 <= 316)||LA110_18==430||(LA110_18 >= 494 && LA110_18 <= 495)) ) {
											alt110=5;
										}
										else if ( (LA110_18==318) ) {
											alt110=6;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return retval;}
											int nvaeMark = input.mark();
											try {
												for (int nvaeConsume = 0; nvaeConsume < 8 - 1; nvaeConsume++) {
													input.consume();
												}
												NoViableAltException nvae =
													new NoViableAltException("", 110, 18, input);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

									}
									else if ( (LA110_16==EOF||(LA110_16 >= ADD && LA110_16 <= BLE_UN_S)||(LA110_16 >= BLT && LA110_16 <= BRFALSE_S)||(LA110_16 >= BRTRUE && LA110_16 <= BRTRUE_S)||LA110_16==BR_S||(LA110_16 >= CALL && LA110_16 <= CALLI)||LA110_16==CALLVIRT||LA110_16==CASTCLASS||LA110_16==CEQ||(LA110_16 >= CGT && LA110_16 <= CGT_UN)||LA110_16==CKFINITE||(LA110_16 >= CLT && LA110_16 <= CLT_UN)||(LA110_16 >= CONV_I && LA110_16 <= CPOBJ)||(LA110_16 >= DIV && LA110_16 <= DIV_UN)||(LA110_16 >= DUP && LA110_16 <= ENDFINALLY)||(LA110_16 >= ID && LA110_16 <= INITOBJ)||(LA110_16 >= ISINST && LA110_16 <= LDELEM_U4)||(LA110_16 >= LDFLD && LA110_16 <= LDIND_U4)||(LA110_16 >= LDLEN && LA110_16 <= LEAVE_S)||(LA110_16 >= LOCALLOC && LA110_16 <= POP)||(LA110_16 >= REFANYTYPE && LA110_16 <= REM_UN)||(LA110_16 >= RET && LA110_16 <= SIZEOF)||(LA110_16 >= STARG && LA110_16 <= VOLATILE_)||LA110_16==XOR||(LA110_16 >= 265 && LA110_16 <= 266)||(LA110_16 >= 269 && LA110_16 <= 270)||(LA110_16 >= 272 && LA110_16 <= 281)||(LA110_16 >= 283 && LA110_16 <= 285)||(LA110_16 >= 287 && LA110_16 <= 293)||(LA110_16 >= 295 && LA110_16 <= 300)||(LA110_16 >= 303 && LA110_16 <= 307)||(LA110_16 >= 309 && LA110_16 <= 311)||(LA110_16 >= 313 && LA110_16 <= 316)||LA110_16==430||(LA110_16 >= 494 && LA110_16 <= 495)) ) {
										alt110=6;
									}

									else {
										if (state.backtracking>0) {state.failed=true; return retval;}
										int nvaeMark = input.mark();
										try {
											for (int nvaeConsume = 0; nvaeConsume < 7 - 1; nvaeConsume++) {
												input.consume();
											}
											NoViableAltException nvae =
												new NoViableAltException("", 110, 16, input);
											throw nvae;
										} finally {
											input.rewind(nvaeMark);
										}
									}

								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 110, 13, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

								}
								break;
							default:
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 110, 9, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 110, 5, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case 262:
						{
						int LA110_6 = input.LA(4);
						if ( (LA110_6==INT32) ) {
							int LA110_10 = input.LA(5);
							if ( (LA110_10==318) ) {
								int LA110_14 = input.LA(6);
								if ( (LA110_14==INT32) ) {
									switch ( input.LA(7) ) {
									case SQSTRING:
										{
										int LA110_20 = input.LA(8);
										if ( (LA110_20==EOF||(LA110_20 >= ADD && LA110_20 <= BLE_UN_S)||(LA110_20 >= BLT && LA110_20 <= BRFALSE_S)||(LA110_20 >= BRTRUE && LA110_20 <= BRTRUE_S)||LA110_20==BR_S||(LA110_20 >= CALL && LA110_20 <= CALLI)||LA110_20==CALLVIRT||LA110_20==CASTCLASS||LA110_20==CEQ||(LA110_20 >= CGT && LA110_20 <= CGT_UN)||LA110_20==CKFINITE||(LA110_20 >= CLT && LA110_20 <= CLT_UN)||(LA110_20 >= CONV_I && LA110_20 <= CPOBJ)||(LA110_20 >= DIV && LA110_20 <= DIV_UN)||(LA110_20 >= DUP && LA110_20 <= ENDFINALLY)||(LA110_20 >= ID && LA110_20 <= INITOBJ)||(LA110_20 >= ISINST && LA110_20 <= LDELEM_U4)||(LA110_20 >= LDFLD && LA110_20 <= LDIND_U4)||(LA110_20 >= LDLEN && LA110_20 <= LEAVE_S)||(LA110_20 >= LOCALLOC && LA110_20 <= POP)||(LA110_20 >= REFANYTYPE && LA110_20 <= REM_UN)||(LA110_20 >= RET && LA110_20 <= VOLATILE_)||LA110_20==XOR||(LA110_20 >= 265 && LA110_20 <= 266)||(LA110_20 >= 269 && LA110_20 <= 270)||(LA110_20 >= 272 && LA110_20 <= 281)||(LA110_20 >= 283 && LA110_20 <= 285)||(LA110_20 >= 287 && LA110_20 <= 293)||(LA110_20 >= 295 && LA110_20 <= 300)||(LA110_20 >= 303 && LA110_20 <= 307)||(LA110_20 >= 309 && LA110_20 <= 311)||(LA110_20 >= 313 && LA110_20 <= 316)||LA110_20==430||(LA110_20 >= 494 && LA110_20 <= 495)) ) {
											alt110=7;
										}
										else if ( (LA110_20==318) ) {
											alt110=8;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return retval;}
											int nvaeMark = input.mark();
											try {
												for (int nvaeConsume = 0; nvaeConsume < 8 - 1; nvaeConsume++) {
													input.consume();
												}
												NoViableAltException nvae =
													new NoViableAltException("", 110, 20, input);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									case EOF:
									case ADD:
									case ADD_OVF:
									case ADD_OVF_UN:
									case AND:
									case ARGLIST:
									case BEQ:
									case BEQ_S:
									case BGE:
									case BGE_S:
									case BGE_UN:
									case BGE_UN_S:
									case BGT:
									case BGT_S:
									case BGT_UN:
									case BGT_UN_S:
									case BLE:
									case BLE_S:
									case BLE_UN:
									case BLE_UN_S:
									case BLT:
									case BLT_S:
									case BLT_UN:
									case BLT_UN_S:
									case BNE_UN:
									case BNE_UN_S:
									case BOX:
									case BR:
									case BREAK:
									case BRFALSE:
									case BRFALSE_S:
									case BRTRUE:
									case BRTRUE_S:
									case BR_S:
									case CALL:
									case CALLI:
									case CALLVIRT:
									case CASTCLASS:
									case CEQ:
									case CGT:
									case CGT_UN:
									case CKFINITE:
									case CLT:
									case CLT_UN:
									case CONV_I:
									case CONV_I1:
									case CONV_I2:
									case CONV_I4:
									case CONV_I8:
									case CONV_OVF_I:
									case CONV_OVF_I1:
									case CONV_OVF_I1_UN:
									case CONV_OVF_I2:
									case CONV_OVF_I2_UN:
									case CONV_OVF_I4:
									case CONV_OVF_I4_UN:
									case CONV_OVF_I8:
									case CONV_OVF_I8_UN:
									case CONV_OVF_I_UN:
									case CONV_OVF_U:
									case CONV_OVF_U1:
									case CONV_OVF_U1_UN:
									case CONV_OVF_U2:
									case CONV_OVF_U2_UN:
									case CONV_OVF_U4:
									case CONV_OVF_U4_UN:
									case CONV_OVF_U8:
									case CONV_OVF_U8_UN:
									case CONV_OVF_U_UN:
									case CONV_R4:
									case CONV_R8:
									case CONV_R_UN:
									case CONV_U:
									case CONV_U1:
									case CONV_U2:
									case CONV_U4:
									case CONV_U8:
									case CPBLK:
									case CPOBJ:
									case DIV:
									case DIV_UN:
									case DUP:
									case ENDFAULT:
									case ENDFILTER:
									case ENDFINALLY:
									case ID:
									case INITBLK:
									case INITOBJ:
									case ISINST:
									case JMP:
									case LDARG:
									case LDARGA:
									case LDARGA_S:
									case LDARG_0:
									case LDARG_1:
									case LDARG_2:
									case LDARG_3:
									case LDARG_S:
									case LDC_I4:
									case LDC_I4_0:
									case LDC_I4_1:
									case LDC_I4_2:
									case LDC_I4_3:
									case LDC_I4_4:
									case LDC_I4_5:
									case LDC_I4_6:
									case LDC_I4_7:
									case LDC_I4_8:
									case LDC_I4_M1:
									case LDC_I4_S:
									case LDC_I8:
									case LDC_R4:
									case LDC_R8:
									case LDELEMA:
									case LDELEM_I:
									case LDELEM_I1:
									case LDELEM_I2:
									case LDELEM_I4:
									case LDELEM_I8:
									case LDELEM_R4:
									case LDELEM_R8:
									case LDELEM_REF:
									case LDELEM_U1:
									case LDELEM_U2:
									case LDELEM_U4:
									case LDFLD:
									case LDFLDA:
									case LDFTN:
									case LDIND_I:
									case LDIND_I1:
									case LDIND_I2:
									case LDIND_I4:
									case LDIND_I8:
									case LDIND_R4:
									case LDIND_R8:
									case LDIND_REF:
									case LDIND_U1:
									case LDIND_U2:
									case LDIND_U4:
									case LDLEN:
									case LDLOC:
									case LDLOCA:
									case LDLOCA_S:
									case LDLOC_0:
									case LDLOC_1:
									case LDLOC_2:
									case LDLOC_3:
									case LDLOC_S:
									case LDNULL:
									case LDOBJ:
									case LDSFLD:
									case LDSFLDA:
									case LDSTR:
									case LDTOKEN:
									case LDVIRTFTN:
									case LEAVE:
									case LEAVE_S:
									case LOCALLOC:
									case MKREFANY:
									case MUL:
									case MUL_OVF:
									case MUL_OVF_UN:
									case NEG:
									case NEWARR:
									case NEWOBJ:
									case NOP:
									case NOT:
									case OR:
									case POP:
									case REFANYTYPE:
									case REFANYVAL:
									case REM:
									case REM_UN:
									case RET:
									case RETHROW:
									case SHL:
									case SHR:
									case SHR_UN:
									case SIZEOF:
									case STARG:
									case STARG_S:
									case STELEM_I:
									case STELEM_I1:
									case STELEM_I2:
									case STELEM_I4:
									case STELEM_I8:
									case STELEM_R4:
									case STELEM_R8:
									case STELEM_REF:
									case STFLD:
									case STIND_I:
									case STIND_I1:
									case STIND_I2:
									case STIND_I4:
									case STIND_I8:
									case STIND_R4:
									case STIND_R8:
									case STIND_REF:
									case STLOC:
									case STLOC_0:
									case STLOC_1:
									case STLOC_2:
									case STLOC_3:
									case STLOC_S:
									case STOBJ:
									case STSFLD:
									case SUB:
									case SUB_OVF:
									case SUB_OVF_UN:
									case SWITCH:
									case TAIL_:
									case THROW:
									case UNALIGNED_:
									case UNBOX:
									case VOLATILE_:
									case XOR:
									case 265:
									case 266:
									case 269:
									case 270:
									case 272:
									case 273:
									case 274:
									case 275:
									case 276:
									case 277:
									case 278:
									case 279:
									case 280:
									case 281:
									case 283:
									case 284:
									case 285:
									case 287:
									case 288:
									case 289:
									case 290:
									case 291:
									case 292:
									case 293:
									case 295:
									case 296:
									case 297:
									case 298:
									case 299:
									case 300:
									case 303:
									case 304:
									case 305:
									case 306:
									case 307:
									case 309:
									case 310:
									case 311:
									case 313:
									case 314:
									case 315:
									case 316:
									case 430:
									case 494:
									case 495:
										{
										alt110=8;
										}
										break;
									case 262:
										{
										int LA110_22 = input.LA(8);
										if ( (LA110_22==INT32) ) {
											int LA110_25 = input.LA(9);
											if ( (LA110_25==SQSTRING) ) {
												int LA110_26 = input.LA(10);
												if ( (LA110_26==EOF||(LA110_26 >= ADD && LA110_26 <= BLE_UN_S)||(LA110_26 >= BLT && LA110_26 <= BRFALSE_S)||(LA110_26 >= BRTRUE && LA110_26 <= BRTRUE_S)||LA110_26==BR_S||(LA110_26 >= CALL && LA110_26 <= CALLI)||LA110_26==CALLVIRT||LA110_26==CASTCLASS||LA110_26==CEQ||(LA110_26 >= CGT && LA110_26 <= CGT_UN)||LA110_26==CKFINITE||(LA110_26 >= CLT && LA110_26 <= CLT_UN)||(LA110_26 >= CONV_I && LA110_26 <= CPOBJ)||(LA110_26 >= DIV && LA110_26 <= DIV_UN)||(LA110_26 >= DUP && LA110_26 <= ENDFINALLY)||(LA110_26 >= ID && LA110_26 <= INITOBJ)||(LA110_26 >= ISINST && LA110_26 <= LDELEM_U4)||(LA110_26 >= LDFLD && LA110_26 <= LDIND_U4)||(LA110_26 >= LDLEN && LA110_26 <= LEAVE_S)||(LA110_26 >= LOCALLOC && LA110_26 <= POP)||(LA110_26 >= REFANYTYPE && LA110_26 <= REM_UN)||(LA110_26 >= RET && LA110_26 <= VOLATILE_)||LA110_26==XOR||(LA110_26 >= 265 && LA110_26 <= 266)||(LA110_26 >= 269 && LA110_26 <= 270)||(LA110_26 >= 272 && LA110_26 <= 281)||(LA110_26 >= 283 && LA110_26 <= 285)||(LA110_26 >= 287 && LA110_26 <= 293)||(LA110_26 >= 295 && LA110_26 <= 300)||(LA110_26 >= 303 && LA110_26 <= 307)||(LA110_26 >= 309 && LA110_26 <= 311)||(LA110_26 >= 313 && LA110_26 <= 316)||LA110_26==430||(LA110_26 >= 494 && LA110_26 <= 495)) ) {
													alt110=9;
												}
												else if ( (LA110_26==318) ) {
													alt110=10;
												}

												else {
													if (state.backtracking>0) {state.failed=true; return retval;}
													int nvaeMark = input.mark();
													try {
														for (int nvaeConsume = 0; nvaeConsume < 10 - 1; nvaeConsume++) {
															input.consume();
														}
														NoViableAltException nvae =
															new NoViableAltException("", 110, 26, input);
														throw nvae;
													} finally {
														input.rewind(nvaeMark);
													}
												}

											}
											else if ( (LA110_25==EOF||(LA110_25 >= ADD && LA110_25 <= BLE_UN_S)||(LA110_25 >= BLT && LA110_25 <= BRFALSE_S)||(LA110_25 >= BRTRUE && LA110_25 <= BRTRUE_S)||LA110_25==BR_S||(LA110_25 >= CALL && LA110_25 <= CALLI)||LA110_25==CALLVIRT||LA110_25==CASTCLASS||LA110_25==CEQ||(LA110_25 >= CGT && LA110_25 <= CGT_UN)||LA110_25==CKFINITE||(LA110_25 >= CLT && LA110_25 <= CLT_UN)||(LA110_25 >= CONV_I && LA110_25 <= CPOBJ)||(LA110_25 >= DIV && LA110_25 <= DIV_UN)||(LA110_25 >= DUP && LA110_25 <= ENDFINALLY)||(LA110_25 >= ID && LA110_25 <= INITOBJ)||(LA110_25 >= ISINST && LA110_25 <= LDELEM_U4)||(LA110_25 >= LDFLD && LA110_25 <= LDIND_U4)||(LA110_25 >= LDLEN && LA110_25 <= LEAVE_S)||(LA110_25 >= LOCALLOC && LA110_25 <= POP)||(LA110_25 >= REFANYTYPE && LA110_25 <= REM_UN)||(LA110_25 >= RET && LA110_25 <= SIZEOF)||(LA110_25 >= STARG && LA110_25 <= VOLATILE_)||LA110_25==XOR||(LA110_25 >= 265 && LA110_25 <= 266)||(LA110_25 >= 269 && LA110_25 <= 270)||(LA110_25 >= 272 && LA110_25 <= 281)||(LA110_25 >= 283 && LA110_25 <= 285)||(LA110_25 >= 287 && LA110_25 <= 293)||(LA110_25 >= 295 && LA110_25 <= 300)||(LA110_25 >= 303 && LA110_25 <= 307)||(LA110_25 >= 309 && LA110_25 <= 311)||(LA110_25 >= 313 && LA110_25 <= 316)||LA110_25==430||(LA110_25 >= 494 && LA110_25 <= 495)) ) {
												alt110=10;
											}

											else {
												if (state.backtracking>0) {state.failed=true; return retval;}
												int nvaeMark = input.mark();
												try {
													for (int nvaeConsume = 0; nvaeConsume < 9 - 1; nvaeConsume++) {
														input.consume();
													}
													NoViableAltException nvae =
														new NoViableAltException("", 110, 25, input);
													throw nvae;
												} finally {
													input.rewind(nvaeMark);
												}
											}

										}

										else {
											if (state.backtracking>0) {state.failed=true; return retval;}
											int nvaeMark = input.mark();
											try {
												for (int nvaeConsume = 0; nvaeConsume < 8 - 1; nvaeConsume++) {
													input.consume();
												}
												NoViableAltException nvae =
													new NoViableAltException("", 110, 22, input);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									default:
										if (state.backtracking>0) {state.failed=true; return retval;}
										int nvaeMark = input.mark();
										try {
											for (int nvaeConsume = 0; nvaeConsume < 7 - 1; nvaeConsume++) {
												input.consume();
											}
											NoViableAltException nvae =
												new NoViableAltException("", 110, 17, input);
											throw nvae;
										} finally {
											input.rewind(nvaeMark);
										}
									}
								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 110, 14, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 110, 10, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 110, 6, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case QSTRING:
						{
						alt110=11;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 110, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 110, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 110, 0, input);
				throw nvae;
			}

			switch (alt110) {
				case 1 :
					// CIL.g:1191:27: esHead int32 SQSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28191);
					esHead1561=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1561.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28193);
					int321562=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321562.getTree());

					SQSTRING1563=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_extSourceSpec28195); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING1563_tree = (CommonTree)adaptor.create(SQSTRING1563);
					adaptor.addChild(root_0, SQSTRING1563_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1192:27: esHead int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28224);
					esHead1564=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1564.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28226);
					int321565=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321565.getTree());

					}
					break;
				case 3 :
					// CIL.g:1193:27: esHead int32 ':' int32 SQSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28255);
					esHead1566=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1566.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28257);
					int321567=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321567.getTree());

					char_literal1568=(Token)match(input,318,FOLLOW_318_in_extSourceSpec28259); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1568_tree = (CommonTree)adaptor.create(char_literal1568);
					adaptor.addChild(root_0, char_literal1568_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28261);
					int321569=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321569.getTree());

					SQSTRING1570=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_extSourceSpec28263); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING1570_tree = (CommonTree)adaptor.create(SQSTRING1570);
					adaptor.addChild(root_0, SQSTRING1570_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1194:27: esHead int32 ':' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28292);
					esHead1571=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1571.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28294);
					int321572=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321572.getTree());

					char_literal1573=(Token)match(input,318,FOLLOW_318_in_extSourceSpec28296); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1573_tree = (CommonTree)adaptor.create(char_literal1573);
					adaptor.addChild(root_0, char_literal1573_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28298);
					int321574=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321574.getTree());

					}
					break;
				case 5 :
					// CIL.g:1195:27: esHead int32 ':' int32 ',' int32 SQSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28327);
					esHead1575=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1575.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28329);
					int321576=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321576.getTree());

					char_literal1577=(Token)match(input,318,FOLLOW_318_in_extSourceSpec28331); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1577_tree = (CommonTree)adaptor.create(char_literal1577);
					adaptor.addChild(root_0, char_literal1577_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28333);
					int321578=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321578.getTree());

					char_literal1579=(Token)match(input,262,FOLLOW_262_in_extSourceSpec28335); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1579_tree = (CommonTree)adaptor.create(char_literal1579);
					adaptor.addChild(root_0, char_literal1579_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28337);
					int321580=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321580.getTree());

					SQSTRING1581=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_extSourceSpec28339); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING1581_tree = (CommonTree)adaptor.create(SQSTRING1581);
					adaptor.addChild(root_0, SQSTRING1581_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:1196:27: esHead int32 ':' int32 ',' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28368);
					esHead1582=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1582.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28370);
					int321583=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321583.getTree());

					char_literal1584=(Token)match(input,318,FOLLOW_318_in_extSourceSpec28372); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1584_tree = (CommonTree)adaptor.create(char_literal1584);
					adaptor.addChild(root_0, char_literal1584_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28374);
					int321585=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321585.getTree());

					char_literal1586=(Token)match(input,262,FOLLOW_262_in_extSourceSpec28376); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1586_tree = (CommonTree)adaptor.create(char_literal1586);
					adaptor.addChild(root_0, char_literal1586_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28378);
					int321587=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321587.getTree());

					}
					break;
				case 7 :
					// CIL.g:1197:27: esHead int32 ',' int32 ':' int32 SQSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28407);
					esHead1588=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1588.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28409);
					int321589=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321589.getTree());

					char_literal1590=(Token)match(input,262,FOLLOW_262_in_extSourceSpec28411); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1590_tree = (CommonTree)adaptor.create(char_literal1590);
					adaptor.addChild(root_0, char_literal1590_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28413);
					int321591=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321591.getTree());

					char_literal1592=(Token)match(input,318,FOLLOW_318_in_extSourceSpec28415); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1592_tree = (CommonTree)adaptor.create(char_literal1592);
					adaptor.addChild(root_0, char_literal1592_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28417);
					int321593=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321593.getTree());

					SQSTRING1594=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_extSourceSpec28419); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING1594_tree = (CommonTree)adaptor.create(SQSTRING1594);
					adaptor.addChild(root_0, SQSTRING1594_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:1198:27: esHead int32 ',' int32 ':' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28448);
					esHead1595=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1595.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28450);
					int321596=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321596.getTree());

					char_literal1597=(Token)match(input,262,FOLLOW_262_in_extSourceSpec28452); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1597_tree = (CommonTree)adaptor.create(char_literal1597);
					adaptor.addChild(root_0, char_literal1597_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28454);
					int321598=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321598.getTree());

					char_literal1599=(Token)match(input,318,FOLLOW_318_in_extSourceSpec28456); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1599_tree = (CommonTree)adaptor.create(char_literal1599);
					adaptor.addChild(root_0, char_literal1599_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28458);
					int321600=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321600.getTree());

					}
					break;
				case 9 :
					// CIL.g:1199:27: esHead int32 ',' int32 ':' int32 ',' int32 SQSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28487);
					esHead1601=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1601.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28489);
					int321602=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321602.getTree());

					char_literal1603=(Token)match(input,262,FOLLOW_262_in_extSourceSpec28491); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1603_tree = (CommonTree)adaptor.create(char_literal1603);
					adaptor.addChild(root_0, char_literal1603_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28493);
					int321604=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321604.getTree());

					char_literal1605=(Token)match(input,318,FOLLOW_318_in_extSourceSpec28495); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1605_tree = (CommonTree)adaptor.create(char_literal1605);
					adaptor.addChild(root_0, char_literal1605_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28497);
					int321606=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321606.getTree());

					char_literal1607=(Token)match(input,262,FOLLOW_262_in_extSourceSpec28499); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1607_tree = (CommonTree)adaptor.create(char_literal1607);
					adaptor.addChild(root_0, char_literal1607_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28501);
					int321608=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321608.getTree());

					SQSTRING1609=(Token)match(input,SQSTRING,FOLLOW_SQSTRING_in_extSourceSpec28503); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQSTRING1609_tree = (CommonTree)adaptor.create(SQSTRING1609);
					adaptor.addChild(root_0, SQSTRING1609_tree);
					}

					}
					break;
				case 10 :
					// CIL.g:1200:27: esHead int32 ',' int32 ':' int32 ',' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28532);
					esHead1610=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1610.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28534);
					int321611=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321611.getTree());

					char_literal1612=(Token)match(input,262,FOLLOW_262_in_extSourceSpec28536); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1612_tree = (CommonTree)adaptor.create(char_literal1612);
					adaptor.addChild(root_0, char_literal1612_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28538);
					int321613=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321613.getTree());

					char_literal1614=(Token)match(input,318,FOLLOW_318_in_extSourceSpec28540); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1614_tree = (CommonTree)adaptor.create(char_literal1614);
					adaptor.addChild(root_0, char_literal1614_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28542);
					int321615=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321615.getTree());

					char_literal1616=(Token)match(input,262,FOLLOW_262_in_extSourceSpec28544); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1616_tree = (CommonTree)adaptor.create(char_literal1616);
					adaptor.addChild(root_0, char_literal1616_tree);
					}

					pushFollow(FOLLOW_int32_in_extSourceSpec28546);
					int321617=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321617.getTree());

					}
					break;
				case 11 :
					// CIL.g:1201:27: esHead int32 QSTRING
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_esHead_in_extSourceSpec28575);
					esHead1618=esHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, esHead1618.getTree());

					pushFollow(FOLLOW_int32_in_extSourceSpec28577);
					int321619=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321619.getTree());

					QSTRING1620=(Token)match(input,QSTRING,FOLLOW_QSTRING_in_extSourceSpec28579); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					QSTRING1620_tree = (CommonTree)adaptor.create(QSTRING1620);
					adaptor.addChild(root_0, QSTRING1620_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "extSourceSpec"


	public static class fileDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fileDecl"
	// CIL.g:1205:1: fileDecl : ( '.file' fileAttr dottedName fileEntry hashHead bytes ')' fileEntry | '.file' fileAttr dottedName fileEntry );
	public final CILParser.fileDecl_return fileDecl() throws RecognitionException {
		CILParser.fileDecl_return retval = new CILParser.fileDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1621=null;
		Token char_literal1627=null;
		Token string_literal1629=null;
		ParserRuleReturnScope fileAttr1622 =null;
		ParserRuleReturnScope dottedName1623 =null;
		ParserRuleReturnScope fileEntry1624 =null;
		ParserRuleReturnScope hashHead1625 =null;
		ParserRuleReturnScope bytes1626 =null;
		ParserRuleReturnScope fileEntry1628 =null;
		ParserRuleReturnScope fileAttr1630 =null;
		ParserRuleReturnScope dottedName1631 =null;
		ParserRuleReturnScope fileEntry1632 =null;

		CommonTree string_literal1621_tree=null;
		CommonTree char_literal1627_tree=null;
		CommonTree string_literal1629_tree=null;

		try {
			// CIL.g:1205:25: ( '.file' fileAttr dottedName fileEntry hashHead bytes ')' fileEntry | '.file' fileAttr dottedName fileEntry )
			int alt111=2;
			int LA111_0 = input.LA(1);
			if ( (LA111_0==279) ) {
				int LA111_1 = input.LA(2);
				if ( (synpred785_CIL()) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 111, 0, input);
				throw nvae;
			}

			switch (alt111) {
				case 1 :
					// CIL.g:1205:27: '.file' fileAttr dottedName fileEntry hashHead bytes ')' fileEntry
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1621=(Token)match(input,279,FOLLOW_279_in_fileDecl28655); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1621_tree = (CommonTree)adaptor.create(string_literal1621);
					adaptor.addChild(root_0, string_literal1621_tree);
					}

					pushFollow(FOLLOW_fileAttr_in_fileDecl28657);
					fileAttr1622=fileAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fileAttr1622.getTree());

					pushFollow(FOLLOW_dottedName_in_fileDecl28659);
					dottedName1623=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1623.getTree());

					pushFollow(FOLLOW_fileEntry_in_fileDecl28661);
					fileEntry1624=fileEntry();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fileEntry1624.getTree());

					pushFollow(FOLLOW_hashHead_in_fileDecl28663);
					hashHead1625=hashHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, hashHead1625.getTree());

					pushFollow(FOLLOW_bytes_in_fileDecl28665);
					bytes1626=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes1626.getTree());

					char_literal1627=(Token)match(input,259,FOLLOW_259_in_fileDecl28667); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1627_tree = (CommonTree)adaptor.create(char_literal1627);
					adaptor.addChild(root_0, char_literal1627_tree);
					}

					pushFollow(FOLLOW_fileEntry_in_fileDecl28669);
					fileEntry1628=fileEntry();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fileEntry1628.getTree());

					}
					break;
				case 2 :
					// CIL.g:1206:27: '.file' fileAttr dottedName fileEntry
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1629=(Token)match(input,279,FOLLOW_279_in_fileDecl28698); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1629_tree = (CommonTree)adaptor.create(string_literal1629);
					adaptor.addChild(root_0, string_literal1629_tree);
					}

					pushFollow(FOLLOW_fileAttr_in_fileDecl28700);
					fileAttr1630=fileAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fileAttr1630.getTree());

					pushFollow(FOLLOW_dottedName_in_fileDecl28702);
					dottedName1631=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1631.getTree());

					pushFollow(FOLLOW_fileEntry_in_fileDecl28704);
					fileEntry1632=fileEntry();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fileEntry1632.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fileDecl"


	public static class fileAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fileAttr"
	// CIL.g:1209:1: fileAttr : () ( 'nometadata' )* ;
	public final CILParser.fileAttr_return fileAttr() throws RecognitionException {
		CILParser.fileAttr_return retval = new CILParser.fileAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1633=null;

		CommonTree string_literal1633_tree=null;

		try {
			// CIL.g:1209:25: ( () ( 'nometadata' )* )
			// CIL.g:1209:27: () ( 'nometadata' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1209:27: ()
			// CIL.g:1209:39: 
			{
			}

			// CIL.g:1209:41: ( 'nometadata' )*
			loop112:
			while (true) {
				int alt112=2;
				int LA112_0 = input.LA(1);
				if ( (LA112_0==415) ) {
					alt112=1;
				}

				switch (alt112) {
				case 1 :
					// CIL.g:1209:42: 'nometadata'
					{
					string_literal1633=(Token)match(input,415,FOLLOW_415_in_fileAttr28758); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1633_tree = (CommonTree)adaptor.create(string_literal1633);
					adaptor.addChild(root_0, string_literal1633_tree);
					}

					}
					break;

				default :
					break loop112;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fileAttr"


	public static class fileEntry_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fileEntry"
	// CIL.g:1212:1: fileEntry : (| '.entrypoint' );
	public final CILParser.fileEntry_return fileEntry() throws RecognitionException {
		CILParser.fileEntry_return retval = new CILParser.fileEntry_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1634=null;

		CommonTree string_literal1634_tree=null;

		try {
			// CIL.g:1212:25: (| '.entrypoint' )
			int alt113=2;
			int LA113_0 = input.LA(1);
			if ( (LA113_0==EOF||LA113_0==266||(LA113_0 >= 269 && LA113_0 <= 270)||(LA113_0 >= 272 && LA113_0 <= 273)||(LA113_0 >= 278 && LA113_0 <= 279)||(LA113_0 >= 282 && LA113_0 <= 285)||(LA113_0 >= 289 && LA113_0 <= 293)||(LA113_0 >= 298 && LA113_0 <= 299)||(LA113_0 >= 306 && LA113_0 <= 307)||(LA113_0 >= 310 && LA113_0 <= 311)||LA113_0==313||LA113_0==315||LA113_0==495) ) {
				alt113=1;
			}
			else if ( (LA113_0==275) ) {
				alt113=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 113, 0, input);
				throw nvae;
			}

			switch (alt113) {
				case 1 :
					// CIL.g:1213:25: 
					{
					root_0 = (CommonTree)adaptor.nil();


					}
					break;
				case 2 :
					// CIL.g:1213:27: '.entrypoint'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1634=(Token)match(input,275,FOLLOW_275_in_fileEntry28837); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1634_tree = (CommonTree)adaptor.create(string_literal1634);
					adaptor.addChild(root_0, string_literal1634_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fileEntry"


	public static class hashHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "hashHead"
	// CIL.g:1216:1: hashHead : '.hash' '=' '(' ;
	public final CILParser.hashHead_return hashHead() throws RecognitionException {
		CILParser.hashHead_return retval = new CILParser.hashHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1635=null;
		Token char_literal1636=null;
		Token char_literal1637=null;

		CommonTree string_literal1635_tree=null;
		CommonTree char_literal1636_tree=null;
		CommonTree char_literal1637_tree=null;

		try {
			// CIL.g:1216:25: ( '.hash' '=' '(' )
			// CIL.g:1216:27: '.hash' '=' '('
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1635=(Token)match(input,282,FOLLOW_282_in_hashHead28886); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1635_tree = (CommonTree)adaptor.create(string_literal1635);
			adaptor.addChild(root_0, string_literal1635_tree);
			}

			char_literal1636=(Token)match(input,321,FOLLOW_321_in_hashHead28888); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1636_tree = (CommonTree)adaptor.create(char_literal1636);
			adaptor.addChild(root_0, char_literal1636_tree);
			}

			char_literal1637=(Token)match(input,258,FOLLOW_258_in_hashHead28890); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1637_tree = (CommonTree)adaptor.create(char_literal1637);
			adaptor.addChild(root_0, char_literal1637_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "hashHead"


	public static class assemblyHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assemblyHead"
	// CIL.g:1219:1: assemblyHead : '.assembly' asmAttr dottedName ;
	public final CILParser.assemblyHead_return assemblyHead() throws RecognitionException {
		CILParser.assemblyHead_return retval = new CILParser.assemblyHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1638=null;
		ParserRuleReturnScope asmAttr1639 =null;
		ParserRuleReturnScope dottedName1640 =null;

		CommonTree string_literal1638_tree=null;

		try {
			// CIL.g:1219:25: ( '.assembly' asmAttr dottedName )
			// CIL.g:1219:27: '.assembly' asmAttr dottedName
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1638=(Token)match(input,266,FOLLOW_266_in_assemblyHead28935); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1638_tree = (CommonTree)adaptor.create(string_literal1638);
			adaptor.addChild(root_0, string_literal1638_tree);
			}

			pushFollow(FOLLOW_asmAttr_in_assemblyHead28937);
			asmAttr1639=asmAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, asmAttr1639.getTree());

			pushFollow(FOLLOW_dottedName_in_assemblyHead28939);
			dottedName1640=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1640.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "assemblyHead"


	public static class asmAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "asmAttr"
	// CIL.g:1222:1: asmAttr : () ( 'retargetable' | 'legacy' 'library' | 'cil' | 'x86' | 'ia64' | 'amd64' )* ;
	public final CILParser.asmAttr_return asmAttr() throws RecognitionException {
		CILParser.asmAttr_return retval = new CILParser.asmAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1641=null;
		Token string_literal1642=null;
		Token string_literal1643=null;
		Token string_literal1644=null;
		Token string_literal1645=null;
		Token string_literal1646=null;
		Token string_literal1647=null;

		CommonTree string_literal1641_tree=null;
		CommonTree string_literal1642_tree=null;
		CommonTree string_literal1643_tree=null;
		CommonTree string_literal1644_tree=null;
		CommonTree string_literal1645_tree=null;
		CommonTree string_literal1646_tree=null;
		CommonTree string_literal1647_tree=null;

		try {
			// CIL.g:1222:25: ( () ( 'retargetable' | 'legacy' 'library' | 'cil' | 'x86' | 'ia64' | 'amd64' )* )
			// CIL.g:1222:27: () ( 'retargetable' | 'legacy' 'library' | 'cil' | 'x86' | 'ia64' | 'amd64' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1222:27: ()
			// CIL.g:1222:39: 
			{
			}

			// CIL.g:1222:41: ( 'retargetable' | 'legacy' 'library' | 'cil' | 'x86' | 'ia64' | 'amd64' )*
			loop114:
			while (true) {
				int alt114=7;
				switch ( input.LA(1) ) {
				case 447:
					{
					alt114=1;
					}
					break;
				case 396:
					{
					alt114=2;
					}
					break;
				case CIL:
					{
					alt114=3;
					}
					break;
				case 493:
					{
					alt114=4;
					}
					break;
				case 377:
					{
					alt114=5;
					}
					break;
				case 328:
					{
					alt114=6;
					}
					break;
				}
				switch (alt114) {
				case 1 :
					// CIL.g:1222:42: 'retargetable'
					{
					string_literal1641=(Token)match(input,447,FOLLOW_447_in_asmAttr28994); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1641_tree = (CommonTree)adaptor.create(string_literal1641);
					adaptor.addChild(root_0, string_literal1641_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1222:59: 'legacy' 'library'
					{
					string_literal1642=(Token)match(input,396,FOLLOW_396_in_asmAttr28998); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1642_tree = (CommonTree)adaptor.create(string_literal1642);
					adaptor.addChild(root_0, string_literal1642_tree);
					}

					string_literal1643=(Token)match(input,397,FOLLOW_397_in_asmAttr29000); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1643_tree = (CommonTree)adaptor.create(string_literal1643);
					adaptor.addChild(root_0, string_literal1643_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1222:80: 'cil'
					{
					string_literal1644=(Token)match(input,CIL,FOLLOW_CIL_in_asmAttr29004); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1644_tree = (CommonTree)adaptor.create(string_literal1644);
					adaptor.addChild(root_0, string_literal1644_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1222:88: 'x86'
					{
					string_literal1645=(Token)match(input,493,FOLLOW_493_in_asmAttr29008); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1645_tree = (CommonTree)adaptor.create(string_literal1645);
					adaptor.addChild(root_0, string_literal1645_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1222:96: 'ia64'
					{
					string_literal1646=(Token)match(input,377,FOLLOW_377_in_asmAttr29012); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1646_tree = (CommonTree)adaptor.create(string_literal1646);
					adaptor.addChild(root_0, string_literal1646_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:1222:105: 'amd64'
					{
					string_literal1647=(Token)match(input,328,FOLLOW_328_in_asmAttr29016); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1647_tree = (CommonTree)adaptor.create(string_literal1647);
					adaptor.addChild(root_0, string_literal1647_tree);
					}

					}
					break;

				default :
					break loop114;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "asmAttr"


	public static class assemblyDecls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assemblyDecls"
	// CIL.g:1225:1: assemblyDecls : () ( assemblyDecl )* ;
	public final CILParser.assemblyDecls_return assemblyDecls() throws RecognitionException {
		CILParser.assemblyDecls_return retval = new CILParser.assemblyDecls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope assemblyDecl1648 =null;


		try {
			// CIL.g:1225:25: ( () ( assemblyDecl )* )
			// CIL.g:1225:27: () ( assemblyDecl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1225:27: ()
			// CIL.g:1225:39: 
			{
			}

			// CIL.g:1225:41: ( assemblyDecl )*
			loop115:
			while (true) {
				int alt115=2;
				int LA115_0 = input.LA(1);
				if ( (LA115_0==272||LA115_0==282||LA115_0==286||(LA115_0 >= 298 && LA115_0 <= 299)||LA115_0==301||LA115_0==310||LA115_0==312) ) {
					alt115=1;
				}

				switch (alt115) {
				case 1 :
					// CIL.g:1225:42: assemblyDecl
					{
					pushFollow(FOLLOW_assemblyDecl_in_assemblyDecls29067);
					assemblyDecl1648=assemblyDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assemblyDecl1648.getTree());

					}
					break;

				default :
					break loop115;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "assemblyDecls"


	public static class assemblyDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assemblyDecl"
	// CIL.g:1228:1: assemblyDecl : ( '.hash' 'algorithm' int32 | secDecl | asmOrRefDecl );
	public final CILParser.assemblyDecl_return assemblyDecl() throws RecognitionException {
		CILParser.assemblyDecl_return retval = new CILParser.assemblyDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1649=null;
		Token string_literal1650=null;
		ParserRuleReturnScope int321651 =null;
		ParserRuleReturnScope secDecl1652 =null;
		ParserRuleReturnScope asmOrRefDecl1653 =null;

		CommonTree string_literal1649_tree=null;
		CommonTree string_literal1650_tree=null;

		try {
			// CIL.g:1228:25: ( '.hash' 'algorithm' int32 | secDecl | asmOrRefDecl )
			int alt116=3;
			switch ( input.LA(1) ) {
			case 282:
				{
				alt116=1;
				}
				break;
			case 298:
			case 299:
				{
				alt116=2;
				}
				break;
			case 272:
			case 286:
			case 301:
			case 310:
			case 312:
				{
				alt116=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 116, 0, input);
				throw nvae;
			}
			switch (alt116) {
				case 1 :
					// CIL.g:1228:27: '.hash' 'algorithm' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1649=(Token)match(input,282,FOLLOW_282_in_assemblyDecl29113); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1649_tree = (CommonTree)adaptor.create(string_literal1649);
					adaptor.addChild(root_0, string_literal1649_tree);
					}

					string_literal1650=(Token)match(input,326,FOLLOW_326_in_assemblyDecl29115); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1650_tree = (CommonTree)adaptor.create(string_literal1650);
					adaptor.addChild(root_0, string_literal1650_tree);
					}

					pushFollow(FOLLOW_int32_in_assemblyDecl29117);
					int321651=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321651.getTree());

					}
					break;
				case 2 :
					// CIL.g:1229:27: secDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_secDecl_in_assemblyDecl29146);
					secDecl1652=secDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secDecl1652.getTree());

					}
					break;
				case 3 :
					// CIL.g:1230:27: asmOrRefDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_asmOrRefDecl_in_assemblyDecl29174);
					asmOrRefDecl1653=asmOrRefDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, asmOrRefDecl1653.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "assemblyDecl"


	public static class intOrWildcard_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "intOrWildcard"
	// CIL.g:1233:1: intOrWildcard : ( int32 | '*' );
	public final CILParser.intOrWildcard_return intOrWildcard() throws RecognitionException {
		CILParser.intOrWildcard_return retval = new CILParser.intOrWildcard_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1655=null;
		ParserRuleReturnScope int321654 =null;

		CommonTree char_literal1655_tree=null;

		try {
			// CIL.g:1233:25: ( int32 | '*' )
			int alt117=2;
			int LA117_0 = input.LA(1);
			if ( (LA117_0==INT32) ) {
				alt117=1;
			}
			else if ( (LA117_0==260) ) {
				alt117=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 117, 0, input);
				throw nvae;
			}

			switch (alt117) {
				case 1 :
					// CIL.g:1233:27: int32
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_int32_in_intOrWildcard29241);
					int321654=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321654.getTree());

					}
					break;
				case 2 :
					// CIL.g:1234:27: '*'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal1655=(Token)match(input,260,FOLLOW_260_in_intOrWildcard29270); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1655_tree = (CommonTree)adaptor.create(char_literal1655);
					adaptor.addChild(root_0, char_literal1655_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "intOrWildcard"


	public static class asmOrRefDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "asmOrRefDecl"
	// CIL.g:1237:1: asmOrRefDecl : ( publicKeyHead bytes ')' | '.ver' intOrWildcard ':' intOrWildcard ':' intOrWildcard ':' intOrWildcard | '.locale' compQstring | localeHead bytes ')' | customAttrDecl );
	public final CILParser.asmOrRefDecl_return asmOrRefDecl() throws RecognitionException {
		CILParser.asmOrRefDecl_return retval = new CILParser.asmOrRefDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1658=null;
		Token string_literal1659=null;
		Token char_literal1661=null;
		Token char_literal1663=null;
		Token char_literal1665=null;
		Token string_literal1667=null;
		Token char_literal1671=null;
		ParserRuleReturnScope publicKeyHead1656 =null;
		ParserRuleReturnScope bytes1657 =null;
		ParserRuleReturnScope intOrWildcard1660 =null;
		ParserRuleReturnScope intOrWildcard1662 =null;
		ParserRuleReturnScope intOrWildcard1664 =null;
		ParserRuleReturnScope intOrWildcard1666 =null;
		ParserRuleReturnScope compQstring1668 =null;
		ParserRuleReturnScope localeHead1669 =null;
		ParserRuleReturnScope bytes1670 =null;
		ParserRuleReturnScope customAttrDecl1672 =null;

		CommonTree char_literal1658_tree=null;
		CommonTree string_literal1659_tree=null;
		CommonTree char_literal1661_tree=null;
		CommonTree char_literal1663_tree=null;
		CommonTree char_literal1665_tree=null;
		CommonTree string_literal1667_tree=null;
		CommonTree char_literal1671_tree=null;

		try {
			// CIL.g:1237:25: ( publicKeyHead bytes ')' | '.ver' intOrWildcard ':' intOrWildcard ':' intOrWildcard ':' intOrWildcard | '.locale' compQstring | localeHead bytes ')' | customAttrDecl )
			int alt118=5;
			switch ( input.LA(1) ) {
			case 301:
				{
				alt118=1;
				}
				break;
			case 312:
				{
				alt118=2;
				}
				break;
			case 286:
				{
				int LA118_3 = input.LA(2);
				if ( (LA118_3==321) ) {
					alt118=4;
				}
				else if ( (LA118_3==QSTRING) ) {
					alt118=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 118, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 272:
			case 310:
				{
				alt118=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 118, 0, input);
				throw nvae;
			}
			switch (alt118) {
				case 1 :
					// CIL.g:1237:27: publicKeyHead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_publicKeyHead_in_asmOrRefDecl29339);
					publicKeyHead1656=publicKeyHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, publicKeyHead1656.getTree());

					pushFollow(FOLLOW_bytes_in_asmOrRefDecl29341);
					bytes1657=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes1657.getTree());

					char_literal1658=(Token)match(input,259,FOLLOW_259_in_asmOrRefDecl29343); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1658_tree = (CommonTree)adaptor.create(char_literal1658);
					adaptor.addChild(root_0, char_literal1658_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1238:27: '.ver' intOrWildcard ':' intOrWildcard ':' intOrWildcard ':' intOrWildcard
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1659=(Token)match(input,312,FOLLOW_312_in_asmOrRefDecl29372); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1659_tree = (CommonTree)adaptor.create(string_literal1659);
					adaptor.addChild(root_0, string_literal1659_tree);
					}

					pushFollow(FOLLOW_intOrWildcard_in_asmOrRefDecl29374);
					intOrWildcard1660=intOrWildcard();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, intOrWildcard1660.getTree());

					char_literal1661=(Token)match(input,318,FOLLOW_318_in_asmOrRefDecl29376); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1661_tree = (CommonTree)adaptor.create(char_literal1661);
					adaptor.addChild(root_0, char_literal1661_tree);
					}

					pushFollow(FOLLOW_intOrWildcard_in_asmOrRefDecl29378);
					intOrWildcard1662=intOrWildcard();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, intOrWildcard1662.getTree());

					char_literal1663=(Token)match(input,318,FOLLOW_318_in_asmOrRefDecl29380); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1663_tree = (CommonTree)adaptor.create(char_literal1663);
					adaptor.addChild(root_0, char_literal1663_tree);
					}

					pushFollow(FOLLOW_intOrWildcard_in_asmOrRefDecl29382);
					intOrWildcard1664=intOrWildcard();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, intOrWildcard1664.getTree());

					char_literal1665=(Token)match(input,318,FOLLOW_318_in_asmOrRefDecl29384); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1665_tree = (CommonTree)adaptor.create(char_literal1665);
					adaptor.addChild(root_0, char_literal1665_tree);
					}

					pushFollow(FOLLOW_intOrWildcard_in_asmOrRefDecl29386);
					intOrWildcard1666=intOrWildcard();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, intOrWildcard1666.getTree());

					}
					break;
				case 3 :
					// CIL.g:1239:27: '.locale' compQstring
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1667=(Token)match(input,286,FOLLOW_286_in_asmOrRefDecl29415); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1667_tree = (CommonTree)adaptor.create(string_literal1667);
					adaptor.addChild(root_0, string_literal1667_tree);
					}

					pushFollow(FOLLOW_compQstring_in_asmOrRefDecl29417);
					compQstring1668=compQstring();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, compQstring1668.getTree());

					}
					break;
				case 4 :
					// CIL.g:1240:27: localeHead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_localeHead_in_asmOrRefDecl29446);
					localeHead1669=localeHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, localeHead1669.getTree());

					pushFollow(FOLLOW_bytes_in_asmOrRefDecl29448);
					bytes1670=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes1670.getTree());

					char_literal1671=(Token)match(input,259,FOLLOW_259_in_asmOrRefDecl29450); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1671_tree = (CommonTree)adaptor.create(char_literal1671);
					adaptor.addChild(root_0, char_literal1671_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1241:27: customAttrDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customAttrDecl_in_asmOrRefDecl29479);
					customAttrDecl1672=customAttrDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customAttrDecl1672.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "asmOrRefDecl"


	public static class publicKeyHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "publicKeyHead"
	// CIL.g:1244:1: publicKeyHead : '.publickey' '=' '(' ;
	public final CILParser.publicKeyHead_return publicKeyHead() throws RecognitionException {
		CILParser.publicKeyHead_return retval = new CILParser.publicKeyHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1673=null;
		Token char_literal1674=null;
		Token char_literal1675=null;

		CommonTree string_literal1673_tree=null;
		CommonTree char_literal1674_tree=null;
		CommonTree char_literal1675_tree=null;

		try {
			// CIL.g:1244:25: ( '.publickey' '=' '(' )
			// CIL.g:1244:27: '.publickey' '=' '('
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1673=(Token)match(input,301,FOLLOW_301_in_publicKeyHead29522); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1673_tree = (CommonTree)adaptor.create(string_literal1673);
			adaptor.addChild(root_0, string_literal1673_tree);
			}

			char_literal1674=(Token)match(input,321,FOLLOW_321_in_publicKeyHead29524); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1674_tree = (CommonTree)adaptor.create(char_literal1674);
			adaptor.addChild(root_0, char_literal1674_tree);
			}

			char_literal1675=(Token)match(input,258,FOLLOW_258_in_publicKeyHead29526); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1675_tree = (CommonTree)adaptor.create(char_literal1675);
			adaptor.addChild(root_0, char_literal1675_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "publicKeyHead"


	public static class publicKeyTokenHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "publicKeyTokenHead"
	// CIL.g:1247:1: publicKeyTokenHead : '.publickeytoken' '=' '(' ;
	public final CILParser.publicKeyTokenHead_return publicKeyTokenHead() throws RecognitionException {
		CILParser.publicKeyTokenHead_return retval = new CILParser.publicKeyTokenHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1676=null;
		Token char_literal1677=null;
		Token char_literal1678=null;

		CommonTree string_literal1676_tree=null;
		CommonTree char_literal1677_tree=null;
		CommonTree char_literal1678_tree=null;

		try {
			// CIL.g:1247:25: ( '.publickeytoken' '=' '(' )
			// CIL.g:1247:27: '.publickeytoken' '=' '('
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1676=(Token)match(input,302,FOLLOW_302_in_publicKeyTokenHead29565); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1676_tree = (CommonTree)adaptor.create(string_literal1676);
			adaptor.addChild(root_0, string_literal1676_tree);
			}

			char_literal1677=(Token)match(input,321,FOLLOW_321_in_publicKeyTokenHead29567); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1677_tree = (CommonTree)adaptor.create(char_literal1677);
			adaptor.addChild(root_0, char_literal1677_tree);
			}

			char_literal1678=(Token)match(input,258,FOLLOW_258_in_publicKeyTokenHead29569); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1678_tree = (CommonTree)adaptor.create(char_literal1678);
			adaptor.addChild(root_0, char_literal1678_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "publicKeyTokenHead"


	public static class localeHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "localeHead"
	// CIL.g:1250:1: localeHead : '.locale' '=' '(' ;
	public final CILParser.localeHead_return localeHead() throws RecognitionException {
		CILParser.localeHead_return retval = new CILParser.localeHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1679=null;
		Token char_literal1680=null;
		Token char_literal1681=null;

		CommonTree string_literal1679_tree=null;
		CommonTree char_literal1680_tree=null;
		CommonTree char_literal1681_tree=null;

		try {
			// CIL.g:1250:25: ( '.locale' '=' '(' )
			// CIL.g:1250:27: '.locale' '=' '('
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1679=(Token)match(input,286,FOLLOW_286_in_localeHead29616); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1679_tree = (CommonTree)adaptor.create(string_literal1679);
			adaptor.addChild(root_0, string_literal1679_tree);
			}

			char_literal1680=(Token)match(input,321,FOLLOW_321_in_localeHead29618); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1680_tree = (CommonTree)adaptor.create(char_literal1680);
			adaptor.addChild(root_0, char_literal1680_tree);
			}

			char_literal1681=(Token)match(input,258,FOLLOW_258_in_localeHead29620); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1681_tree = (CommonTree)adaptor.create(char_literal1681);
			adaptor.addChild(root_0, char_literal1681_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "localeHead"


	public static class assemblyRefHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assemblyRefHead"
	// CIL.g:1253:1: assemblyRefHead : ( '.assembly' 'extern' asmAttr dottedName | '.assembly' 'extern' asmAttr dottedName 'as' dottedName );
	public final CILParser.assemblyRefHead_return assemblyRefHead() throws RecognitionException {
		CILParser.assemblyRefHead_return retval = new CILParser.assemblyRefHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1682=null;
		Token string_literal1683=null;
		Token string_literal1686=null;
		Token string_literal1687=null;
		Token string_literal1690=null;
		ParserRuleReturnScope asmAttr1684 =null;
		ParserRuleReturnScope dottedName1685 =null;
		ParserRuleReturnScope asmAttr1688 =null;
		ParserRuleReturnScope dottedName1689 =null;
		ParserRuleReturnScope dottedName1691 =null;

		CommonTree string_literal1682_tree=null;
		CommonTree string_literal1683_tree=null;
		CommonTree string_literal1686_tree=null;
		CommonTree string_literal1687_tree=null;
		CommonTree string_literal1690_tree=null;

		try {
			// CIL.g:1253:25: ( '.assembly' 'extern' asmAttr dottedName | '.assembly' 'extern' asmAttr dottedName 'as' dottedName )
			int alt119=2;
			int LA119_0 = input.LA(1);
			if ( (LA119_0==266) ) {
				int LA119_1 = input.LA(2);
				if ( (synpred802_CIL()) ) {
					alt119=1;
				}
				else if ( (true) ) {
					alt119=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 119, 0, input);
				throw nvae;
			}

			switch (alt119) {
				case 1 :
					// CIL.g:1253:27: '.assembly' 'extern' asmAttr dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1682=(Token)match(input,266,FOLLOW_266_in_assemblyRefHead29662); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1682_tree = (CommonTree)adaptor.create(string_literal1682);
					adaptor.addChild(root_0, string_literal1682_tree);
					}

					string_literal1683=(Token)match(input,354,FOLLOW_354_in_assemblyRefHead29664); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1683_tree = (CommonTree)adaptor.create(string_literal1683);
					adaptor.addChild(root_0, string_literal1683_tree);
					}

					pushFollow(FOLLOW_asmAttr_in_assemblyRefHead29666);
					asmAttr1684=asmAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, asmAttr1684.getTree());

					pushFollow(FOLLOW_dottedName_in_assemblyRefHead29668);
					dottedName1685=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1685.getTree());

					}
					break;
				case 2 :
					// CIL.g:1254:27: '.assembly' 'extern' asmAttr dottedName 'as' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1686=(Token)match(input,266,FOLLOW_266_in_assemblyRefHead29697); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1686_tree = (CommonTree)adaptor.create(string_literal1686);
					adaptor.addChild(root_0, string_literal1686_tree);
					}

					string_literal1687=(Token)match(input,354,FOLLOW_354_in_assemblyRefHead29699); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1687_tree = (CommonTree)adaptor.create(string_literal1687);
					adaptor.addChild(root_0, string_literal1687_tree);
					}

					pushFollow(FOLLOW_asmAttr_in_assemblyRefHead29701);
					asmAttr1688=asmAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, asmAttr1688.getTree());

					pushFollow(FOLLOW_dottedName_in_assemblyRefHead29703);
					dottedName1689=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1689.getTree());

					string_literal1690=(Token)match(input,332,FOLLOW_332_in_assemblyRefHead29705); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1690_tree = (CommonTree)adaptor.create(string_literal1690);
					adaptor.addChild(root_0, string_literal1690_tree);
					}

					pushFollow(FOLLOW_dottedName_in_assemblyRefHead29707);
					dottedName1691=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1691.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "assemblyRefHead"


	public static class assemblyRefDecls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assemblyRefDecls"
	// CIL.g:1257:1: assemblyRefDecls : () ( assemblyRefDecl )* ;
	public final CILParser.assemblyRefDecls_return assemblyRefDecls() throws RecognitionException {
		CILParser.assemblyRefDecls_return retval = new CILParser.assemblyRefDecls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope assemblyRefDecl1692 =null;


		try {
			// CIL.g:1257:25: ( () ( assemblyRefDecl )* )
			// CIL.g:1257:27: () ( assemblyRefDecl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1257:27: ()
			// CIL.g:1257:39: 
			{
			}

			// CIL.g:1257:41: ( assemblyRefDecl )*
			loop120:
			while (true) {
				int alt120=2;
				int LA120_0 = input.LA(1);
				if ( (LA120_0==272||LA120_0==282||LA120_0==286||(LA120_0 >= 301 && LA120_0 <= 302)||LA120_0==310||LA120_0==312||LA120_0==336) ) {
					alt120=1;
				}

				switch (alt120) {
				case 1 :
					// CIL.g:1257:42: assemblyRefDecl
					{
					pushFollow(FOLLOW_assemblyRefDecl_in_assemblyRefDecls29753);
					assemblyRefDecl1692=assemblyRefDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assemblyRefDecl1692.getTree());

					}
					break;

				default :
					break loop120;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "assemblyRefDecls"


	public static class assemblyRefDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assemblyRefDecl"
	// CIL.g:1260:1: assemblyRefDecl : ( hashHead bytes ')' | asmOrRefDecl | publicKeyTokenHead bytes ')' | 'auto' );
	public final CILParser.assemblyRefDecl_return assemblyRefDecl() throws RecognitionException {
		CILParser.assemblyRefDecl_return retval = new CILParser.assemblyRefDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token char_literal1695=null;
		Token char_literal1699=null;
		Token string_literal1700=null;
		ParserRuleReturnScope hashHead1693 =null;
		ParserRuleReturnScope bytes1694 =null;
		ParserRuleReturnScope asmOrRefDecl1696 =null;
		ParserRuleReturnScope publicKeyTokenHead1697 =null;
		ParserRuleReturnScope bytes1698 =null;

		CommonTree char_literal1695_tree=null;
		CommonTree char_literal1699_tree=null;
		CommonTree string_literal1700_tree=null;

		try {
			// CIL.g:1260:25: ( hashHead bytes ')' | asmOrRefDecl | publicKeyTokenHead bytes ')' | 'auto' )
			int alt121=4;
			switch ( input.LA(1) ) {
			case 282:
				{
				alt121=1;
				}
				break;
			case 272:
			case 286:
			case 301:
			case 310:
			case 312:
				{
				alt121=2;
				}
				break;
			case 302:
				{
				alt121=3;
				}
				break;
			case 336:
				{
				alt121=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 121, 0, input);
				throw nvae;
			}
			switch (alt121) {
				case 1 :
					// CIL.g:1260:27: hashHead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_hashHead_in_assemblyRefDecl29796);
					hashHead1693=hashHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, hashHead1693.getTree());

					pushFollow(FOLLOW_bytes_in_assemblyRefDecl29798);
					bytes1694=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes1694.getTree());

					char_literal1695=(Token)match(input,259,FOLLOW_259_in_assemblyRefDecl29800); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1695_tree = (CommonTree)adaptor.create(char_literal1695);
					adaptor.addChild(root_0, char_literal1695_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1261:27: asmOrRefDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_asmOrRefDecl_in_assemblyRefDecl29829);
					asmOrRefDecl1696=asmOrRefDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, asmOrRefDecl1696.getTree());

					}
					break;
				case 3 :
					// CIL.g:1262:27: publicKeyTokenHead bytes ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_publicKeyTokenHead_in_assemblyRefDecl29857);
					publicKeyTokenHead1697=publicKeyTokenHead();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, publicKeyTokenHead1697.getTree());

					pushFollow(FOLLOW_bytes_in_assemblyRefDecl29859);
					bytes1698=bytes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bytes1698.getTree());

					char_literal1699=(Token)match(input,259,FOLLOW_259_in_assemblyRefDecl29861); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1699_tree = (CommonTree)adaptor.create(char_literal1699);
					adaptor.addChild(root_0, char_literal1699_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1263:27: 'auto'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1700=(Token)match(input,336,FOLLOW_336_in_assemblyRefDecl29890); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1700_tree = (CommonTree)adaptor.create(string_literal1700);
					adaptor.addChild(root_0, string_literal1700_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "assemblyRefDecl"


	public static class exptypeHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "exptypeHead"
	// CIL.g:1266:1: exptypeHead : '.class' 'extern' exptAttr dottedName ;
	public final CILParser.exptypeHead_return exptypeHead() throws RecognitionException {
		CILParser.exptypeHead_return retval = new CILParser.exptypeHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1701=null;
		Token string_literal1702=null;
		ParserRuleReturnScope exptAttr1703 =null;
		ParserRuleReturnScope dottedName1704 =null;

		CommonTree string_literal1701_tree=null;
		CommonTree string_literal1702_tree=null;

		try {
			// CIL.g:1266:25: ( '.class' 'extern' exptAttr dottedName )
			// CIL.g:1266:27: '.class' 'extern' exptAttr dottedName
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1701=(Token)match(input,269,FOLLOW_269_in_exptypeHead29936); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1701_tree = (CommonTree)adaptor.create(string_literal1701);
			adaptor.addChild(root_0, string_literal1701_tree);
			}

			string_literal1702=(Token)match(input,354,FOLLOW_354_in_exptypeHead29938); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1702_tree = (CommonTree)adaptor.create(string_literal1702);
			adaptor.addChild(root_0, string_literal1702_tree);
			}

			pushFollow(FOLLOW_exptAttr_in_exptypeHead29940);
			exptAttr1703=exptAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, exptAttr1703.getTree());

			pushFollow(FOLLOW_dottedName_in_exptypeHead29942);
			dottedName1704=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1704.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exptypeHead"


	public static class exportHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "exportHead"
	// CIL.g:1269:1: exportHead : '.export' exptAttr dottedName ;
	public final CILParser.exportHead_return exportHead() throws RecognitionException {
		CILParser.exportHead_return retval = new CILParser.exportHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1705=null;
		ParserRuleReturnScope exptAttr1706 =null;
		ParserRuleReturnScope dottedName1707 =null;

		CommonTree string_literal1705_tree=null;

		try {
			// CIL.g:1269:25: ( '.export' exptAttr dottedName )
			// CIL.g:1269:27: '.export' exptAttr dottedName
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1705=(Token)match(input,277,FOLLOW_277_in_exportHead29990); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1705_tree = (CommonTree)adaptor.create(string_literal1705);
			adaptor.addChild(root_0, string_literal1705_tree);
			}

			pushFollow(FOLLOW_exptAttr_in_exportHead29992);
			exptAttr1706=exptAttr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, exptAttr1706.getTree());

			pushFollow(FOLLOW_dottedName_in_exportHead29994);
			dottedName1707=dottedName();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1707.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exportHead"


	public static class exptAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "exptAttr"
	// CIL.g:1272:1: exptAttr : () ( 'private' | 'public' | 'forwarder' | 'nested' 'public' | 'nested' 'private' | 'nested' 'family' | 'nested' 'assembly' | 'nested' 'famandassem' | 'nested' 'famorassem' )* ;
	public final CILParser.exptAttr_return exptAttr() throws RecognitionException {
		CILParser.exptAttr_return retval = new CILParser.exptAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1708=null;
		Token string_literal1709=null;
		Token string_literal1710=null;
		Token string_literal1711=null;
		Token string_literal1712=null;
		Token string_literal1713=null;
		Token string_literal1714=null;
		Token string_literal1715=null;
		Token string_literal1716=null;
		Token string_literal1717=null;
		Token string_literal1718=null;
		Token string_literal1719=null;
		Token string_literal1720=null;
		Token string_literal1721=null;
		Token string_literal1722=null;

		CommonTree string_literal1708_tree=null;
		CommonTree string_literal1709_tree=null;
		CommonTree string_literal1710_tree=null;
		CommonTree string_literal1711_tree=null;
		CommonTree string_literal1712_tree=null;
		CommonTree string_literal1713_tree=null;
		CommonTree string_literal1714_tree=null;
		CommonTree string_literal1715_tree=null;
		CommonTree string_literal1716_tree=null;
		CommonTree string_literal1717_tree=null;
		CommonTree string_literal1718_tree=null;
		CommonTree string_literal1719_tree=null;
		CommonTree string_literal1720_tree=null;
		CommonTree string_literal1721_tree=null;
		CommonTree string_literal1722_tree=null;

		try {
			// CIL.g:1272:25: ( () ( 'private' | 'public' | 'forwarder' | 'nested' 'public' | 'nested' 'private' | 'nested' 'family' | 'nested' 'assembly' | 'nested' 'famandassem' | 'nested' 'famorassem' )* )
			// CIL.g:1272:27: () ( 'private' | 'public' | 'forwarder' | 'nested' 'public' | 'nested' 'private' | 'nested' 'family' | 'nested' 'assembly' | 'nested' 'famandassem' | 'nested' 'famorassem' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1272:27: ()
			// CIL.g:1272:39: 
			{
			}

			// CIL.g:1272:41: ( 'private' | 'public' | 'forwarder' | 'nested' 'public' | 'nested' 'private' | 'nested' 'family' | 'nested' 'assembly' | 'nested' 'famandassem' | 'nested' 'famorassem' )*
			loop122:
			while (true) {
				int alt122=10;
				switch ( input.LA(1) ) {
				case 437:
					{
					alt122=1;
					}
					break;
				case 440:
					{
					alt122=2;
					}
					break;
				case 371:
					{
					alt122=3;
					}
					break;
				case 411:
					{
					switch ( input.LA(2) ) {
					case 440:
						{
						alt122=4;
						}
						break;
					case 437:
						{
						alt122=5;
						}
						break;
					case 357:
						{
						alt122=6;
						}
						break;
					case 333:
						{
						alt122=7;
						}
						break;
					case 356:
						{
						alt122=8;
						}
						break;
					case 358:
						{
						alt122=9;
						}
						break;
					}
					}
					break;
				}
				switch (alt122) {
				case 1 :
					// CIL.g:1272:42: 'private'
					{
					string_literal1708=(Token)match(input,437,FOLLOW_437_in_exptAttr30052); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1708_tree = (CommonTree)adaptor.create(string_literal1708);
					adaptor.addChild(root_0, string_literal1708_tree);
					}

					}
					break;
				case 2 :
					// CIL.g:1272:54: 'public'
					{
					string_literal1709=(Token)match(input,440,FOLLOW_440_in_exptAttr30056); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1709_tree = (CommonTree)adaptor.create(string_literal1709);
					adaptor.addChild(root_0, string_literal1709_tree);
					}

					}
					break;
				case 3 :
					// CIL.g:1272:65: 'forwarder'
					{
					string_literal1710=(Token)match(input,371,FOLLOW_371_in_exptAttr30060); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1710_tree = (CommonTree)adaptor.create(string_literal1710);
					adaptor.addChild(root_0, string_literal1710_tree);
					}

					}
					break;
				case 4 :
					// CIL.g:1272:79: 'nested' 'public'
					{
					string_literal1711=(Token)match(input,411,FOLLOW_411_in_exptAttr30064); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1711_tree = (CommonTree)adaptor.create(string_literal1711);
					adaptor.addChild(root_0, string_literal1711_tree);
					}

					string_literal1712=(Token)match(input,440,FOLLOW_440_in_exptAttr30066); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1712_tree = (CommonTree)adaptor.create(string_literal1712);
					adaptor.addChild(root_0, string_literal1712_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1272:99: 'nested' 'private'
					{
					string_literal1713=(Token)match(input,411,FOLLOW_411_in_exptAttr30070); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1713_tree = (CommonTree)adaptor.create(string_literal1713);
					adaptor.addChild(root_0, string_literal1713_tree);
					}

					string_literal1714=(Token)match(input,437,FOLLOW_437_in_exptAttr30072); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1714_tree = (CommonTree)adaptor.create(string_literal1714);
					adaptor.addChild(root_0, string_literal1714_tree);
					}

					}
					break;
				case 6 :
					// CIL.g:1272:120: 'nested' 'family'
					{
					string_literal1715=(Token)match(input,411,FOLLOW_411_in_exptAttr30076); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1715_tree = (CommonTree)adaptor.create(string_literal1715);
					adaptor.addChild(root_0, string_literal1715_tree);
					}

					string_literal1716=(Token)match(input,357,FOLLOW_357_in_exptAttr30078); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1716_tree = (CommonTree)adaptor.create(string_literal1716);
					adaptor.addChild(root_0, string_literal1716_tree);
					}

					}
					break;
				case 7 :
					// CIL.g:1272:140: 'nested' 'assembly'
					{
					string_literal1717=(Token)match(input,411,FOLLOW_411_in_exptAttr30082); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1717_tree = (CommonTree)adaptor.create(string_literal1717);
					adaptor.addChild(root_0, string_literal1717_tree);
					}

					string_literal1718=(Token)match(input,333,FOLLOW_333_in_exptAttr30084); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1718_tree = (CommonTree)adaptor.create(string_literal1718);
					adaptor.addChild(root_0, string_literal1718_tree);
					}

					}
					break;
				case 8 :
					// CIL.g:1272:162: 'nested' 'famandassem'
					{
					string_literal1719=(Token)match(input,411,FOLLOW_411_in_exptAttr30088); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1719_tree = (CommonTree)adaptor.create(string_literal1719);
					adaptor.addChild(root_0, string_literal1719_tree);
					}

					string_literal1720=(Token)match(input,356,FOLLOW_356_in_exptAttr30090); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1720_tree = (CommonTree)adaptor.create(string_literal1720);
					adaptor.addChild(root_0, string_literal1720_tree);
					}

					}
					break;
				case 9 :
					// CIL.g:1272:187: 'nested' 'famorassem'
					{
					string_literal1721=(Token)match(input,411,FOLLOW_411_in_exptAttr30094); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1721_tree = (CommonTree)adaptor.create(string_literal1721);
					adaptor.addChild(root_0, string_literal1721_tree);
					}

					string_literal1722=(Token)match(input,358,FOLLOW_358_in_exptAttr30096); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1722_tree = (CommonTree)adaptor.create(string_literal1722);
					adaptor.addChild(root_0, string_literal1722_tree);
					}

					}
					break;

				default :
					break loop122;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exptAttr"


	public static class exptypeDecls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "exptypeDecls"
	// CIL.g:1275:1: exptypeDecls : () ( exptypeDecl )* ;
	public final CILParser.exptypeDecls_return exptypeDecls() throws RecognitionException {
		CILParser.exptypeDecls_return retval = new CILParser.exptypeDecls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope exptypeDecl1723 =null;


		try {
			// CIL.g:1275:25: ( () ( exptypeDecl )* )
			// CIL.g:1275:27: () ( exptypeDecl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1275:27: ()
			// CIL.g:1275:39: 
			{
			}

			// CIL.g:1275:41: ( exptypeDecl )*
			loop123:
			while (true) {
				int alt123=2;
				int LA123_0 = input.LA(1);
				if ( (LA123_0==266||LA123_0==269||LA123_0==272||LA123_0==279||LA123_0==310||LA123_0==406) ) {
					alt123=1;
				}

				switch (alt123) {
				case 1 :
					// CIL.g:1275:42: exptypeDecl
					{
					pushFollow(FOLLOW_exptypeDecl_in_exptypeDecls30148);
					exptypeDecl1723=exptypeDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exptypeDecl1723.getTree());

					}
					break;

				default :
					break loop123;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exptypeDecls"


	public static class exptypeDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "exptypeDecl"
	// CIL.g:1278:1: exptypeDecl : ( '.file' dottedName | '.class' 'extern' slashedName | '.assembly' 'extern' dottedName | 'mdtoken' '(' int32 ')' | '.class' int32 | customAttrDecl );
	public final CILParser.exptypeDecl_return exptypeDecl() throws RecognitionException {
		CILParser.exptypeDecl_return retval = new CILParser.exptypeDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1724=null;
		Token string_literal1726=null;
		Token string_literal1727=null;
		Token string_literal1729=null;
		Token string_literal1730=null;
		Token string_literal1732=null;
		Token char_literal1733=null;
		Token char_literal1735=null;
		Token string_literal1736=null;
		ParserRuleReturnScope dottedName1725 =null;
		ParserRuleReturnScope slashedName1728 =null;
		ParserRuleReturnScope dottedName1731 =null;
		ParserRuleReturnScope int321734 =null;
		ParserRuleReturnScope int321737 =null;
		ParserRuleReturnScope customAttrDecl1738 =null;

		CommonTree string_literal1724_tree=null;
		CommonTree string_literal1726_tree=null;
		CommonTree string_literal1727_tree=null;
		CommonTree string_literal1729_tree=null;
		CommonTree string_literal1730_tree=null;
		CommonTree string_literal1732_tree=null;
		CommonTree char_literal1733_tree=null;
		CommonTree char_literal1735_tree=null;
		CommonTree string_literal1736_tree=null;

		try {
			// CIL.g:1278:25: ( '.file' dottedName | '.class' 'extern' slashedName | '.assembly' 'extern' dottedName | 'mdtoken' '(' int32 ')' | '.class' int32 | customAttrDecl )
			int alt124=6;
			switch ( input.LA(1) ) {
			case 279:
				{
				alt124=1;
				}
				break;
			case 269:
				{
				int LA124_2 = input.LA(2);
				if ( (LA124_2==354) ) {
					alt124=2;
				}
				else if ( (LA124_2==INT32) ) {
					alt124=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 124, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 266:
				{
				alt124=3;
				}
				break;
			case 406:
				{
				alt124=4;
				}
				break;
			case 272:
			case 310:
				{
				alt124=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 124, 0, input);
				throw nvae;
			}
			switch (alt124) {
				case 1 :
					// CIL.g:1278:27: '.file' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1724=(Token)match(input,279,FOLLOW_279_in_exptypeDecl30195); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1724_tree = (CommonTree)adaptor.create(string_literal1724);
					adaptor.addChild(root_0, string_literal1724_tree);
					}

					pushFollow(FOLLOW_dottedName_in_exptypeDecl30197);
					dottedName1725=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1725.getTree());

					}
					break;
				case 2 :
					// CIL.g:1279:27: '.class' 'extern' slashedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1726=(Token)match(input,269,FOLLOW_269_in_exptypeDecl30226); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1726_tree = (CommonTree)adaptor.create(string_literal1726);
					adaptor.addChild(root_0, string_literal1726_tree);
					}

					string_literal1727=(Token)match(input,354,FOLLOW_354_in_exptypeDecl30228); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1727_tree = (CommonTree)adaptor.create(string_literal1727);
					adaptor.addChild(root_0, string_literal1727_tree);
					}

					pushFollow(FOLLOW_slashedName_in_exptypeDecl30230);
					slashedName1728=slashedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, slashedName1728.getTree());

					}
					break;
				case 3 :
					// CIL.g:1280:27: '.assembly' 'extern' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1729=(Token)match(input,266,FOLLOW_266_in_exptypeDecl30259); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1729_tree = (CommonTree)adaptor.create(string_literal1729);
					adaptor.addChild(root_0, string_literal1729_tree);
					}

					string_literal1730=(Token)match(input,354,FOLLOW_354_in_exptypeDecl30261); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1730_tree = (CommonTree)adaptor.create(string_literal1730);
					adaptor.addChild(root_0, string_literal1730_tree);
					}

					pushFollow(FOLLOW_dottedName_in_exptypeDecl30263);
					dottedName1731=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1731.getTree());

					}
					break;
				case 4 :
					// CIL.g:1281:27: 'mdtoken' '(' int32 ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1732=(Token)match(input,406,FOLLOW_406_in_exptypeDecl30292); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1732_tree = (CommonTree)adaptor.create(string_literal1732);
					adaptor.addChild(root_0, string_literal1732_tree);
					}

					char_literal1733=(Token)match(input,258,FOLLOW_258_in_exptypeDecl30294); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1733_tree = (CommonTree)adaptor.create(char_literal1733);
					adaptor.addChild(root_0, char_literal1733_tree);
					}

					pushFollow(FOLLOW_int32_in_exptypeDecl30296);
					int321734=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321734.getTree());

					char_literal1735=(Token)match(input,259,FOLLOW_259_in_exptypeDecl30298); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1735_tree = (CommonTree)adaptor.create(char_literal1735);
					adaptor.addChild(root_0, char_literal1735_tree);
					}

					}
					break;
				case 5 :
					// CIL.g:1282:27: '.class' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1736=(Token)match(input,269,FOLLOW_269_in_exptypeDecl30327); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1736_tree = (CommonTree)adaptor.create(string_literal1736);
					adaptor.addChild(root_0, string_literal1736_tree);
					}

					pushFollow(FOLLOW_int32_in_exptypeDecl30330);
					int321737=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321737.getTree());

					}
					break;
				case 6 :
					// CIL.g:1283:27: customAttrDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customAttrDecl_in_exptypeDecl30359);
					customAttrDecl1738=customAttrDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customAttrDecl1738.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exptypeDecl"


	public static class manifestResHead_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "manifestResHead"
	// CIL.g:1286:1: manifestResHead : ( '.mresource' manresAttr dottedName | '.mresource' manresAttr dottedName 'as' dottedName );
	public final CILParser.manifestResHead_return manifestResHead() throws RecognitionException {
		CILParser.manifestResHead_return retval = new CILParser.manifestResHead_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1739=null;
		Token string_literal1742=null;
		Token string_literal1745=null;
		ParserRuleReturnScope manresAttr1740 =null;
		ParserRuleReturnScope dottedName1741 =null;
		ParserRuleReturnScope manresAttr1743 =null;
		ParserRuleReturnScope dottedName1744 =null;
		ParserRuleReturnScope dottedName1746 =null;

		CommonTree string_literal1739_tree=null;
		CommonTree string_literal1742_tree=null;
		CommonTree string_literal1745_tree=null;

		try {
			// CIL.g:1286:25: ( '.mresource' manresAttr dottedName | '.mresource' manresAttr dottedName 'as' dottedName )
			int alt125=2;
			int LA125_0 = input.LA(1);
			if ( (LA125_0==291) ) {
				int LA125_1 = input.LA(2);
				if ( (synpred822_CIL()) ) {
					alt125=1;
				}
				else if ( (true) ) {
					alt125=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 125, 0, input);
				throw nvae;
			}

			switch (alt125) {
				case 1 :
					// CIL.g:1286:27: '.mresource' manresAttr dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1739=(Token)match(input,291,FOLLOW_291_in_manifestResHead30400); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1739_tree = (CommonTree)adaptor.create(string_literal1739);
					adaptor.addChild(root_0, string_literal1739_tree);
					}

					pushFollow(FOLLOW_manresAttr_in_manifestResHead30402);
					manresAttr1740=manresAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, manresAttr1740.getTree());

					pushFollow(FOLLOW_dottedName_in_manifestResHead30404);
					dottedName1741=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1741.getTree());

					}
					break;
				case 2 :
					// CIL.g:1287:27: '.mresource' manresAttr dottedName 'as' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1742=(Token)match(input,291,FOLLOW_291_in_manifestResHead30433); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1742_tree = (CommonTree)adaptor.create(string_literal1742);
					adaptor.addChild(root_0, string_literal1742_tree);
					}

					pushFollow(FOLLOW_manresAttr_in_manifestResHead30435);
					manresAttr1743=manresAttr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, manresAttr1743.getTree());

					pushFollow(FOLLOW_dottedName_in_manifestResHead30437);
					dottedName1744=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1744.getTree());

					string_literal1745=(Token)match(input,332,FOLLOW_332_in_manifestResHead30439); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1745_tree = (CommonTree)adaptor.create(string_literal1745);
					adaptor.addChild(root_0, string_literal1745_tree);
					}

					pushFollow(FOLLOW_dottedName_in_manifestResHead30441);
					dottedName1746=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1746.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "manifestResHead"


	public static class manresAttr_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "manresAttr"
	// CIL.g:1290:1: manresAttr : () ( 'public' | 'private' )* ;
	public final CILParser.manresAttr_return manresAttr() throws RecognitionException {
		CILParser.manresAttr_return retval = new CILParser.manresAttr_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token set1747=null;

		CommonTree set1747_tree=null;

		try {
			// CIL.g:1290:25: ( () ( 'public' | 'private' )* )
			// CIL.g:1290:27: () ( 'public' | 'private' )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1290:27: ()
			// CIL.g:1290:39: 
			{
			}

			// CIL.g:1290:41: ( 'public' | 'private' )*
			loop126:
			while (true) {
				int alt126=2;
				int LA126_0 = input.LA(1);
				if ( (LA126_0==437||LA126_0==440) ) {
					alt126=1;
				}

				switch (alt126) {
				case 1 :
					// CIL.g:
					{
					set1747=input.LT(1);
					if ( input.LA(1)==437||input.LA(1)==440 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1747));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

				default :
					break loop126;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "manresAttr"


	public static class manifestResDecls_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "manifestResDecls"
	// CIL.g:1293:1: manifestResDecls : () ( manifestResDecl )* ;
	public final CILParser.manifestResDecls_return manifestResDecls() throws RecognitionException {
		CILParser.manifestResDecls_return retval = new CILParser.manifestResDecls_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope manifestResDecl1748 =null;


		try {
			// CIL.g:1293:25: ( () ( manifestResDecl )* )
			// CIL.g:1293:27: () ( manifestResDecl )*
			{
			root_0 = (CommonTree)adaptor.nil();


			// CIL.g:1293:27: ()
			// CIL.g:1293:39: 
			{
			}

			// CIL.g:1293:41: ( manifestResDecl )*
			loop127:
			while (true) {
				int alt127=2;
				int LA127_0 = input.LA(1);
				if ( (LA127_0==266||LA127_0==272||LA127_0==279||LA127_0==310) ) {
					alt127=1;
				}

				switch (alt127) {
				case 1 :
					// CIL.g:1293:42: manifestResDecl
					{
					pushFollow(FOLLOW_manifestResDecl_in_manifestResDecls30545);
					manifestResDecl1748=manifestResDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, manifestResDecl1748.getTree());

					}
					break;

				default :
					break loop127;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "manifestResDecls"


	public static class manifestResDecl_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "manifestResDecl"
	// CIL.g:1296:1: manifestResDecl : ( '.file' dottedName 'at' int32 | '.assembly' 'extern' dottedName | customAttrDecl );
	public final CILParser.manifestResDecl_return manifestResDecl() throws RecognitionException {
		CILParser.manifestResDecl_return retval = new CILParser.manifestResDecl_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token string_literal1749=null;
		Token string_literal1751=null;
		Token string_literal1753=null;
		Token string_literal1754=null;
		ParserRuleReturnScope dottedName1750 =null;
		ParserRuleReturnScope int321752 =null;
		ParserRuleReturnScope dottedName1755 =null;
		ParserRuleReturnScope customAttrDecl1756 =null;

		CommonTree string_literal1749_tree=null;
		CommonTree string_literal1751_tree=null;
		CommonTree string_literal1753_tree=null;
		CommonTree string_literal1754_tree=null;

		try {
			// CIL.g:1296:25: ( '.file' dottedName 'at' int32 | '.assembly' 'extern' dottedName | customAttrDecl )
			int alt128=3;
			switch ( input.LA(1) ) {
			case 279:
				{
				alt128=1;
				}
				break;
			case 266:
				{
				alt128=2;
				}
				break;
			case 272:
			case 310:
				{
				alt128=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 128, 0, input);
				throw nvae;
			}
			switch (alt128) {
				case 1 :
					// CIL.g:1296:27: '.file' dottedName 'at' int32
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1749=(Token)match(input,279,FOLLOW_279_in_manifestResDecl30588); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1749_tree = (CommonTree)adaptor.create(string_literal1749);
					adaptor.addChild(root_0, string_literal1749_tree);
					}

					pushFollow(FOLLOW_dottedName_in_manifestResDecl30590);
					dottedName1750=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1750.getTree());

					string_literal1751=(Token)match(input,335,FOLLOW_335_in_manifestResDecl30592); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1751_tree = (CommonTree)adaptor.create(string_literal1751);
					adaptor.addChild(root_0, string_literal1751_tree);
					}

					pushFollow(FOLLOW_int32_in_manifestResDecl30594);
					int321752=int32();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, int321752.getTree());

					}
					break;
				case 2 :
					// CIL.g:1297:27: '.assembly' 'extern' dottedName
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal1753=(Token)match(input,266,FOLLOW_266_in_manifestResDecl30623); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1753_tree = (CommonTree)adaptor.create(string_literal1753);
					adaptor.addChild(root_0, string_literal1753_tree);
					}

					string_literal1754=(Token)match(input,354,FOLLOW_354_in_manifestResDecl30625); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1754_tree = (CommonTree)adaptor.create(string_literal1754);
					adaptor.addChild(root_0, string_literal1754_tree);
					}

					pushFollow(FOLLOW_dottedName_in_manifestResDecl30627);
					dottedName1755=dottedName();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dottedName1755.getTree());

					}
					break;
				case 3 :
					// CIL.g:1298:27: customAttrDecl
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_customAttrDecl_in_manifestResDecl30656);
					customAttrDecl1756=customAttrDecl();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, customAttrDecl1756.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "manifestResDecl"

	// $ANTLR start synpred2_CIL
	public final void synpred2_CIL_fragment() throws RecognitionException {
		// CIL.g:322:27: ( classHead '{' classDecls '}' )
		// CIL.g:322:27: classHead '{' classDecls '}'
		{
		pushFollow(FOLLOW_classHead_in_synpred2_CIL6025);
		classHead();
		state._fsp--;
		if (state.failed) return;

		match(input,494,FOLLOW_494_in_synpred2_CIL6027); if (state.failed) return;

		pushFollow(FOLLOW_classDecls_in_synpred2_CIL6029);
		classDecls();
		state._fsp--;
		if (state.failed) return;

		match(input,495,FOLLOW_495_in_synpred2_CIL6031); if (state.failed) return;

		}

	}
	// $ANTLR end synpred2_CIL

	// $ANTLR start synpred10_CIL
	public final void synpred10_CIL_fragment() throws RecognitionException {
		// CIL.g:330:27: ( fileDecl )
		// CIL.g:330:27: fileDecl
		{
		pushFollow(FOLLOW_fileDecl_in_synpred10_CIL6269);
		fileDecl();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred10_CIL

	// $ANTLR start synpred11_CIL
	public final void synpred11_CIL_fragment() throws RecognitionException {
		// CIL.g:331:27: ( assemblyHead '{' assemblyDecls '}' )
		// CIL.g:331:27: assemblyHead '{' assemblyDecls '}'
		{
		pushFollow(FOLLOW_assemblyHead_in_synpred11_CIL6297);
		assemblyHead();
		state._fsp--;
		if (state.failed) return;

		match(input,494,FOLLOW_494_in_synpred11_CIL6299); if (state.failed) return;

		pushFollow(FOLLOW_assemblyDecls_in_synpred11_CIL6301);
		assemblyDecls();
		state._fsp--;
		if (state.failed) return;

		match(input,495,FOLLOW_495_in_synpred11_CIL6303); if (state.failed) return;

		}

	}
	// $ANTLR end synpred11_CIL

	// $ANTLR start synpred12_CIL
	public final void synpred12_CIL_fragment() throws RecognitionException {
		// CIL.g:332:27: ( assemblyRefHead '{' assemblyRefDecls '}' )
		// CIL.g:332:27: assemblyRefHead '{' assemblyRefDecls '}'
		{
		pushFollow(FOLLOW_assemblyRefHead_in_synpred12_CIL6332);
		assemblyRefHead();
		state._fsp--;
		if (state.failed) return;

		match(input,494,FOLLOW_494_in_synpred12_CIL6334); if (state.failed) return;

		pushFollow(FOLLOW_assemblyRefDecls_in_synpred12_CIL6336);
		assemblyRefDecls();
		state._fsp--;
		if (state.failed) return;

		match(input,495,FOLLOW_495_in_synpred12_CIL6338); if (state.failed) return;

		}

	}
	// $ANTLR end synpred12_CIL

	// $ANTLR start synpred13_CIL
	public final void synpred13_CIL_fragment() throws RecognitionException {
		// CIL.g:333:27: ( exptypeHead '{' exptypeDecls '}' )
		// CIL.g:333:27: exptypeHead '{' exptypeDecls '}'
		{
		pushFollow(FOLLOW_exptypeHead_in_synpred13_CIL6367);
		exptypeHead();
		state._fsp--;
		if (state.failed) return;

		match(input,494,FOLLOW_494_in_synpred13_CIL6369); if (state.failed) return;

		pushFollow(FOLLOW_exptypeDecls_in_synpred13_CIL6371);
		exptypeDecls();
		state._fsp--;
		if (state.failed) return;

		match(input,495,FOLLOW_495_in_synpred13_CIL6373); if (state.failed) return;

		}

	}
	// $ANTLR end synpred13_CIL

	// $ANTLR start synpred17_CIL
	public final void synpred17_CIL_fragment() throws RecognitionException {
		// CIL.g:337:27: ( customAttrDecl )
		// CIL.g:337:27: customAttrDecl
		{
		pushFollow(FOLLOW_customAttrDecl_in_synpred17_CIL6493);
		customAttrDecl();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred17_CIL

	// $ANTLR start synpred20_CIL
	public final void synpred20_CIL_fragment() throws RecognitionException {
		// CIL.g:340:27: ( '.file' 'alignment' int32 )
		// CIL.g:340:27: '.file' 'alignment' int32
		{
		match(input,279,FOLLOW_279_in_synpred20_CIL6583); if (state.failed) return;

		match(input,327,FOLLOW_327_in_synpred20_CIL6585); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred20_CIL6587);
		int32();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred20_CIL

	// $ANTLR start synpred24_CIL
	public final void synpred24_CIL_fragment() throws RecognitionException {
		// CIL.g:344:27: ( typedefDecl )
		// CIL.g:344:27: typedefDecl
		{
		pushFollow(FOLLOW_typedefDecl_in_synpred24_CIL6706);
		typedefDecl();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred24_CIL

	// $ANTLR start synpred32_CIL
	public final void synpred32_CIL_fragment() throws RecognitionException {
		// CIL.g:365:46: ( '.' dottedName )
		// CIL.g:365:46: '.' dottedName
		{
		match(input,DOT,FOLLOW_DOT_in_synpred32_CIL7231); if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred32_CIL7233);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred32_CIL

	// $ANTLR start synpred36_CIL
	public final void synpred36_CIL_fragment() throws RecognitionException {
		// CIL.g:389:27: ( typedef_ts )
		// CIL.g:389:27: typedef_ts
		{
		pushFollow(FOLLOW_typedef_ts_in_synpred36_CIL7746);
		typedef_ts();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred36_CIL

	// $ANTLR start synpred37_CIL
	public final void synpred37_CIL_fragment() throws RecognitionException {
		// CIL.g:390:27: ( typedef_t )
		// CIL.g:390:27: typedef_t
		{
		pushFollow(FOLLOW_typedef_t_in_synpred37_CIL7775);
		typedef_t();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred37_CIL

	// $ANTLR start synpred38_CIL
	public final void synpred38_CIL_fragment() throws RecognitionException {
		// CIL.g:391:27: ( typedef_m )
		// CIL.g:391:27: typedef_m
		{
		pushFollow(FOLLOW_typedef_m_in_synpred38_CIL7804);
		typedef_m();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred38_CIL

	// $ANTLR start synpred39_CIL
	public final void synpred39_CIL_fragment() throws RecognitionException {
		// CIL.g:395:27: ( '.custom' customType )
		// CIL.g:395:27: '.custom' customType
		{
		match(input,272,FOLLOW_272_in_synpred39_CIL7880); if (state.failed) return;

		pushFollow(FOLLOW_customType_in_synpred39_CIL7882);
		customType();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred39_CIL

	// $ANTLR start synpred40_CIL
	public final void synpred40_CIL_fragment() throws RecognitionException {
		// CIL.g:396:27: ( '.custom' customType '=' compQstring )
		// CIL.g:396:27: '.custom' customType '=' compQstring
		{
		match(input,272,FOLLOW_272_in_synpred40_CIL7911); if (state.failed) return;

		pushFollow(FOLLOW_customType_in_synpred40_CIL7913);
		customType();
		state._fsp--;
		if (state.failed) return;

		match(input,321,FOLLOW_321_in_synpred40_CIL7915); if (state.failed) return;

		pushFollow(FOLLOW_compQstring_in_synpred40_CIL7917);
		compQstring();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred40_CIL

	// $ANTLR start synpred41_CIL
	public final void synpred41_CIL_fragment() throws RecognitionException {
		// CIL.g:397:27: ( '.custom' customType '=' '{' customBlobDescr '}' )
		// CIL.g:397:27: '.custom' customType '=' '{' customBlobDescr '}'
		{
		match(input,272,FOLLOW_272_in_synpred41_CIL7946); if (state.failed) return;

		pushFollow(FOLLOW_customType_in_synpred41_CIL7948);
		customType();
		state._fsp--;
		if (state.failed) return;

		match(input,321,FOLLOW_321_in_synpred41_CIL7950); if (state.failed) return;

		match(input,494,FOLLOW_494_in_synpred41_CIL7952); if (state.failed) return;

		pushFollow(FOLLOW_customBlobDescr_in_synpred41_CIL7954);
		customBlobDescr();
		state._fsp--;
		if (state.failed) return;

		match(input,495,FOLLOW_495_in_synpred41_CIL7956); if (state.failed) return;

		}

	}
	// $ANTLR end synpred41_CIL

	// $ANTLR start synpred42_CIL
	public final void synpred42_CIL_fragment() throws RecognitionException {
		// CIL.g:401:27: ( '.custom' '(' ownerType ')' customType )
		// CIL.g:401:27: '.custom' '(' ownerType ')' customType
		{
		match(input,272,FOLLOW_272_in_synpred42_CIL8026); if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred42_CIL8028); if (state.failed) return;

		pushFollow(FOLLOW_ownerType_in_synpred42_CIL8030);
		ownerType();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred42_CIL8032); if (state.failed) return;

		pushFollow(FOLLOW_customType_in_synpred42_CIL8034);
		customType();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred42_CIL

	// $ANTLR start synpred43_CIL
	public final void synpred43_CIL_fragment() throws RecognitionException {
		// CIL.g:402:27: ( '.custom' '(' ownerType ')' customType '=' compQstring )
		// CIL.g:402:27: '.custom' '(' ownerType ')' customType '=' compQstring
		{
		match(input,272,FOLLOW_272_in_synpred43_CIL8063); if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred43_CIL8065); if (state.failed) return;

		pushFollow(FOLLOW_ownerType_in_synpred43_CIL8067);
		ownerType();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred43_CIL8069); if (state.failed) return;

		pushFollow(FOLLOW_customType_in_synpred43_CIL8071);
		customType();
		state._fsp--;
		if (state.failed) return;

		match(input,321,FOLLOW_321_in_synpred43_CIL8073); if (state.failed) return;

		pushFollow(FOLLOW_compQstring_in_synpred43_CIL8075);
		compQstring();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred43_CIL

	// $ANTLR start synpred44_CIL
	public final void synpred44_CIL_fragment() throws RecognitionException {
		// CIL.g:403:27: ( '.custom' '(' ownerType ')' customType '=' '{' customBlobDescr '}' )
		// CIL.g:403:27: '.custom' '(' ownerType ')' customType '=' '{' customBlobDescr '}'
		{
		match(input,272,FOLLOW_272_in_synpred44_CIL8104); if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred44_CIL8106); if (state.failed) return;

		pushFollow(FOLLOW_ownerType_in_synpred44_CIL8108);
		ownerType();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred44_CIL8110); if (state.failed) return;

		pushFollow(FOLLOW_customType_in_synpred44_CIL8112);
		customType();
		state._fsp--;
		if (state.failed) return;

		match(input,321,FOLLOW_321_in_synpred44_CIL8114); if (state.failed) return;

		match(input,494,FOLLOW_494_in_synpred44_CIL8116); if (state.failed) return;

		pushFollow(FOLLOW_customBlobDescr_in_synpred44_CIL8118);
		customBlobDescr();
		state._fsp--;
		if (state.failed) return;

		match(input,495,FOLLOW_495_in_synpred44_CIL8120); if (state.failed) return;

		}

	}
	// $ANTLR end synpred44_CIL

	// $ANTLR start synpred45_CIL
	public final void synpred45_CIL_fragment() throws RecognitionException {
		// CIL.g:416:27: ( typeSpec )
		// CIL.g:416:27: typeSpec
		{
		pushFollow(FOLLOW_typeSpec_in_synpred45_CIL8375);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred45_CIL

	// $ANTLR start synpred100_CIL
	public final void synpred100_CIL_fragment() throws RecognitionException {
		// CIL.g:510:27: ( typarAttribs tyBound dottedName typarsRest )
		// CIL.g:510:27: typarAttribs tyBound dottedName typarsRest
		{
		pushFollow(FOLLOW_typarAttribs_in_synpred100_CIL10581);
		typarAttribs();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_tyBound_in_synpred100_CIL10583);
		tyBound();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred100_CIL10585);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typarsRest_in_synpred100_CIL10587);
		typarsRest();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred100_CIL

	// $ANTLR start synpred115_CIL
	public final void synpred115_CIL_fragment() throws RecognitionException {
		// CIL.g:541:27: ( '.override' typeSpec '::' methodName 'with' callConv type typeSpec '::' methodName '(' sigArgs0 ')' )
		// CIL.g:541:27: '.override' typeSpec '::' methodName 'with' callConv type typeSpec '::' methodName '(' sigArgs0 ')'
		{
		match(input,296,FOLLOW_296_in_synpred115_CIL11378); if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred115_CIL11380);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred115_CIL11382); if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred115_CIL11384);
		methodName();
		state._fsp--;
		if (state.failed) return;

		match(input,492,FOLLOW_492_in_synpred115_CIL11386); if (state.failed) return;

		pushFollow(FOLLOW_callConv_in_synpred115_CIL11388);
		callConv();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred115_CIL11390);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred115_CIL11392);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred115_CIL11394); if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred115_CIL11396);
		methodName();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred115_CIL11398); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred115_CIL11400);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred115_CIL11402); if (state.failed) return;

		}

	}
	// $ANTLR end synpred115_CIL

	// $ANTLR start synpred116_CIL
	public final void synpred116_CIL_fragment() throws RecognitionException {
		// CIL.g:542:27: ( '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' 'with' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' )
		// CIL.g:542:27: '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' 'with' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')'
		{
		match(input,296,FOLLOW_296_in_synpred116_CIL11432); if (state.failed) return;

		match(input,407,FOLLOW_407_in_synpred116_CIL11434); if (state.failed) return;

		pushFollow(FOLLOW_callConv_in_synpred116_CIL11436);
		callConv();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred116_CIL11438);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred116_CIL11440);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred116_CIL11442); if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred116_CIL11444);
		methodName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_genArity_in_synpred116_CIL11446);
		genArity();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred116_CIL11448); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred116_CIL11450);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred116_CIL11452); if (state.failed) return;

		match(input,492,FOLLOW_492_in_synpred116_CIL11454); if (state.failed) return;

		match(input,407,FOLLOW_407_in_synpred116_CIL11456); if (state.failed) return;

		pushFollow(FOLLOW_callConv_in_synpred116_CIL11458);
		callConv();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred116_CIL11460);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred116_CIL11462);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred116_CIL11464); if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred116_CIL11466);
		methodName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_genArity_in_synpred116_CIL11468);
		genArity();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred116_CIL11470); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred116_CIL11472);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred116_CIL11474); if (state.failed) return;

		}

	}
	// $ANTLR end synpred116_CIL

	// $ANTLR start synpred118_CIL
	public final void synpred118_CIL_fragment() throws RecognitionException {
		// CIL.g:544:27: ( 'param' 'type' '[' int32 ']' )
		// CIL.g:544:27: 'param' 'type' '[' int32 ']'
		{
		match(input,430,FOLLOW_430_in_synpred118_CIL11531); if (state.failed) return;

		match(input,472,FOLLOW_472_in_synpred118_CIL11533); if (state.failed) return;

		match(input,323,FOLLOW_323_in_synpred118_CIL11535); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred118_CIL11537);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred118_CIL11539); if (state.failed) return;

		}

	}
	// $ANTLR end synpred118_CIL

	// $ANTLR start synpred137_CIL
	public final void synpred137_CIL_fragment() throws RecognitionException {
		// CIL.g:573:27: ( callConv type typeSpec '::' methodName tyArgs0 '(' sigArgs0 ')' )
		// CIL.g:573:27: callConv type typeSpec '::' methodName tyArgs0 '(' sigArgs0 ')'
		{
		pushFollow(FOLLOW_callConv_in_synpred137_CIL12179);
		callConv();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred137_CIL12181);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred137_CIL12183);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred137_CIL12185); if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred137_CIL12187);
		methodName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_tyArgs0_in_synpred137_CIL12189);
		tyArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred137_CIL12191); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred137_CIL12193);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred137_CIL12195); if (state.failed) return;

		}

	}
	// $ANTLR end synpred137_CIL

	// $ANTLR start synpred138_CIL
	public final void synpred138_CIL_fragment() throws RecognitionException {
		// CIL.g:574:27: ( callConv type typeSpec '::' methodName genArityNotEmpty '(' sigArgs0 ')' )
		// CIL.g:574:27: callConv type typeSpec '::' methodName genArityNotEmpty '(' sigArgs0 ')'
		{
		pushFollow(FOLLOW_callConv_in_synpred138_CIL12224);
		callConv();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred138_CIL12226);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred138_CIL12228);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred138_CIL12230); if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred138_CIL12232);
		methodName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_genArityNotEmpty_in_synpred138_CIL12234);
		genArityNotEmpty();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred138_CIL12236); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred138_CIL12238);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred138_CIL12240); if (state.failed) return;

		}

	}
	// $ANTLR end synpred138_CIL

	// $ANTLR start synpred139_CIL
	public final void synpred139_CIL_fragment() throws RecognitionException {
		// CIL.g:575:27: ( callConv type methodName tyArgs0 '(' sigArgs0 ')' )
		// CIL.g:575:27: callConv type methodName tyArgs0 '(' sigArgs0 ')'
		{
		pushFollow(FOLLOW_callConv_in_synpred139_CIL12269);
		callConv();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred139_CIL12271);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred139_CIL12273);
		methodName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_tyArgs0_in_synpred139_CIL12275);
		tyArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred139_CIL12277); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred139_CIL12279);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred139_CIL12281); if (state.failed) return;

		}

	}
	// $ANTLR end synpred139_CIL

	// $ANTLR start synpred140_CIL
	public final void synpred140_CIL_fragment() throws RecognitionException {
		// CIL.g:576:27: ( callConv type methodName genArityNotEmpty '(' sigArgs0 ')' )
		// CIL.g:576:27: callConv type methodName genArityNotEmpty '(' sigArgs0 ')'
		{
		pushFollow(FOLLOW_callConv_in_synpred140_CIL12310);
		callConv();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred140_CIL12312);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred140_CIL12314);
		methodName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_genArityNotEmpty_in_synpred140_CIL12316);
		genArityNotEmpty();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred140_CIL12318); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred140_CIL12320);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred140_CIL12322); if (state.failed) return;

		}

	}
	// $ANTLR end synpred140_CIL

	// $ANTLR start synpred142_CIL
	public final void synpred142_CIL_fragment() throws RecognitionException {
		// CIL.g:578:27: ( typedef_m )
		// CIL.g:578:27: typedef_m
		{
		pushFollow(FOLLOW_typedef_m_in_synpred142_CIL12380);
		typedef_m();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred142_CIL

	// $ANTLR start synpred153_CIL
	public final void synpred153_CIL_fragment() throws RecognitionException {
		// CIL.g:601:27: ( 'field' type typeSpec '::' dottedName )
		// CIL.g:601:27: 'field' type typeSpec '::' dottedName
		{
		match(input,361,FOLLOW_361_in_synpred153_CIL13067); if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred153_CIL13069);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred153_CIL13071);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred153_CIL13073); if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred153_CIL13075);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred153_CIL

	// $ANTLR start synpred154_CIL
	public final void synpred154_CIL_fragment() throws RecognitionException {
		// CIL.g:602:27: ( 'field' type dottedName )
		// CIL.g:602:27: 'field' type dottedName
		{
		match(input,361,FOLLOW_361_in_synpred154_CIL13104); if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred154_CIL13106);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred154_CIL13108);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred154_CIL

	// $ANTLR start synpred155_CIL
	public final void synpred155_CIL_fragment() throws RecognitionException {
		// CIL.g:603:27: ( 'field' typedef_f )
		// CIL.g:603:27: 'field' typedef_f
		{
		match(input,361,FOLLOW_361_in_synpred155_CIL13137); if (state.failed) return;

		pushFollow(FOLLOW_typedef_f_in_synpred155_CIL13139);
		typedef_f();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred155_CIL

	// $ANTLR start synpred156_CIL
	public final void synpred156_CIL_fragment() throws RecognitionException {
		// CIL.g:604:27: ( 'field' typedef_mr )
		// CIL.g:604:27: 'field' typedef_mr
		{
		match(input,361,FOLLOW_361_in_synpred156_CIL13168); if (state.failed) return;

		pushFollow(FOLLOW_typedef_mr_in_synpred156_CIL13170);
		typedef_mr();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred156_CIL

	// $ANTLR start synpred157_CIL
	public final void synpred157_CIL_fragment() throws RecognitionException {
		// CIL.g:609:27: ( '.event' eventAttr typeSpec dottedName )
		// CIL.g:609:27: '.event' eventAttr typeSpec dottedName
		{
		match(input,276,FOLLOW_276_in_synpred157_CIL13273); if (state.failed) return;

		pushFollow(FOLLOW_eventAttr_in_synpred157_CIL13275);
		eventAttr();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred157_CIL13277);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred157_CIL13279);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred157_CIL

	// $ANTLR start synpred236_CIL
	public final void synpred236_CIL_fragment() throws RecognitionException {
		// CIL.g:685:27: ( localsHead '(' sigArgs0 ')' )
		// CIL.g:685:27: localsHead '(' sigArgs0 ')'
		{
		pushFollow(FOLLOW_localsHead_in_synpred236_CIL15130);
		localsHead();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred236_CIL15132); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred236_CIL15134);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred236_CIL15136); if (state.failed) return;

		}

	}
	// $ANTLR end synpred236_CIL

	// $ANTLR start synpred237_CIL
	public final void synpred237_CIL_fragment() throws RecognitionException {
		// CIL.g:686:27: ( localsHead 'init' '(' sigArgs0 ')' )
		// CIL.g:686:27: localsHead 'init' '(' sigArgs0 ')'
		{
		pushFollow(FOLLOW_localsHead_in_synpred237_CIL15165);
		localsHead();
		state._fsp--;
		if (state.failed) return;

		match(input,384,FOLLOW_384_in_synpred237_CIL15167); if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred237_CIL15169); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred237_CIL15171);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred237_CIL15173); if (state.failed) return;

		}

	}
	// $ANTLR end synpred237_CIL

	// $ANTLR start synpred247_CIL
	public final void synpred247_CIL_fragment() throws RecognitionException {
		// CIL.g:696:27: ( '.export' '[' int32 ']' )
		// CIL.g:696:27: '.export' '[' int32 ']'
		{
		match(input,277,FOLLOW_277_in_synpred247_CIL15459); if (state.failed) return;

		match(input,323,FOLLOW_323_in_synpred247_CIL15461); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred247_CIL15463);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred247_CIL15465); if (state.failed) return;

		}

	}
	// $ANTLR end synpred247_CIL

	// $ANTLR start synpred248_CIL
	public final void synpred248_CIL_fragment() throws RecognitionException {
		// CIL.g:697:27: ( '.export' '[' int32 ']' 'as' id )
		// CIL.g:697:27: '.export' '[' int32 ']' 'as' id
		{
		match(input,277,FOLLOW_277_in_synpred248_CIL15494); if (state.failed) return;

		match(input,323,FOLLOW_323_in_synpred248_CIL15496); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred248_CIL15498);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred248_CIL15500); if (state.failed) return;

		match(input,332,FOLLOW_332_in_synpred248_CIL15502); if (state.failed) return;

		pushFollow(FOLLOW_id_in_synpred248_CIL15504);
		id();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred248_CIL

	// $ANTLR start synpred250_CIL
	public final void synpred250_CIL_fragment() throws RecognitionException {
		// CIL.g:699:27: ( '.override' typeSpec '::' methodName )
		// CIL.g:699:27: '.override' typeSpec '::' methodName
		{
		match(input,296,FOLLOW_296_in_synpred250_CIL15568); if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred250_CIL15570);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred250_CIL15572); if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred250_CIL15574);
		methodName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred250_CIL

	// $ANTLR start synpred251_CIL
	public final void synpred251_CIL_fragment() throws RecognitionException {
		// CIL.g:701:27: ( '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')' )
		// CIL.g:701:27: '.override' 'method' callConv type typeSpec '::' methodName genArity '(' sigArgs0 ')'
		{
		match(input,296,FOLLOW_296_in_synpred251_CIL15604); if (state.failed) return;

		match(input,407,FOLLOW_407_in_synpred251_CIL15606); if (state.failed) return;

		pushFollow(FOLLOW_callConv_in_synpred251_CIL15608);
		callConv();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred251_CIL15610);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred251_CIL15612);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred251_CIL15614); if (state.failed) return;

		pushFollow(FOLLOW_methodName_in_synpred251_CIL15616);
		methodName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_genArity_in_synpred251_CIL15618);
		genArity();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred251_CIL15620); if (state.failed) return;

		pushFollow(FOLLOW_sigArgs0_in_synpred251_CIL15622);
		sigArgs0();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred251_CIL15624); if (state.failed) return;

		}

	}
	// $ANTLR end synpred251_CIL

	// $ANTLR start synpred253_CIL
	public final void synpred253_CIL_fragment() throws RecognitionException {
		// CIL.g:703:27: ( 'param' 'type' '[' int32 ']' )
		// CIL.g:703:27: 'param' 'type' '[' int32 ']'
		{
		match(input,430,FOLLOW_430_in_synpred253_CIL15681); if (state.failed) return;

		match(input,472,FOLLOW_472_in_synpred253_CIL15683); if (state.failed) return;

		match(input,323,FOLLOW_323_in_synpred253_CIL15685); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred253_CIL15687);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred253_CIL15689); if (state.failed) return;

		}

	}
	// $ANTLR end synpred253_CIL

	// $ANTLR start synpred254_CIL
	public final void synpred254_CIL_fragment() throws RecognitionException {
		// CIL.g:704:27: ( 'param' 'type' dottedName )
		// CIL.g:704:27: 'param' 'type' dottedName
		{
		match(input,430,FOLLOW_430_in_synpred254_CIL15718); if (state.failed) return;

		match(input,472,FOLLOW_472_in_synpred254_CIL15720); if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred254_CIL15722);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred254_CIL

	// $ANTLR start synpred255_CIL
	public final void synpred255_CIL_fragment() throws RecognitionException {
		// CIL.g:718:27: ( sehClause sehClauses )
		// CIL.g:718:27: sehClause sehClauses
		{
		pushFollow(FOLLOW_sehClause_in_synpred255_CIL15983);
		sehClause();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_sehClauses_in_synpred255_CIL15985);
		sehClauses();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred255_CIL

	// $ANTLR start synpred549_CIL
	public final void synpred549_CIL_fragment() throws RecognitionException {
		// CIL.g:1001:27: ( instr_var int32 )
		// CIL.g:1001:27: instr_var int32
		{
		pushFollow(FOLLOW_instr_var_in_synpred549_CIL22579);
		instr_var();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred549_CIL22581);
		int32();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred549_CIL

	// $ANTLR start synpred550_CIL
	public final void synpred550_CIL_fragment() throws RecognitionException {
		// CIL.g:1002:27: ( instr_var id )
		// CIL.g:1002:27: instr_var id
		{
		pushFollow(FOLLOW_instr_var_in_synpred550_CIL22610);
		instr_var();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_id_in_synpred550_CIL22612);
		id();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred550_CIL

	// $ANTLR start synpred553_CIL
	public final void synpred553_CIL_fragment() throws RecognitionException {
		// CIL.g:1005:27: ( instr_r float64 )
		// CIL.g:1005:27: instr_r float64
		{
		pushFollow(FOLLOW_instr_r_in_synpred553_CIL22703);
		instr_r();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_float64_in_synpred553_CIL22705);
		float64();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred553_CIL

	// $ANTLR start synpred554_CIL
	public final void synpred554_CIL_fragment() throws RecognitionException {
		// CIL.g:1006:27: ( instr_r int64 )
		// CIL.g:1006:27: instr_r int64
		{
		pushFollow(FOLLOW_instr_r_in_synpred554_CIL22734);
		instr_r();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_int64_in_synpred554_CIL22736);
		int64();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred554_CIL

	// $ANTLR start synpred555_CIL
	public final void synpred555_CIL_fragment() throws RecognitionException {
		// CIL.g:1007:27: ( instr_r_head bytes ')' )
		// CIL.g:1007:27: instr_r_head bytes ')'
		{
		pushFollow(FOLLOW_instr_r_head_in_synpred555_CIL22765);
		instr_r_head();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_bytes_in_synpred555_CIL22767);
		bytes();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred555_CIL22769); if (state.failed) return;

		}

	}
	// $ANTLR end synpred555_CIL

	// $ANTLR start synpred556_CIL
	public final void synpred556_CIL_fragment() throws RecognitionException {
		// CIL.g:1008:27: ( instr_brtarget int32 )
		// CIL.g:1008:27: instr_brtarget int32
		{
		pushFollow(FOLLOW_instr_brtarget_in_synpred556_CIL22798);
		instr_brtarget();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred556_CIL22800);
		int32();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred556_CIL

	// $ANTLR start synpred557_CIL
	public final void synpred557_CIL_fragment() throws RecognitionException {
		// CIL.g:1009:27: ( instr_brtarget id )
		// CIL.g:1009:27: instr_brtarget id
		{
		pushFollow(FOLLOW_instr_brtarget_in_synpred557_CIL22829);
		instr_brtarget();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_id_in_synpred557_CIL22831);
		id();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred557_CIL

	// $ANTLR start synpred559_CIL
	public final void synpred559_CIL_fragment() throws RecognitionException {
		// CIL.g:1011:27: ( instr_field type typeSpec '::' dottedName )
		// CIL.g:1011:27: instr_field type typeSpec '::' dottedName
		{
		pushFollow(FOLLOW_instr_field_in_synpred559_CIL22891);
		instr_field();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred559_CIL22893);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred559_CIL22895);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,319,FOLLOW_319_in_synpred559_CIL22897); if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred559_CIL22899);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred559_CIL

	// $ANTLR start synpred560_CIL
	public final void synpred560_CIL_fragment() throws RecognitionException {
		// CIL.g:1012:27: ( instr_field type dottedName )
		// CIL.g:1012:27: instr_field type dottedName
		{
		pushFollow(FOLLOW_instr_field_in_synpred560_CIL22928);
		instr_field();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred560_CIL22930);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred560_CIL22932);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred560_CIL

	// $ANTLR start synpred561_CIL
	public final void synpred561_CIL_fragment() throws RecognitionException {
		// CIL.g:1013:27: ( instr_field mdtoken )
		// CIL.g:1013:27: instr_field mdtoken
		{
		pushFollow(FOLLOW_instr_field_in_synpred561_CIL22961);
		instr_field();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_mdtoken_in_synpred561_CIL22963);
		mdtoken();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred561_CIL

	// $ANTLR start synpred562_CIL
	public final void synpred562_CIL_fragment() throws RecognitionException {
		// CIL.g:1014:27: ( instr_field typedef_f )
		// CIL.g:1014:27: instr_field typedef_f
		{
		pushFollow(FOLLOW_instr_field_in_synpred562_CIL22992);
		instr_field();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typedef_f_in_synpred562_CIL22994);
		typedef_f();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred562_CIL

	// $ANTLR start synpred563_CIL
	public final void synpred563_CIL_fragment() throws RecognitionException {
		// CIL.g:1015:27: ( instr_field typedef_mr )
		// CIL.g:1015:27: instr_field typedef_mr
		{
		pushFollow(FOLLOW_instr_field_in_synpred563_CIL23023);
		instr_field();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typedef_mr_in_synpred563_CIL23025);
		typedef_mr();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred563_CIL

	// $ANTLR start synpred565_CIL
	public final void synpred565_CIL_fragment() throws RecognitionException {
		// CIL.g:1017:27: ( instr_string compQstring )
		// CIL.g:1017:27: instr_string compQstring
		{
		pushFollow(FOLLOW_instr_string_in_synpred565_CIL23085);
		instr_string();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_compQstring_in_synpred565_CIL23087);
		compQstring();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred565_CIL

	// $ANTLR start synpred566_CIL
	public final void synpred566_CIL_fragment() throws RecognitionException {
		// CIL.g:1018:27: ( instr_string 'ansi' '(' compQstring ')' )
		// CIL.g:1018:27: instr_string 'ansi' '(' compQstring ')'
		{
		pushFollow(FOLLOW_instr_string_in_synpred566_CIL23116);
		instr_string();
		state._fsp--;
		if (state.failed) return;

		match(input,329,FOLLOW_329_in_synpred566_CIL23118); if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred566_CIL23120); if (state.failed) return;

		pushFollow(FOLLOW_compQstring_in_synpred566_CIL23122);
		compQstring();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred566_CIL23124); if (state.failed) return;

		}

	}
	// $ANTLR end synpred566_CIL

	// $ANTLR start synpred567_CIL
	public final void synpred567_CIL_fragment() throws RecognitionException {
		// CIL.g:1019:27: ( instr_string bytearrayhead bytes ')' )
		// CIL.g:1019:27: instr_string bytearrayhead bytes ')'
		{
		pushFollow(FOLLOW_instr_string_in_synpred567_CIL23153);
		instr_string();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_bytearrayhead_in_synpred567_CIL23155);
		bytearrayhead();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_bytes_in_synpred567_CIL23157);
		bytes();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred567_CIL23159); if (state.failed) return;

		}

	}
	// $ANTLR end synpred567_CIL

	// $ANTLR start synpred579_CIL
	public final void synpred579_CIL_fragment() throws RecognitionException {
		// CIL.g:1052:27: ( '...' )
		// CIL.g:1052:27: '...'
		{
		match(input,264,FOLLOW_264_in_synpred579_CIL23876); if (state.failed) return;

		}

	}
	// $ANTLR end synpred579_CIL

	// $ANTLR start synpred580_CIL
	public final void synpred580_CIL_fragment() throws RecognitionException {
		// CIL.g:1053:27: ( paramAttr type marshalClause )
		// CIL.g:1053:27: paramAttr type marshalClause
		{
		pushFollow(FOLLOW_paramAttr_in_synpred580_CIL23905);
		paramAttr();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred580_CIL23907);
		type();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_marshalClause_in_synpred580_CIL23909);
		marshalClause();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred580_CIL

	// $ANTLR start synpred591_CIL
	public final void synpred591_CIL_fragment() throws RecognitionException {
		// CIL.g:1073:27: ( className )
		// CIL.g:1073:27: className
		{
		pushFollow(FOLLOW_className_in_synpred591_CIL24385);
		className();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred591_CIL

	// $ANTLR start synpred592_CIL
	public final void synpred592_CIL_fragment() throws RecognitionException {
		// CIL.g:1074:27: ( '[' dottedName ']' )
		// CIL.g:1074:27: '[' dottedName ']'
		{
		match(input,323,FOLLOW_323_in_synpred592_CIL24414); if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred592_CIL24416);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred592_CIL24418); if (state.failed) return;

		}

	}
	// $ANTLR end synpred592_CIL

	// $ANTLR start synpred593_CIL
	public final void synpred593_CIL_fragment() throws RecognitionException {
		// CIL.g:1075:27: ( '[' '.module' dottedName ']' )
		// CIL.g:1075:27: '[' '.module' dottedName ']'
		{
		match(input,323,FOLLOW_323_in_synpred593_CIL24447); if (state.failed) return;

		match(input,290,FOLLOW_290_in_synpred593_CIL24449); if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred593_CIL24451);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred593_CIL24453); if (state.failed) return;

		}

	}
	// $ANTLR end synpred593_CIL

	// $ANTLR start synpred643_CIL
	public final void synpred643_CIL_fragment() throws RecognitionException {
		// CIL.g:1080:904: ( '*' )
		// CIL.g:1080:904: '*'
		{
		match(input,260,FOLLOW_260_in_synpred643_CIL24836); if (state.failed) return;

		}

	}
	// $ANTLR end synpred643_CIL

	// $ANTLR start synpred644_CIL
	public final void synpred644_CIL_fragment() throws RecognitionException {
		// CIL.g:1080:910: ( '[' ']' )
		// CIL.g:1080:910: '[' ']'
		{
		match(input,323,FOLLOW_323_in_synpred644_CIL24840); if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred644_CIL24842); if (state.failed) return;

		}

	}
	// $ANTLR end synpred644_CIL

	// $ANTLR start synpred645_CIL
	public final void synpred645_CIL_fragment() throws RecognitionException {
		// CIL.g:1080:920: ( '[' int32 ']' )
		// CIL.g:1080:920: '[' int32 ']'
		{
		match(input,323,FOLLOW_323_in_synpred645_CIL24846); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred645_CIL24848);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred645_CIL24850); if (state.failed) return;

		}

	}
	// $ANTLR end synpred645_CIL

	// $ANTLR start synpred646_CIL
	public final void synpred646_CIL_fragment() throws RecognitionException {
		// CIL.g:1080:936: ( '[' int32 '+' int32 ']' )
		// CIL.g:1080:936: '[' int32 '+' int32 ']'
		{
		match(input,323,FOLLOW_323_in_synpred646_CIL24854); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred646_CIL24856);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,261,FOLLOW_261_in_synpred646_CIL24858); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred646_CIL24860);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred646_CIL24862); if (state.failed) return;

		}

	}
	// $ANTLR end synpred646_CIL

	// $ANTLR start synpred647_CIL
	public final void synpred647_CIL_fragment() throws RecognitionException {
		// CIL.g:1080:962: ( '[' '+' int32 ']' )
		// CIL.g:1080:962: '[' '+' int32 ']'
		{
		match(input,323,FOLLOW_323_in_synpred647_CIL24866); if (state.failed) return;

		match(input,261,FOLLOW_261_in_synpred647_CIL24868); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred647_CIL24870);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred647_CIL24872); if (state.failed) return;

		}

	}
	// $ANTLR end synpred647_CIL

	// $ANTLR start synpred649_CIL
	public final void synpred649_CIL_fragment() throws RecognitionException {
		// CIL.g:1087:40: ()
		// CIL.g:1087:40: 
		{
		}

	}
	// $ANTLR end synpred649_CIL

	// $ANTLR start synpred669_CIL
	public final void synpred669_CIL_fragment() throws RecognitionException {
		// CIL.g:1087:283: ( '*' )
		// CIL.g:1087:283: '*'
		{
		match(input,260,FOLLOW_260_in_synpred669_CIL25138); if (state.failed) return;

		}

	}
	// $ANTLR end synpred669_CIL

	// $ANTLR start synpred694_CIL
	public final void synpred694_CIL_fragment() throws RecognitionException {
		// CIL.g:1087:594: ( '[' ']' )
		// CIL.g:1087:594: '[' ']'
		{
		match(input,323,FOLLOW_323_in_synpred694_CIL25245); if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred694_CIL25247); if (state.failed) return;

		}

	}
	// $ANTLR end synpred694_CIL

	// $ANTLR start synpred713_CIL
	public final void synpred713_CIL_fragment() throws RecognitionException {
		// CIL.g:1090:355: ( '[' ']' )
		// CIL.g:1090:355: '[' ']'
		{
		match(input,323,FOLLOW_323_in_synpred713_CIL25457); if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred713_CIL25459); if (state.failed) return;

		}

	}
	// $ANTLR end synpred713_CIL

	// $ANTLR start synpred714_CIL
	public final void synpred714_CIL_fragment() throws RecognitionException {
		// CIL.g:1090:365: ( '[' bounds1 ']' )
		// CIL.g:1090:365: '[' bounds1 ']'
		{
		match(input,323,FOLLOW_323_in_synpred714_CIL25463); if (state.failed) return;

		pushFollow(FOLLOW_bounds1_in_synpred714_CIL25465);
		bounds1();
		state._fsp--;
		if (state.failed) return;

		match(input,324,FOLLOW_324_in_synpred714_CIL25467); if (state.failed) return;

		}

	}
	// $ANTLR end synpred714_CIL

	// $ANTLR start synpred715_CIL
	public final void synpred715_CIL_fragment() throws RecognitionException {
		// CIL.g:1093:30: ( '&' )
		// CIL.g:1093:30: '&'
		{
		match(input,257,FOLLOW_257_in_synpred715_CIL25499); if (state.failed) return;

		}

	}
	// $ANTLR end synpred715_CIL

	// $ANTLR start synpred716_CIL
	public final void synpred716_CIL_fragment() throws RecognitionException {
		// CIL.g:1093:36: ( '*' )
		// CIL.g:1093:36: '*'
		{
		match(input,260,FOLLOW_260_in_synpred716_CIL25503); if (state.failed) return;

		}

	}
	// $ANTLR end synpred716_CIL

	// $ANTLR start synpred717_CIL
	public final void synpred717_CIL_fragment() throws RecognitionException {
		// CIL.g:1093:42: ( 'pinned' )
		// CIL.g:1093:42: 'pinned'
		{
		match(input,432,FOLLOW_432_in_synpred717_CIL25507); if (state.failed) return;

		}

	}
	// $ANTLR end synpred717_CIL

	// $ANTLR start synpred718_CIL
	public final void synpred718_CIL_fragment() throws RecognitionException {
		// CIL.g:1093:53: ( 'modreq' '(' typeSpec ')' )
		// CIL.g:1093:53: 'modreq' '(' typeSpec ')'
		{
		match(input,409,FOLLOW_409_in_synpred718_CIL25511); if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred718_CIL25513); if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred718_CIL25515);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred718_CIL25517); if (state.failed) return;

		}

	}
	// $ANTLR end synpred718_CIL

	// $ANTLR start synpred719_CIL
	public final void synpred719_CIL_fragment() throws RecognitionException {
		// CIL.g:1093:81: ( 'modopt' '(' typeSpec ')' )
		// CIL.g:1093:81: 'modopt' '(' typeSpec ')'
		{
		match(input,408,FOLLOW_408_in_synpred719_CIL25521); if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred719_CIL25523); if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred719_CIL25525);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred719_CIL25527); if (state.failed) return;

		}

	}
	// $ANTLR end synpred719_CIL

	// $ANTLR start synpred720_CIL
	public final void synpred720_CIL_fragment() throws RecognitionException {
		// CIL.g:1093:109: ( '<' tyArgs1 '>' )
		// CIL.g:1093:109: '<' tyArgs1 '>'
		{
		match(input,320,FOLLOW_320_in_synpred720_CIL25531); if (state.failed) return;

		pushFollow(FOLLOW_tyArgs1_in_synpred720_CIL25533);
		tyArgs1();
		state._fsp--;
		if (state.failed) return;

		match(input,322,FOLLOW_322_in_synpred720_CIL25535); if (state.failed) return;

		}

	}
	// $ANTLR end synpred720_CIL

	// $ANTLR start synpred743_CIL
	public final void synpred743_CIL_fragment() throws RecognitionException {
		// CIL.g:1127:27: ( '.permission' secAction typeSpec '(' nameValPairs ')' )
		// CIL.g:1127:27: '.permission' secAction typeSpec '(' nameValPairs ')'
		{
		match(input,298,FOLLOW_298_in_synpred743_CIL26448); if (state.failed) return;

		pushFollow(FOLLOW_secAction_in_synpred743_CIL26450);
		secAction();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred743_CIL26452);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred743_CIL26454); if (state.failed) return;

		pushFollow(FOLLOW_nameValPairs_in_synpred743_CIL26456);
		nameValPairs();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred743_CIL26458); if (state.failed) return;

		}

	}
	// $ANTLR end synpred743_CIL

	// $ANTLR start synpred744_CIL
	public final void synpred744_CIL_fragment() throws RecognitionException {
		// CIL.g:1128:27: ( '.permission' secAction typeSpec '=' '{' customBlobDescr '}' )
		// CIL.g:1128:27: '.permission' secAction typeSpec '=' '{' customBlobDescr '}'
		{
		match(input,298,FOLLOW_298_in_synpred744_CIL26487); if (state.failed) return;

		pushFollow(FOLLOW_secAction_in_synpred744_CIL26489);
		secAction();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred744_CIL26491);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,321,FOLLOW_321_in_synpred744_CIL26493); if (state.failed) return;

		match(input,494,FOLLOW_494_in_synpred744_CIL26495); if (state.failed) return;

		pushFollow(FOLLOW_customBlobDescr_in_synpred744_CIL26497);
		customBlobDescr();
		state._fsp--;
		if (state.failed) return;

		match(input,495,FOLLOW_495_in_synpred744_CIL26499); if (state.failed) return;

		}

	}
	// $ANTLR end synpred744_CIL

	// $ANTLR start synpred745_CIL
	public final void synpred745_CIL_fragment() throws RecognitionException {
		// CIL.g:1129:27: ( '.permission' secAction typeSpec )
		// CIL.g:1129:27: '.permission' secAction typeSpec
		{
		match(input,298,FOLLOW_298_in_synpred745_CIL26528); if (state.failed) return;

		pushFollow(FOLLOW_secAction_in_synpred745_CIL26530);
		secAction();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_typeSpec_in_synpred745_CIL26532);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred745_CIL

	// $ANTLR start synpred746_CIL
	public final void synpred746_CIL_fragment() throws RecognitionException {
		// CIL.g:1130:27: ( psetHead bytes ')' )
		// CIL.g:1130:27: psetHead bytes ')'
		{
		pushFollow(FOLLOW_psetHead_in_synpred746_CIL26561);
		psetHead();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_bytes_in_synpred746_CIL26563);
		bytes();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred746_CIL26565); if (state.failed) return;

		}

	}
	// $ANTLR end synpred746_CIL

	// $ANTLR start synpred747_CIL
	public final void synpred747_CIL_fragment() throws RecognitionException {
		// CIL.g:1131:27: ( '.permissionset' secAction compQstring )
		// CIL.g:1131:27: '.permissionset' secAction compQstring
		{
		match(input,299,FOLLOW_299_in_synpred747_CIL26594); if (state.failed) return;

		pushFollow(FOLLOW_secAction_in_synpred747_CIL26596);
		secAction();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_compQstring_in_synpred747_CIL26598);
		compQstring();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred747_CIL

	// $ANTLR start synpred749_CIL
	public final void synpred749_CIL_fragment() throws RecognitionException {
		// CIL.g:1136:27: ( secAttrBlob )
		// CIL.g:1136:27: secAttrBlob
		{
		pushFollow(FOLLOW_secAttrBlob_in_synpred749_CIL26733);
		secAttrBlob();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred749_CIL

	// $ANTLR start synpred750_CIL
	public final void synpred750_CIL_fragment() throws RecognitionException {
		// CIL.g:1140:27: ( typeSpec '=' '{' customBlobNVPairs '}' )
		// CIL.g:1140:27: typeSpec '=' '{' customBlobNVPairs '}'
		{
		pushFollow(FOLLOW_typeSpec_in_synpred750_CIL26836);
		typeSpec();
		state._fsp--;
		if (state.failed) return;

		match(input,321,FOLLOW_321_in_synpred750_CIL26838); if (state.failed) return;

		match(input,494,FOLLOW_494_in_synpred750_CIL26840); if (state.failed) return;

		pushFollow(FOLLOW_customBlobNVPairs_in_synpred750_CIL26842);
		customBlobNVPairs();
		state._fsp--;
		if (state.failed) return;

		match(input,495,FOLLOW_495_in_synpred750_CIL26844); if (state.failed) return;

		}

	}
	// $ANTLR end synpred750_CIL

	// $ANTLR start synpred752_CIL
	public final void synpred752_CIL_fragment() throws RecognitionException {
		// CIL.g:1148:27: ( nameValPair )
		// CIL.g:1148:27: nameValPair
		{
		pushFollow(FOLLOW_nameValPair_in_synpred752_CIL27112);
		nameValPair();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred752_CIL

	// $ANTLR start synpred758_CIL
	public final void synpred758_CIL_fragment() throws RecognitionException {
		// CIL.g:1163:27: ( className '(' 'int8' ':' int32 ')' )
		// CIL.g:1163:27: className '(' 'int8' ':' int32 ')'
		{
		pushFollow(FOLLOW_className_in_synpred758_CIL27444);
		className();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred758_CIL27446); if (state.failed) return;

		match(input,391,FOLLOW_391_in_synpred758_CIL27448); if (state.failed) return;

		match(input,318,FOLLOW_318_in_synpred758_CIL27450); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred758_CIL27452);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred758_CIL27454); if (state.failed) return;

		}

	}
	// $ANTLR end synpred758_CIL

	// $ANTLR start synpred759_CIL
	public final void synpred759_CIL_fragment() throws RecognitionException {
		// CIL.g:1164:27: ( className '(' 'int16' ':' int32 ')' )
		// CIL.g:1164:27: className '(' 'int16' ':' int32 ')'
		{
		pushFollow(FOLLOW_className_in_synpred759_CIL27483);
		className();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred759_CIL27485); if (state.failed) return;

		match(input,388,FOLLOW_388_in_synpred759_CIL27487); if (state.failed) return;

		match(input,318,FOLLOW_318_in_synpred759_CIL27489); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred759_CIL27491);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred759_CIL27493); if (state.failed) return;

		}

	}
	// $ANTLR end synpred759_CIL

	// $ANTLR start synpred760_CIL
	public final void synpred760_CIL_fragment() throws RecognitionException {
		// CIL.g:1165:27: ( className '(' 'int32' ':' int32 ')' )
		// CIL.g:1165:27: className '(' 'int32' ':' int32 ')'
		{
		pushFollow(FOLLOW_className_in_synpred760_CIL27522);
		className();
		state._fsp--;
		if (state.failed) return;

		match(input,258,FOLLOW_258_in_synpred760_CIL27524); if (state.failed) return;

		match(input,389,FOLLOW_389_in_synpred760_CIL27526); if (state.failed) return;

		match(input,318,FOLLOW_318_in_synpred760_CIL27528); if (state.failed) return;

		pushFollow(FOLLOW_int32_in_synpred760_CIL27530);
		int32();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred760_CIL27532); if (state.failed) return;

		}

	}
	// $ANTLR end synpred760_CIL

	// $ANTLR start synpred785_CIL
	public final void synpred785_CIL_fragment() throws RecognitionException {
		// CIL.g:1205:27: ( '.file' fileAttr dottedName fileEntry hashHead bytes ')' fileEntry )
		// CIL.g:1205:27: '.file' fileAttr dottedName fileEntry hashHead bytes ')' fileEntry
		{
		match(input,279,FOLLOW_279_in_synpred785_CIL28655); if (state.failed) return;

		pushFollow(FOLLOW_fileAttr_in_synpred785_CIL28657);
		fileAttr();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred785_CIL28659);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_fileEntry_in_synpred785_CIL28661);
		fileEntry();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_hashHead_in_synpred785_CIL28663);
		hashHead();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_bytes_in_synpred785_CIL28665);
		bytes();
		state._fsp--;
		if (state.failed) return;

		match(input,259,FOLLOW_259_in_synpred785_CIL28667); if (state.failed) return;

		pushFollow(FOLLOW_fileEntry_in_synpred785_CIL28669);
		fileEntry();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred785_CIL

	// $ANTLR start synpred802_CIL
	public final void synpred802_CIL_fragment() throws RecognitionException {
		// CIL.g:1253:27: ( '.assembly' 'extern' asmAttr dottedName )
		// CIL.g:1253:27: '.assembly' 'extern' asmAttr dottedName
		{
		match(input,266,FOLLOW_266_in_synpred802_CIL29662); if (state.failed) return;

		match(input,354,FOLLOW_354_in_synpred802_CIL29664); if (state.failed) return;

		pushFollow(FOLLOW_asmAttr_in_synpred802_CIL29666);
		asmAttr();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred802_CIL29668);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred802_CIL

	// $ANTLR start synpred822_CIL
	public final void synpred822_CIL_fragment() throws RecognitionException {
		// CIL.g:1286:27: ( '.mresource' manresAttr dottedName )
		// CIL.g:1286:27: '.mresource' manresAttr dottedName
		{
		match(input,291,FOLLOW_291_in_synpred822_CIL30400); if (state.failed) return;

		pushFollow(FOLLOW_manresAttr_in_synpred822_CIL30402);
		manresAttr();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_dottedName_in_synpred822_CIL30404);
		dottedName();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred822_CIL

	// Delegated rules

	public final boolean synpred549_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred549_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred236_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred236_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred802_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred802_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred11_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred752_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred752_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred237_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred237_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred250_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred250_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred45_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred669_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred669_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred32_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred2_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred247_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred247_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred140_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred140_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred785_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred785_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred554_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred554_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred115_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred115_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred553_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred553_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred559_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred559_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred20_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred749_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred749_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred561_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred561_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred694_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred694_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred557_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred557_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred760_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred760_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred716_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred716_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred153_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred153_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred580_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred580_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred41_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred41_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred253_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred253_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred591_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred591_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred562_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred562_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred44_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred154_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred154_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred254_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred254_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred12_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred750_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred750_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred759_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred759_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred555_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred555_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred155_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred155_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred822_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred822_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred744_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred744_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred647_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred647_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred713_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred713_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred255_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred255_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred592_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred592_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred643_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred643_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred718_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred718_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred593_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred593_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred715_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred715_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred646_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred646_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred116_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred116_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred38_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred13_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred139_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred139_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred565_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred565_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred720_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred720_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred43_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred563_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred563_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred566_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred566_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred567_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred567_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred42_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred37_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred137_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred137_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred100_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred100_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred714_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred714_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred118_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred118_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred743_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred743_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred556_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred556_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred579_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred579_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred36_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred649_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred649_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred251_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred251_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred157_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred157_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred40_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred24_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred717_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred717_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred644_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred644_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred248_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred248_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred747_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred747_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred156_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred156_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred550_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred550_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred746_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred746_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred39_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred645_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred645_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred10_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred17_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred719_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred719_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred560_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred560_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred138_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred138_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred745_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred745_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred142_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred142_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred758_CIL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred758_CIL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA50 dfa50 = new DFA50(this);
	protected DFA65 dfa65 = new DFA65(this);
	protected DFA94 dfa94 = new DFA94(this);
	static final String DFA50_eotS =
		"\35\uffff";
	static final String DFA50_eofS =
		"\35\uffff";
	static final String DFA50_minS =
		"\1\74\24\uffff\1\u0102\2\67\1\uffff\1\u00cd\2\uffff\1\67";
	static final String DFA50_maxS =
		"\1\u01ea\24\uffff\1\u0102\2\u01eb\1\uffff\1\u00cd\2\uffff\1\u01eb";
	static final String DFA50_acceptS =
		"\1\uffff\1\27\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15"+
		"\1\16\1\17\1\20\1\21\1\22\1\23\3\uffff\1\26\1\uffff\1\24\1\25\1\uffff";
	static final String DFA50_specialS =
		"\35\uffff}>";
	static final String[] DFA50_transitionS = {
			"\1\1\2\uffff\1\1\u00c0\uffff\1\1\7\uffff\1\1\55\uffff\1\1\14\uffff\1"+
			"\1\1\uffff\1\12\7\uffff\1\13\6\uffff\2\1\5\uffff\1\1\4\uffff\1\1\3\uffff"+
			"\1\14\1\5\1\15\5\uffff\1\6\2\uffff\1\24\1\uffff\2\1\4\uffff\1\17\12\uffff"+
			"\1\1\1\uffff\4\1\17\uffff\1\1\2\uffff\1\1\1\uffff\1\20\12\uffff\1\1\11"+
			"\uffff\1\25\3\uffff\1\4\1\16\1\uffff\1\3\4\uffff\1\23\2\uffff\1\21\5"+
			"\uffff\1\7\1\2\5\uffff\1\11\1\1\12\uffff\1\1\1\uffff\4\1\1\uffff\1\1"+
			"\1\22\1\1\1\uffff\3\1\2\uffff\1\10\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\26",
			"\1\30\u0095\uffff\1\27\65\uffff\1\30\105\uffff\1\30\7\uffff\1\30\1\uffff"+
			"\1\30\2\uffff\1\30\20\uffff\1\30\7\uffff\1\30\33\uffff\1\30\22\uffff"+
			"\1\30\51\uffff\1\30\13\uffff\1\30\12\uffff\1\30\13\uffff\1\30",
			"\1\33\u00cb\uffff\1\33\1\uffff\1\31\103\uffff\1\33\2\uffff\1\32\4\uffff"+
			"\1\33\1\uffff\1\33\2\uffff\1\33\20\uffff\1\33\7\uffff\1\33\33\uffff\1"+
			"\33\22\uffff\1\33\51\uffff\1\33\13\uffff\1\33\12\uffff\1\33\13\uffff"+
			"\1\33",
			"",
			"\1\34",
			"",
			"",
			"\1\33\u00cb\uffff\1\33\1\uffff\1\31\103\uffff\1\33\2\uffff\1\32\4\uffff"+
			"\1\33\1\uffff\1\33\2\uffff\1\33\20\uffff\1\33\7\uffff\1\33\33\uffff\1"+
			"\33\22\uffff\1\33\51\uffff\1\33\13\uffff\1\33\12\uffff\1\33\13\uffff"+
			"\1\33"
	};

	static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
	static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
	static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
	static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
	static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
	static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
	static final short[][] DFA50_transition;

	static {
		int numStates = DFA50_transitionS.length;
		DFA50_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
		}
	}

	protected class DFA50 extends DFA {

		public DFA50(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 659:41: ( 'static' | 'public' | 'private' | 'family' | 'final' | 'specialname' | 'virtual' | 'strict' | 'abstract' | 'assembly' | 'famandassem' | 'famorassem' | 'privatescope' | 'hidebysig' | 'newslot' | 'rtspecialname' | 'unmanagedexp' | 'reqsecobj' | 'flags' '(' int32 ')' | 'pinvokeimpl' '(' compQstring 'as' compQstring pinvAttr ')' | 'pinvokeimpl' '(' compQstring pinvAttr ')' | 'pinvokeimpl' '(' pinvAttr ')' )*";
		}
	}

	static final String DFA65_eotS =
		"\137\uffff";
	static final String DFA65_eofS =
		"\4\uffff\6\20\23\uffff\1\20\22\uffff\1\20\1\uffff\1\20\2\uffff\2\20\2"+
		"\uffff\11\20\1\uffff\1\20\25\uffff\6\20";
	static final String DFA65_minS =
		"\1\56\1\u0104\11\u0102\1\165\1\163\1\162\1\uffff\1\170\1\uffff\1\162\11"+
		"\170\1\u00cd\1\u0103\1\u0106\1\163\1\u0103\2\u0102\1\u0144\1\u0103\2\u0102"+
		"\1\u0144\1\u0103\1\u0144\1\u0103\1\u0144\1\u0103\1\u0144\1\u0103\1\u0144"+
		"\1\u0103\1\u0106\1\163\1\u0106\2\170\2\u0106\2\170\11\u0106\1\u00cd\1"+
		"\u0106\1\170\2\u0103\1\170\2\u0103\4\170\1\u0103\1\u0144\2\u0103\1\u0144"+
		"\2\u0103\4\u0144\6\u0106";
	static final String DFA65_maxS =
		"\1\u0187\1\u0104\2\u0102\6\u01ef\1\u0102\1\u00d9\1\u0103\1\u0172\1\uffff"+
		"\1\170\1\uffff\1\u0172\11\170\1\u00cd\1\u0103\1\u01ef\2\u0103\2\u0102"+
		"\1\u0144\1\u0103\2\u0102\1\u0144\1\u0103\1\u0144\1\u0103\1\u0144\1\u0103"+
		"\1\u0144\1\u0103\1\u0144\1\u0105\1\u01ef\1\u0103\1\u01ef\2\170\2\u01ef"+
		"\2\170\11\u01ef\1\u00cd\1\u01ef\1\170\2\u0103\1\170\2\u0103\4\170\1\u0105"+
		"\1\u0144\2\u0103\1\u0144\2\u0103\4\u0144\6\u01ef";
	static final String DFA65_acceptS =
		"\16\uffff\1\1\1\uffff\1\2\116\uffff";
	static final String DFA65_specialS =
		"\137\uffff}>";
	static final String[] DFA65_transitionS = {
			"\1\3\15\uffff\1\1\u00c4\uffff\1\2\157\uffff\1\4\1\5\21\uffff\1\10\1\7"+
			"\1\6\1\11",
			"\1\12",
			"\1\13",
			"\1\14",
			"\1\15\3\uffff\1\16\74\uffff\1\17\u00ab\uffff\1\20",
			"\1\21\3\uffff\1\16\74\uffff\1\22\u00ab\uffff\1\20",
			"\1\23\3\uffff\1\16\74\uffff\1\24\u00ab\uffff\1\20",
			"\1\25\3\uffff\1\16\74\uffff\1\26\u00ab\uffff\1\20",
			"\1\27\3\uffff\1\16\74\uffff\1\30\u00ab\uffff\1\20",
			"\1\31\3\uffff\1\16\74\uffff\1\32\u00ab\uffff\1\20",
			"\1\33",
			"\1\34\143\uffff\1\34",
			"\1\36\u008f\uffff\1\35",
			"\1\37\u00fe\uffff\1\40\1\41",
			"",
			"\1\42",
			"",
			"\1\43\u00fe\uffff\1\44\1\45",
			"\1\46",
			"\1\47",
			"\1\50",
			"\1\51",
			"\1\52",
			"\1\53",
			"\1\54",
			"\1\55",
			"\1\56",
			"\1\57",
			"\1\60",
			"\1\16\u00e8\uffff\1\20",
			"\1\61\u008f\uffff\1\35",
			"\1\62",
			"\1\63",
			"\1\64",
			"\1\65",
			"\1\66",
			"\1\67",
			"\1\70",
			"\1\71",
			"\1\72",
			"\1\73",
			"\1\74",
			"\1\75",
			"\1\76",
			"\1\77",
			"\1\100",
			"\1\101",
			"\1\103\1\uffff\1\102",
			"\1\16\u00e8\uffff\1\20",
			"\1\61\u008f\uffff\1\35",
			"\1\16\74\uffff\1\104\u00ab\uffff\1\20",
			"\1\105",
			"\1\106",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\74\uffff\1\107\u00ab\uffff\1\20",
			"\1\110",
			"\1\111",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\74\uffff\1\112\u00ab\uffff\1\20",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\74\uffff\1\113\u00ab\uffff\1\20",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\74\uffff\1\114\u00ab\uffff\1\20",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\74\uffff\1\115\u00ab\uffff\1\20",
			"\1\16\u00e8\uffff\1\20",
			"\1\116",
			"\1\16\u00e8\uffff\1\20",
			"\1\117",
			"\1\120",
			"\1\121",
			"\1\122",
			"\1\123",
			"\1\124",
			"\1\125",
			"\1\126",
			"\1\127",
			"\1\130",
			"\1\103\1\uffff\1\102",
			"\1\131",
			"\1\62",
			"\1\62",
			"\1\132",
			"\1\66",
			"\1\66",
			"\1\133",
			"\1\134",
			"\1\135",
			"\1\136",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\u00e8\uffff\1\20",
			"\1\16\u00e8\uffff\1\20"
	};

	static final short[] DFA65_eot = DFA.unpackEncodedString(DFA65_eotS);
	static final short[] DFA65_eof = DFA.unpackEncodedString(DFA65_eofS);
	static final char[] DFA65_min = DFA.unpackEncodedStringToUnsignedChars(DFA65_minS);
	static final char[] DFA65_max = DFA.unpackEncodedStringToUnsignedChars(DFA65_maxS);
	static final short[] DFA65_accept = DFA.unpackEncodedString(DFA65_acceptS);
	static final short[] DFA65_special = DFA.unpackEncodedString(DFA65_specialS);
	static final short[][] DFA65_transition;

	static {
		int numStates = DFA65_transitionS.length;
		DFA65_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA65_transition[i] = DFA.unpackEncodedString(DFA65_transitionS[i]);
		}
	}

	protected class DFA65 extends DFA {

		public DFA65(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 65;
			this.eot = DFA65_eot;
			this.eof = DFA65_eof;
			this.min = DFA65_min;
			this.max = DFA65_max;
			this.accept = DFA65_accept;
			this.special = DFA65_special;
			this.transition = DFA65_transition;
		}
		@Override
		public String getDescription() {
			return "777:1: ddItemList : ( ddItem ',' ddItemList | ddItem );";
		}
	}

	static final String DFA94_eotS =
		"\162\uffff";
	static final String DFA94_eofS =
		"\1\1\3\uffff\1\57\33\uffff\1\71\25\uffff\3\71\1\uffff\13\71\1\uffff\34"+
		"\71\2\uffff\6\71\10\uffff";
	static final String DFA94_minS =
		"\1\55\1\uffff\1\u0102\1\u014b\1\u0103\13\uffff\1\u0183\17\uffff\1\27\12"+
		"\uffff\1\u00cd\11\uffff\1\170\3\u0101\1\uffff\13\u0101\1\u0183\34\u0101"+
		"\1\uffff\1\u0105\6\u0101\2\u00cd\1\u0105\1\u0103\1\u00cd\2\uffff\1\u0103";
	static final String DFA94_maxS =
		"\1\u01ea\1\uffff\1\u0102\1\u01d2\1\u0154\13\uffff\1\u0187\17\uffff\1\u01ea"+
		"\12\uffff\1\u00cd\11\uffff\1\u0144\3\u01e8\1\uffff\13\u01e8\1\u0187\34"+
		"\u01e8\1\uffff\1\u0106\6\u01e8\2\u00cd\2\u0106\1\u00cd\2\uffff\1\u0106";
	static final String DFA94_acceptS =
		"\1\uffff\1\1\3\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20"+
		"\1\21\1\uffff\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1"+
		"\41\1\42\1\43\1\44\1\uffff\1\47\1\51\1\52\1\53\1\54\1\55\1\57\1\60\1\61"+
		"\1\62\1\uffff\1\4\1\5\1\56\1\6\1\22\1\23\1\24\1\25\1\50\4\uffff\1\45\50"+
		"\uffff\1\46\14\uffff\1\2\1\3\1\uffff";
	static final String DFA94_specialS =
		"\162\uffff}>";
	static final String[] DFA94_transitionS = {
			"\1\27\1\uffff\1\44\u00d3\uffff\2\1\61\uffff\1\52\14\uffff\1\1\5\uffff"+
			"\1\45\2\uffff\1\50\7\uffff\1\10\2\uffff\1\5\1\2\1\26\1\25\4\uffff\1\17"+
			"\16\uffff\1\3\2\uffff\1\15\1\16\7\uffff\1\35\10\uffff\1\41\1\12\1\13"+
			"\1\14\1\11\1\37\1\uffff\1\34\5\uffff\1\30\1\51\1\32\1\31\3\uffff\1\47"+
			"\3\uffff\1\43\14\uffff\1\33\31\uffff\1\40\14\uffff\1\36\1\uffff\1\6\1"+
			"\uffff\1\46\6\uffff\1\42\1\22\1\23\1\24\1\21\3\uffff\1\20\4\uffff\1\4"+
			"\2\uffff\1\7",
			"",
			"\1\53",
			"\1\55\u0086\uffff\1\54",
			"\2\57\76\uffff\1\57\20\uffff\1\56",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\64\1\61\1\62\1\63\1\60",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\132\1\137\24\uffff\1\114\6\uffff\1\126\4\uffff\1\140\6\uffff\1\141"+
			"\u00c0\uffff\1\67\1\uffff\1\71\1\70\1\uffff\1\142\74\uffff\1\65\20\uffff"+
			"\1\76\2\uffff\1\74\1\uffff\1\113\1\112\4\uffff\1\124\12\uffff\1\131\6"+
			"\uffff\1\103\1\104\5\uffff\1\125\1\uffff\1\120\10\uffff\1\122\1\100\1"+
			"\101\1\102\1\77\2\uffff\1\117\5\uffff\1\115\2\uffff\1\116\21\uffff\1"+
			"\72\23\uffff\1\130\10\uffff\1\121\6\uffff\1\134\1\136\1\133\1\135\15"+
			"\uffff\1\123\1\107\1\110\1\111\1\106\3\uffff\1\105\1\127\3\uffff\1\73"+
			"\1\66\1\uffff\1\75",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\143",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\71\u008c\uffff\1\71\76\uffff\1\144",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\151\1\146\1\147\1\150\1\145",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"",
			"\1\152\1\153",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\67\1\uffff\2\71\1\uffff\1\142\74\uffff\1\65\u00a4\uffff\1\66",
			"\1\154",
			"\1\155",
			"\1\152\1\153",
			"\1\160\1\uffff\1\156\1\157",
			"\1\161",
			"",
			"",
			"\1\160\1\uffff\1\156\1\157"
	};

	static final short[] DFA94_eot = DFA.unpackEncodedString(DFA94_eotS);
	static final short[] DFA94_eof = DFA.unpackEncodedString(DFA94_eofS);
	static final char[] DFA94_min = DFA.unpackEncodedStringToUnsignedChars(DFA94_minS);
	static final char[] DFA94_max = DFA.unpackEncodedStringToUnsignedChars(DFA94_maxS);
	static final short[] DFA94_accept = DFA.unpackEncodedString(DFA94_acceptS);
	static final short[] DFA94_special = DFA.unpackEncodedString(DFA94_specialS);
	static final short[][] DFA94_transition;

	static {
		int numStates = DFA94_transitionS.length;
		DFA94_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA94_transition[i] = DFA.unpackEncodedString(DFA94_transitionS[i]);
		}
	}

	protected class DFA94 extends DFA {

		public DFA94(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 94;
			this.eot = DFA94_eot;
			this.eof = DFA94_eof;
			this.min = DFA94_min;
			this.max = DFA94_max;
			this.accept = DFA94_accept;
			this.special = DFA94_special;
			this.transition = DFA94_transition;
		}
		@Override
		public String getDescription() {
			return "1080:27: (| 'custom' '(' compQstring ',' compQstring ',' compQstring ',' compQstring ')' | 'custom' '(' compQstring ',' compQstring ')' | 'fixed' 'sysstring' '[' int32 ']' | 'fixed' 'array' '[' int32 ']' nativeType | 'variant' | 'currency' | 'syschar' | 'void' | 'bool' | 'int8' | 'int16' | 'int32' | 'int64' | 'float32' | 'float64' | 'error' | 'unsigned' 'int8' | 'unsigned' 'int16' | 'unsigned' 'int32' | 'unsigned' 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | 'decimal' | 'date' | 'bstr' | 'lpstr' | 'lpwstr' | 'lptstr' | 'objectref' | 'iunknown' iidParamIndex | 'idispatch' iidParamIndex | 'struct' | 'interface' iidParamIndex | 'safearray' variantType | 'safearray' variantType ',' compQstring | 'int' | 'unsigned' 'int' | 'uint' | 'nested' 'struct' | 'byvalstr' | 'ansi' 'bstr' | 'tbstr' | 'variant' 'bool' | 'method' | 'as' 'any' | 'lpstruct' | typedef_ts )";
		}
	}

	public static final BitSet FOLLOW_decls_in_start5912 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_decl_in_decls5966 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0ACC0C3E38C36400L});
	public static final BitSet FOLLOW_classHead_in_decl6025 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_decl6027 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00421F0230732000L,0x0000000000000000L,0x0000400000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_classDecls_in_decl6029 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_decl6031 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_nameSpaceHead_in_decl6060 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_decl6062 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0ACC0C3E38C36400L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_decls_in_decl6064 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_decl6066 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_methodHead_in_decl6095 = new BitSet(new long[]{0x4D2B130FFE7FFFF0L,0xFEE0F37FFFFFFFF6L,0xFFFFDFFFBFFFFFFFL,0xBFFFFFFFFFFBDFFEL,0x14600D01B02F0000L,0x0000000000000000L,0x0000400000000000L,0x0000C00000000000L});
	public static final BitSet FOLLOW_methodDecls_in_decl6098 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_decl6100 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fieldDecl_in_decl6129 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_dataDecl_in_decl6157 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vtableDecl_in_decl6185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vtfixupDecl_in_decl6213 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extSourceSpec_in_decl6241 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fileDecl_in_decl6269 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assemblyHead_in_decl6297 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_decl6299 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x01402C0044010000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_assemblyDecls_in_decl6301 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_decl6303 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assemblyRefHead_in_decl6332 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_decl6334 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0140600044010000L,0x0000000000010000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_assemblyRefDecls_in_decl6336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_decl6338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exptypeHead_in_decl6367 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_decl6369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000812400L,0x0000000000000000L,0x0000000000400000L,0x0000800000000000L});
	public static final BitSet FOLLOW_exptypeDecls_in_decl6371 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_decl6373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_manifestResHead_in_decl6402 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_decl6404 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000810400L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_manifestResDecls_in_decl6406 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_decl6408 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moduleHead_in_decl6437 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secDecl_in_decl6465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_decl6493 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_307_in_decl6521 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_decl6523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_270_in_decl6552 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_decl6554 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_279_in_decl6583 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_327_in_decl6585 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_decl6587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_283_in_decl6616 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_decl6618 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_306_in_decl6647 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_decl6649 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_languageDecl_in_decl6678 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedefDecl_in_decl6706 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_311_in_decl6734 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_decl6736 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000000000400000L,0x0000800000000000L});
	public static final BitSet FOLLOW_classNameSeq_in_decl6738 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_decl6740 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_292_in_decl6768 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_classNameSeq6865 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000000000400000L});
	public static final BitSet FOLLOW_classNameSeq_in_classNameSeq6867 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_QSTRING_in_compQstring6937 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_261_in_compQstring6941 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_QSTRING_in_compQstring6943 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_284_in_languageDecl6990 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_languageDecl6992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_284_in_languageDecl7021 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_languageDecl7023 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_languageDecl7025 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_languageDecl7027 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_284_in_languageDecl7056 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_languageDecl7058 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_languageDecl7060 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_languageDecl7062 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_languageDecl7064 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_languageDecl7066 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_id_in_dottedName7223 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
	public static final BitSet FOLLOW_DOTTEDNAME_in_dottedName7227 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
	public static final BitSet FOLLOW_DOT_in_dottedName7231 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_dottedName7233 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
	public static final BitSet FOLLOW_INT32_in_int327287 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INT32_in_int647366 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FLOAT64_in_float647416 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_369_in_float647445 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_float647447 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_float647449 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_float647451 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_370_in_float647480 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_float647482 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_float647484 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_float647486 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_310_in_typedef_ts7535 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_typedef_ts7537 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_typedef_ts7539 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typedef_ts7541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_310_in_typedef_t7563 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000000000400000L});
	public static final BitSet FOLLOW_className_in_typedef_t7565 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_typedef_t7567 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typedef_t7569 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_310_in_typedef_m7591 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000C00000L});
	public static final BitSet FOLLOW_memberRef_in_typedef_m7593 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_typedef_m7595 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typedef_m7597 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_m_in_typedef_f7619 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_m_in_typedef_mr7640 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_310_in_typedef_ca7661 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_customDescr_in_typedef_ca7663 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_typedef_ca7665 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typedef_ca7667 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_310_in_typedef_ca7696 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_customDescrWithOwner_in_typedef_ca7698 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_typedef_ca7700 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typedef_ca7702 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_ts_in_typedefDecl7746 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_t_in_typedefDecl7775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_m_in_typedefDecl7804 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_ca_in_typedefDecl7833 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_customDescr7880 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_customDescr7882 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_customDescr7911 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_customDescr7913 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_customDescr7915 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_customDescr7917 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_customDescr7946 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_customDescr7948 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_customDescr7950 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_customDescr7952 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006020000100000L,0x00800080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_customBlobDescr_in_customDescr7954 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_customDescr7956 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customHead_in_customDescr7985 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_customDescr7987 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_customDescr7989 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_customDescrWithOwner8026 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_customDescrWithOwner8028 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006020000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_ownerType_in_customDescrWithOwner8030 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_customDescrWithOwner8032 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_customDescrWithOwner8034 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_customDescrWithOwner8063 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_customDescrWithOwner8065 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006020000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_ownerType_in_customDescrWithOwner8067 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_customDescrWithOwner8069 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_customDescrWithOwner8071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_customDescrWithOwner8073 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_customDescrWithOwner8075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_customDescrWithOwner8104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_customDescrWithOwner8106 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006020000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_ownerType_in_customDescrWithOwner8108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_customDescrWithOwner8110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_customDescrWithOwner8112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_customDescrWithOwner8114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_customDescrWithOwner8116 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006020000100000L,0x00800080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_customBlobDescr_in_customDescrWithOwner8118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_customDescrWithOwner8120 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customHeadWithOwner_in_customDescrWithOwner8149 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_customDescrWithOwner8151 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_customDescrWithOwner8153 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_customHead8224 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_customHead8226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_customHead8228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_customHead8230 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_customHeadWithOwner8268 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_customHeadWithOwner8270 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006020000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_ownerType_in_customHeadWithOwner8272 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_customHeadWithOwner8274 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_customHeadWithOwner8276 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_customHeadWithOwner8278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_customHeadWithOwner8280 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_methodRef_in_customType8327 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSpec_in_ownerType8375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_memberRef_in_ownerType8404 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customBlobArgs_in_customBlobDescr8472 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_customBlobNVPairs_in_customBlobDescr8474 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_serInit_in_customBlobArgs8546 = new BitSet(new long[]{0x1000400000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000100000L,0x00000080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_fieldOrProp_in_customBlobNVPairs8617 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0006000040100000L,0x00000080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_serializType_in_customBlobNVPairs8619 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_customBlobNVPairs8621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_customBlobNVPairs8623 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000100000L,0x00000080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_serInit_in_customBlobNVPairs8625 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_customDescr_in_customAttrDecl8745 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customDescrWithOwner_in_customAttrDecl8774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_ca_in_customAttrDecl8803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_simpleType_in_serializType8873 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_472_in_serializType8877 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_423_in_serializType8881 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_350_in_serializType8885 = new BitSet(new long[]{0x8000000000000000L});
	public static final BitSet FOLLOW_CLASS_in_serializType8887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_serializType8889 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_350_in_serializType8893 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000000000400000L});
	public static final BitSet FOLLOW_className_in_serializType8895 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serializType8899 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serializType8901 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_290_in_moduleHead8986 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_290_in_moduleHead9015 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_moduleHead9017 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_290_in_moduleHead9046 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_354_in_moduleHead9048 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_moduleHead9050 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_315_in_vtfixupDecl9122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_vtfixupDecl9124 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_vtfixupDecl9126 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_vtfixupDecl9128 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000008000L,0x4000000000000060L});
	public static final BitSet FOLLOW_vtfixupAttr_in_vtfixupDecl9130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_335_in_vtfixupDecl9132 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_vtfixupDecl9134 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vtableHead_in_vtableDecl9250 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_vtableDecl9252 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_vtableDecl9254 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_313_in_vtableHead9305 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_vtableHead9307 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_vtableHead9309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_293_in_nameSpaceHead9389 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_nameSpaceHead9391 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_269_in_classHeadBegin9433 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_classAttr_in_classHeadBegin9435 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_classHeadBegin9437 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_typarsClause_in_classHeadBegin9439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_classHeadBegin_in_classHead9486 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000200000000L});
	public static final BitSet FOLLOW_extendsClause_in_classHead9488 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_implClause_in_classHead9490 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_440_in_classAttr9543 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_437_in_classAttr9547 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_484_in_classAttr9551 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_350_in_classAttr9555 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_392_in_classAttr9559 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_451_in_classAttr9563 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_325_in_classAttr9567 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_336_in_classAttr9571 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_452_in_classAttr9575 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_352_in_classAttr9579 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_329_in_classAttr9583 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_479_in_classAttr9587 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_337_in_classAttr9591 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_381_in_classAttr9595 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_453_in_classAttr9599 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_411_in_classAttr9603 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_440_in_classAttr9605 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_411_in_classAttr9609 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_437_in_classAttr9611 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_411_in_classAttr9615 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_357_in_classAttr9617 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_411_in_classAttr9621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_333_in_classAttr9623 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_411_in_classAttr9627 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_356_in_classAttr9629 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_411_in_classAttr9633 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_358_in_classAttr9635 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_338_in_classAttr9639 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_454_in_classAttr9643 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_448_in_classAttr9647 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_367_in_classAttr9651 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_classAttr9653 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_classAttr9655 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_classAttr9657 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000800140070220L,0x0120000008000100L,0x0000001080000079L});
	public static final BitSet FOLLOW_353_in_extendsClause9774 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_extendsClause9776 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_380_in_implClause9851 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_implList_in_implClause9853 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_classDecl_in_classDecls9904 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00421F0230732000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_typeSpec_in_implList9979 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_implList9983 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_implList9985 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_typeListNotEmpty_in_typeList10097 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSpec_in_typeListNotEmpty10163 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_typeListNotEmpty10167 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_typeListNotEmpty10169 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_320_in_typarsClause10245 = new BitSet(new long[]{0x8000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x00000000000080A4L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_typars_in_typarsClause10247 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_322_in_typarsClause10249 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typarAttrib_in_typarAttribs10503 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00000000000080A0L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_typarAttribs_in_typarAttribs10505 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typarAttribs_in_typars10581 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_tyBound_in_typars10583 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typars10585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_typarsRest_in_typars10587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typarAttribs_in_typars10616 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typars10618 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_typarsRest_in_typars10620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_262_in_typarsRest10696 = new BitSet(new long[]{0x8000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x00000000000080A4L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_typars_in_typarsRest10698 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_258_in_tyBound10748 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000909L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeList_in_tyBound10750 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_tyBound10752 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_genArityNotEmpty_in_genArity10854 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_320_in_genArityNotEmpty10919 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_genArityNotEmpty10921 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_genArityNotEmpty10923 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_genArityNotEmpty10925 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_322_in_genArityNotEmpty10927 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_methodHead_in_classDecl11002 = new BitSet(new long[]{0x4D2B130FFE7FFFF0L,0xFEE0F37FFFFFFFF6L,0xFFFFDFFFBFFFFFFFL,0xBFFFFFFFFFFBDFFEL,0x14600D01B02F0000L,0x0000000000000000L,0x0000400000000000L,0x0000C00000000000L});
	public static final BitSet FOLLOW_methodDecls_in_classDecl11005 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_classDecl11007 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_classHead_in_classDecl11036 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_classDecl11038 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00421F0230732000L,0x0000000000000000L,0x0000400000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_classDecls_in_classDecl11040 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_classDecl11042 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_eventHead_in_classDecl11071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_classDecl11073 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040808031010200L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_eventDecls_in_classDecl11075 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_classDecl11077 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propHead_in_classDecl11106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_classDecl11108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0041008032010000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_propDecls_in_classDecl11110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_classDecl11112 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fieldDecl_in_classDecl11141 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_dataDecl_in_classDecl11169 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secDecl_in_classDecl11197 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extSourceSpec_in_classDecl11225 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_classDecl11253 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_305_in_classDecl11281 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_classDecl11283 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_297_in_classDecl11312 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_classDecl11314 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exportHead_in_classDecl11343 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_classDecl11345 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000812400L,0x0000000000000000L,0x0000000000400000L,0x0000800000000000L});
	public static final BitSet FOLLOW_exptypeDecls_in_classDecl11347 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_classDecl11349 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_296_in_classDecl11378 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_classDecl11380 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_classDecl11382 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_classDecl11384 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_492_in_classDecl11386 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_classDecl11388 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_classDecl11390 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_classDecl11392 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_classDecl11394 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_classDecl11396 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_classDecl11398 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_classDecl11400 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_classDecl11402 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_296_in_classDecl11432 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_407_in_classDecl11434 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_classDecl11436 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_classDecl11438 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_classDecl11440 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_classDecl11442 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_classDecl11444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArity_in_classDecl11446 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_classDecl11448 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_classDecl11450 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_classDecl11452 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_492_in_classDecl11454 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_407_in_classDecl11456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_classDecl11458 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_classDecl11460 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_classDecl11462 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_classDecl11464 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_classDecl11466 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArity_in_classDecl11468 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_classDecl11470 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_classDecl11472 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_classDecl11474 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_languageDecl_in_classDecl11503 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_430_in_classDecl11531 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_472_in_classDecl11533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_classDecl11535 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_classDecl11537 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_classDecl11539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_430_in_classDecl11568 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_472_in_classDecl11570 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_classDecl11572 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_278_in_fieldDecl11646 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006807000102008L,0x0160009004A080F2L,0x000004347A0040C1L});
	public static final BitSet FOLLOW_repeatOpt_in_fieldDecl11648 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006807000102000L,0x0160009004A080F2L,0x000004347A0040C1L});
	public static final BitSet FOLLOW_fieldAttr_in_fieldDecl11650 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_fieldDecl11652 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_fieldDecl11654 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008002L});
	public static final BitSet FOLLOW_atOpt_in_fieldDecl11656 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_initOpt_in_fieldDecl11658 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_455_in_fieldAttr11711 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_440_in_fieldAttr11715 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_437_in_fieldAttr11719 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_357_in_fieldAttr11723 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_385_in_fieldAttr11727 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_448_in_fieldAttr11731 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_454_in_fieldAttr11738 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_405_in_fieldAttr11793 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldAttr11795 = new BitSet(new long[]{0x0000A00000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000018L,0x0406400087901208L,0x00000100088F05F8L,0x000004847C0A8004L});
	public static final BitSet FOLLOW_nativeType_in_fieldAttr11797 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldAttr11799 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_333_in_fieldAttr11803 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_356_in_fieldAttr11807 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_358_in_fieldAttr11811 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_438_in_fieldAttr11815 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_399_in_fieldAttr11819 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_420_in_fieldAttr11823 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_367_in_fieldAttr11827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldAttr11829 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldAttr11831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldAttr11833 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000807000002000L,0x0160001000208002L,0x00000000000000C1L});
	public static final BitSet FOLLOW_335_in_atOpt11917 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_atOpt11919 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_initOpt11998 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0006000000100000L,0x00000040000000F0L,0x0000000478000000L});
	public static final BitSet FOLLOW_fieldInit_in_initOpt12000 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_repeatOpt12101 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_repeatOpt12103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_repeatOpt12105 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callConv_in_methodRef12179 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_methodRef12181 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_methodRef12183 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_methodRef12185 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_methodRef12187 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_tyArgs0_in_methodRef12189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methodRef12191 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_methodRef12193 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methodRef12195 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callConv_in_methodRef12224 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_methodRef12226 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_methodRef12228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_methodRef12230 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_methodRef12232 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArityNotEmpty_in_methodRef12234 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methodRef12236 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_methodRef12238 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methodRef12240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callConv_in_methodRef12269 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_methodRef12271 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_methodRef12273 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_tyArgs0_in_methodRef12275 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methodRef12277 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_methodRef12279 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methodRef12281 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callConv_in_methodRef12310 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_methodRef12312 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_methodRef12314 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArityNotEmpty_in_methodRef12316 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methodRef12318 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_methodRef12320 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methodRef12322 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mdtoken_in_methodRef12351 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_m_in_methodRef12380 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_mr_in_methodRef12470 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_386_in_callConv12604 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_callConv12606 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_352_in_callConv12635 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_callConv12637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callKind_in_callConv12666 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_341_in_callConv12695 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_callConv12697 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_callConv12699 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_callConv12701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_347_in_callKind12779 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_486_in_callKind12808 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_480_in_callKind12837 = new BitSet(new long[]{0x0080000000000000L});
	public static final BitSet FOLLOW_CDECL_in_callKind12839 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_480_in_callKind12868 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_456_in_callKind12870 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_480_in_callKind12899 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_468_in_callKind12901 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_480_in_callKind12930 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_359_in_callKind12932 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_406_in_mdtoken12982 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_mdtoken12984 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_mdtoken12986 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_mdtoken12988 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_methodSpec_in_memberRef13036 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_memberRef13038 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_361_in_memberRef13067 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_memberRef13069 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_memberRef13071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_memberRef13073 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_memberRef13075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_361_in_memberRef13104 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_memberRef13106 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_memberRef13108 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_361_in_memberRef13137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_typedef_f_in_memberRef13139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_361_in_memberRef13168 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_typedef_mr_in_memberRef13170 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mdtoken_in_memberRef13199 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_276_in_eventHead13273 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004041L});
	public static final BitSet FOLLOW_eventAttr_in_eventHead13275 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_eventHead13277 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_eventHead13279 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_276_in_eventHead13308 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000041L});
	public static final BitSet FOLLOW_eventAttr_in_eventHead13310 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_eventHead13312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_eventDecl_in_eventDecls13426 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040808031010200L});
	public static final BitSet FOLLOW_265_in_eventDecl13475 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_eventDecl13477 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_303_in_eventDecl13506 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_eventDecl13508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_280_in_eventDecl13537 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_eventDecl13539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_295_in_eventDecl13568 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_eventDecl13570 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extSourceSpec_in_eventDecl13599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_eventDecl13627 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_languageDecl_in_eventDecl13655 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_300_in_propHead13730 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000041L});
	public static final BitSet FOLLOW_propAttr_in_propHead13732 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_propHead13734 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_propHead13736 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_propHead13738 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_propHead13740 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_propHead13742 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_propHead13744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_initOpt_in_propHead13746 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propDecl_in_propDecls13861 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0041008032010000L});
	public static final BitSet FOLLOW_304_in_propDecl13912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_propDecl13914 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_281_in_propDecl13943 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_propDecl13945 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_295_in_propDecl13974 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_propDecl13976 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_propDecl14005 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extSourceSpec_in_propDecl14033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_languageDecl_in_propDecl14061 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_289_in_methodHeadPart114104 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_405_in_marshalClause14201 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_marshalClause14203 = new BitSet(new long[]{0x0000A00000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000018L,0x0406400087901208L,0x00000100088F05F8L,0x000004847C0A8004L});
	public static final BitSet FOLLOW_nativeType_in_marshalClause14205 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_marshalClause14207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_methodHeadPart1_in_methodHead14254 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907108202020L,0x2162000010000004L,0x00000243000020C1L});
	public static final BitSet FOLLOW_methAttr_in_methodHead14256 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_methodHead14258 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_paramAttr_in_methodHead14260 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_methodHead14262 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_marshalClause_in_methodHead14264 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_methodHead14266 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_typarsClause_in_methodHead14268 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methodHead14269 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_methodHead14271 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methodHead14273 = new BitSet(new long[]{0x2000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000400100010002L});
	public static final BitSet FOLLOW_implAttr_in_methodHead14275 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_methodHead14277 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_455_in_methAttr14331 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_440_in_methAttr14335 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_437_in_methAttr14339 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_357_in_methAttr14343 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_364_in_methAttr14347 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_454_in_methAttr14351 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_489_in_methAttr14355 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_461_in_methAttr14359 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_325_in_methAttr14363 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_333_in_methAttr14367 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_356_in_methAttr14371 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_358_in_methAttr14375 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_438_in_methAttr14379 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_375_in_methAttr14383 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_412_in_methAttr14387 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_448_in_methAttr14391 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_481_in_methAttr14397 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_445_in_methAttr14401 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_367_in_methAttr14405 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methAttr14407 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methAttr14409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methAttr14411 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_433_in_methAttr14415 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methAttr14417 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_methAttr14419 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_methAttr14421 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_methAttr14423 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_pinvAttr_in_methAttr14425 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methAttr14427 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_433_in_methAttr14431 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methAttr14433 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_methAttr14435 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_pinvAttr_in_methAttr14438 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methAttr14440 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_433_in_methAttr14444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methAttr14446 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_pinvAttr_in_methAttr14448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methAttr14450 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080907000002020L,0x2162000010000000L,0x00000202000020C1L});
	public static final BitSet FOLLOW_414_in_pinvAttr14506 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_329_in_pinvAttr14510 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_479_in_pinvAttr14514 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_337_in_pinvAttr14518 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_395_in_pinvAttr14522 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_491_in_pinvAttr14526 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_CDECL_in_pinvAttr14530 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_456_in_pinvAttr14534 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_468_in_pinvAttr14538 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_359_in_pinvAttr14542 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_339_in_pinvAttr14546 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_pinvAttr14548 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_426_in_pinvAttr14550 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_339_in_pinvAttr14554 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_pinvAttr14556 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_425_in_pinvAttr14558 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_342_in_pinvAttr14562 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_pinvAttr14564 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_426_in_pinvAttr14566 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_342_in_pinvAttr14570 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_pinvAttr14572 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_425_in_pinvAttr14574 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_367_in_pinvAttr14578 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_pinvAttr14580 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_pinvAttr14582 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_pinvAttr14584 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00008080004A0200L,0x0000000040000800L,0x0000080080100100L});
	public static final BitSet FOLLOW_271_in_methodName14633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_268_in_methodName14662 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_dottedName_in_methodName14691 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_paramAttr14744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_382_in_paramAttr14746 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_paramAttr14748 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_paramAttr14752 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_429_in_paramAttr14754 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_paramAttr14756 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_paramAttr14760 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_427_in_paramAttr14762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_paramAttr14764 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_paramAttr14768 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_paramAttr14770 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_paramAttr14772 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_410_in_implAttr14837 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_CIL_in_implAttr14841 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_428_in_implAttr14845 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_404_in_implAttr14849 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_480_in_implAttr14853 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_372_in_implAttr14857 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_436_in_implAttr14861 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_449_in_implAttr14865 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_393_in_implAttr14869 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_464_in_implAttr14873 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_413_in_implAttr14877 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_419_in_implAttr14881 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_367_in_implAttr14885 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_implAttr14887 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_implAttr14889 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_implAttr14891 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010800000000000L,0x0010100824100200L,0x0000000100010002L});
	public static final BitSet FOLLOW_287_in_localsHead14940 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_methodDecl_in_methodDecls14991 = new BitSet(new long[]{0x4D2B130FFE7FFFF2L,0xFEE0F37FFFFFFFF6L,0xFFFFDFFFBFFFFFFFL,0xBFFFFFFFFFFBDFFEL,0x14600D01B02F0000L,0x0000000000000000L,0x0000400000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_274_in_methodDecl15039 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methodDecl15041 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sehBlock_in_methodDecl15070 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_288_in_methodDecl15099 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methodDecl15101 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_localsHead_in_methodDecl15130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methodDecl15132 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_methodDecl15134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methodDecl15136 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_localsHead_in_methodDecl15165 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_384_in_methodDecl15167 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methodDecl15169 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_methodDecl15171 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methodDecl15173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_275_in_methodDecl15202 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_316_in_methodDecl15231 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_dataDecl_in_methodDecl15260 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_in_methodDecl15288 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_id_in_methodDecl15316 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_methodDecl15318 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secDecl_in_methodDecl15347 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extSourceSpec_in_methodDecl15375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_languageDecl_in_methodDecl15403 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_methodDecl15431 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_277_in_methodDecl15459 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_methodDecl15461 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methodDecl15463 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_methodDecl15465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_277_in_methodDecl15494 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_methodDecl15496 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methodDecl15498 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_methodDecl15500 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_methodDecl15502 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_methodDecl15504 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_314_in_methodDecl15533 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methodDecl15535 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_methodDecl15537 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methodDecl15539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_296_in_methodDecl15568 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_methodDecl15570 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_methodDecl15572 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_methodDecl15574 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_296_in_methodDecl15604 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_407_in_methodDecl15606 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_methodDecl15608 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_methodDecl15610 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_methodDecl15612 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_methodDecl15614 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_methodDecl15616 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArity_in_methodDecl15618 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_methodDecl15620 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_methodDecl15622 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_methodDecl15624 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_scopeBlock_in_methodDecl15653 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_430_in_methodDecl15681 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_472_in_methodDecl15683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_methodDecl15685 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methodDecl15687 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_methodDecl15689 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_430_in_methodDecl15718 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_472_in_methodDecl15720 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_methodDecl15722 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_430_in_methodDecl15751 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_methodDecl15753 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_methodDecl15755 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_methodDecl15757 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_initOpt_in_methodDecl15759 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_scopeOpen_in_scopeBlock15806 = new BitSet(new long[]{0x4D2B130FFE7FFFF0L,0xFEE0F37FFFFFFFF6L,0xFFFFDFFFBFFFFFFFL,0xBFFFFFFFFFFBDFFEL,0x14600D01B02F0000L,0x0000000000000000L,0x0000400000000000L,0x0000C00000000000L});
	public static final BitSet FOLLOW_methodDecls_in_scopeBlock15808 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_scopeBlock15810 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_494_in_scopeOpen15858 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_tryBlock_in_sehBlock15935 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000290000000000L});
	public static final BitSet FOLLOW_sehClauses_in_sehBlock15937 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sehClause_in_sehClauses15983 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000290000000000L});
	public static final BitSet FOLLOW_sehClauses_in_sehClauses15985 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sehClause_in_sehClauses16013 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_tryHead_in_tryBlock16061 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_scopeBlock_in_tryBlock16063 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_tryHead_in_tryBlock16092 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_tryBlock16094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_470_in_tryBlock16096 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_tryBlock16098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_tryHead_in_tryBlock16127 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_tryBlock16129 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_470_in_tryBlock16131 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_tryBlock16133 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_309_in_tryHead16183 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_catchClause_in_sehClause16232 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_handlerBlock_in_sehClause16234 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_filterClause_in_sehClause16263 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_handlerBlock_in_sehClause16265 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_finallyClause_in_sehClause16294 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_handlerBlock_in_sehClause16296 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_faultClause_in_sehClause16325 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_handlerBlock_in_sehClause16327 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_filterHead_in_filterClause16501 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_scopeBlock_in_filterClause16503 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_filterHead_in_filterClause16532 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_filterClause16534 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_filterHead_in_filterClause16563 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_filterClause16565 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_363_in_filterHead16612 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CATCH_in_catchClause16659 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_catchClause16661 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_365_in_finallyClause16705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_360_in_faultClause16751 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_scopeBlock_in_handlerBlock16796 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_374_in_handlerBlock16842 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_handlerBlock16844 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_470_in_handlerBlock16846 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_handlerBlock16848 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_374_in_handlerBlock16877 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_handlerBlock16879 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_470_in_handlerBlock16881 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_handlerBlock16883 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ddHead_in_dataDecl16934 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0006000000000000L,0x00000000000000F0L,0x0000400000000000L});
	public static final BitSet FOLLOW_ddBody_in_dataDecl16936 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_273_in_ddHead16986 = new BitSet(new long[]{0x2000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_tls_in_ddHead16988 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_ddHead16990 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_ddHead16992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_273_in_ddHead17021 = new BitSet(new long[]{0x2000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_tls_in_ddHead17023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_469_in_tls17107 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CIL_in_tls17136 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_494_in_ddBody17187 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0006000000000000L,0x00000000000000F0L});
	public static final BitSet FOLLOW_ddItemList_in_ddBody17189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_ddBody17191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ddItem_in_ddBody17219 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ddItem_in_ddItemList17265 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_ddItemList17267 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0006000000000000L,0x00000000000000F0L});
	public static final BitSet FOLLOW_ddItemList_in_ddItemList17269 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ddItem_in_ddItemList17297 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_ddItemCount17371 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_ddItemCount17373 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_ddItemCount17375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHAR_in_ddItem17426 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_260_in_ddItem17428 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_ddItem17430 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_ddItem17432 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_257_in_ddItem17463 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_ddItem17465 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_ddItem17467 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17469 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bytearrayhead_in_ddItem17498 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_ddItem17500 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17502 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_369_in_ddItem17531 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_ddItem17533 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_float64_in_ddItem17535 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17537 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_370_in_ddItem17568 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_ddItem17570 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_float64_in_ddItem17572 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17574 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17576 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_390_in_ddItem17605 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_ddItem17607 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_ddItem17609 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17611 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17613 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_389_in_ddItem17642 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_ddItem17644 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_ddItem17646 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17648 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17650 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_388_in_ddItem17679 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_ddItem17681 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_ddItem17683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17685 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17687 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_391_in_ddItem17716 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_ddItem17718 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_ddItem17720 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_ddItem17722 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17724 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_369_in_ddItem17753 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17755 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_370_in_ddItem17784 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17786 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_390_in_ddItem17815 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17817 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_389_in_ddItem17846 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17848 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_388_in_ddItem17877 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17879 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_391_in_ddItem17908 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_ddItemCount_in_ddItem17910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_369_in_fieldSerInit17957 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit17959 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_float64_in_fieldSerInit17961 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit17963 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_370_in_fieldSerInit17992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit17994 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_float64_in_fieldSerInit17996 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit17998 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_369_in_fieldSerInit18027 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18029 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_370_in_fieldSerInit18062 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18064 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_fieldSerInit18066 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18068 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_390_in_fieldSerInit18097 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18099 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_fieldSerInit18101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_389_in_fieldSerInit18133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18135 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_388_in_fieldSerInit18168 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18170 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18172 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18174 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_391_in_fieldSerInit18203 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18205 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18207 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18209 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_fieldSerInit18238 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_390_in_fieldSerInit18240 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18242 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_fieldSerInit18244 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18246 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_fieldSerInit18276 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_389_in_fieldSerInit18278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18280 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18282 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18284 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_fieldSerInit18313 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_388_in_fieldSerInit18315 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18317 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18319 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18321 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_fieldSerInit18350 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_391_in_fieldSerInit18352 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18354 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18356 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18358 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_477_in_fieldSerInit18387 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18389 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_fieldSerInit18391 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18393 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_476_in_fieldSerInit18423 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18425 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18427 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_475_in_fieldSerInit18458 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18460 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18462 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_478_in_fieldSerInit18493 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18495 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18497 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHAR_in_fieldSerInit18528 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18530 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_fieldSerInit18532 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18534 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_340_in_fieldSerInit18563 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_fieldSerInit18565 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_truefalse_in_fieldSerInit18567 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18569 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bytearrayhead_in_fieldSerInit18598 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_fieldSerInit18600 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fieldSerInit18602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BYTEARRAY_in_bytearrayhead18670 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_bytearrayhead18672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexbytes_in_bytes18753 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HEXBYTE_in_hexbytes18803 = new BitSet(new long[]{0x0000000000000002L,0x0008000000000000L});
	public static final BitSet FOLLOW_HEXBYTE_in_hexbytes18807 = new BitSet(new long[]{0x0000000000000002L,0x0008000000000000L});
	public static final BitSet FOLLOW_fieldSerInit_in_fieldInit18866 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_compQstring_in_fieldInit18895 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_422_in_fieldInit18924 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fieldSerInit_in_serInit19000 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_462_in_serInit19029 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_422_in_serInit19033 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19035 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_462_in_serInit19064 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19066 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_serInit19068 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19070 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_472_in_serInit19099 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19101 = new BitSet(new long[]{0x8000000000000000L});
	public static final BitSet FOLLOW_CLASS_in_serInit19103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_serInit19105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19107 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_472_in_serInit19136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19138 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000000000400000L});
	public static final BitSet FOLLOW_className_in_serInit19140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19142 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_472_in_serInit19171 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19173 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_422_in_serInit19175 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_423_in_serInit19206 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19208 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000100000L,0x00000080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_serInit_in_serInit19210 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19212 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_369_in_serInit19242 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19244 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19246 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19248 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19250 = new BitSet(new long[]{0x0000000000000000L,0x0104000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0006000000000000L});
	public static final BitSet FOLLOW_f32seq_in_serInit19252 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19254 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_370_in_serInit19283 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19285 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19287 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19289 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19291 = new BitSet(new long[]{0x0000000000000000L,0x0104000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0006000000000000L});
	public static final BitSet FOLLOW_f64seq_in_serInit19293 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19295 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_390_in_serInit19324 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19326 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19328 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19330 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19332 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i64seq_in_serInit19334 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19336 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_389_in_serInit19365 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19367 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19371 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19373 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i32seq_in_serInit19375 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19377 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_388_in_serInit19406 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19408 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19410 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19412 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19414 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i16seq_in_serInit19416 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19418 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_391_in_serInit19447 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19449 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19451 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19453 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19455 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i8seq_in_serInit19457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_477_in_serInit19488 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19490 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19492 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19494 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19496 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i64seq_in_serInit19498 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19500 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_476_in_serInit19529 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19531 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19535 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19537 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i32seq_in_serInit19539 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_475_in_serInit19570 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19572 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19574 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19576 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19578 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i16seq_in_serInit19580 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19582 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_478_in_serInit19611 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19613 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19615 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19617 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19619 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i8seq_in_serInit19621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_serInit19652 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_390_in_serInit19654 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19656 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19658 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19660 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19662 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i64seq_in_serInit19664 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19666 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_serInit19695 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_389_in_serInit19697 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19699 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19701 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19703 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19705 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i32seq_in_serInit19707 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_serInit19738 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_388_in_serInit19740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19742 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19746 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19748 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i16seq_in_serInit19750 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19752 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_serInit19781 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_391_in_serInit19783 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19785 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19787 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19789 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19791 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i8seq_in_serInit19793 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHAR_in_serInit19824 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19826 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19828 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19830 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19832 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_i16seq_in_serInit19834 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19836 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_340_in_serInit19865 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19867 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19869 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19871 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19873 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000800000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_boolSeq_in_serInit19875 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19877 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_462_in_serInit19906 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19908 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19910 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19914 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000008L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_sqstringSeq_in_serInit19916 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19918 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_472_in_serInit19947 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19949 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19951 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19953 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19955 = new BitSet(new long[]{0x8000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000808L,0x0000000000000008L,0x0000004000400000L});
	public static final BitSet FOLLOW_classSeq_in_serInit19957 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit19959 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_423_in_serInit19988 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_serInit19990 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_serInit19992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_serInit19994 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_serInit19996 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0006000000100000L,0x00000080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_objSeq_in_serInit19998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_serInit20000 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_float64_in_f32seq20057 = new BitSet(new long[]{0x0000000000000002L,0x0104000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_int32_in_f32seq20061 = new BitSet(new long[]{0x0000000000000002L,0x0104000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_float64_in_f64seq20182 = new BitSet(new long[]{0x0000000000000002L,0x0104000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_int64_in_f64seq20186 = new BitSet(new long[]{0x0000000000000002L,0x0104000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_int64_in_i64seq20268 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_i32seq20350 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_i16seq20432 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_i8seq20515 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
	public static final BitSet FOLLOW_truefalse_in_boolSeq20596 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_422_in_classSeq20757 = new BitSet(new long[]{0x8000000000000002L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000004000400000L});
	public static final BitSet FOLLOW_CLASS_in_classSeq20761 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_classSeq20763 = new BitSet(new long[]{0x8000000000000002L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000004000400000L});
	public static final BitSet FOLLOW_className_in_classSeq20767 = new BitSet(new long[]{0x8000000000000002L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000004000400000L});
	public static final BitSet FOLLOW_serInit_in_objSeq20849 = new BitSet(new long[]{0x1000400000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000100000L,0x00000080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_407_in_methodSpec20905 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LDC_I8_in_instr_i821821 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LDSTR_in_instr_string22309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CALLI_in_instr_sig22357 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LDTOKEN_in_instr_tok22405 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SWITCH_in_instr_switch22450 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_r_in_instr_r_head22495 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_instr_r_head22497 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_none_in_instr22550 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_var_in_instr22579 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_instr22581 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_var_in_instr22610 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_instr22612 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_i_in_instr22641 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_instr22643 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_i8_in_instr22672 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_instr22674 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_r_in_instr22703 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_float64_in_instr22705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_r_in_instr22734 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_instr22736 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_r_head_in_instr22765 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_instr22767 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_instr22769 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_brtarget_in_instr22798 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_instr22800 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_brtarget_in_instr22829 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_instr22831 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_method_in_instr22860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_methodRef_in_instr22862 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_instr22891 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_instr22893 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_instr22895 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_instr22897 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_instr22899 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_instr22928 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_instr22930 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_instr22932 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_instr22961 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_mdtoken_in_instr22963 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_instr22992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_typedef_f_in_instr22994 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_instr23023 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_typedef_mr_in_instr23025 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_type_in_instr23054 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_instr23056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_string_in_instr23085 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_instr23087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_string_in_instr23116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_329_in_instr23118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_instr23120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_instr23122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_instr23124 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_string_in_instr23153 = new BitSet(new long[]{0x0000400000000000L});
	public static final BitSet FOLLOW_bytearrayhead_in_instr23155 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_instr23157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_instr23159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_sig_in_instr23188 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_instr23190 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_instr23192 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_instr23194 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_instr23196 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_instr23198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_tok_in_instr23227 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006020000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_ownerType_in_instr23229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_switch_in_instr23260 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_instr23262 = new BitSet(new long[]{0x0000000000000000L,0x0120000000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_labels_in_instr23264 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_instr23266 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_id_in_labels23370 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_labels23372 = new BitSet(new long[]{0x0000000000000000L,0x0120000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_labels_in_labels23374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_int32_in_labels23403 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_labels23405 = new BitSet(new long[]{0x0000000000000000L,0x0120000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_labels_in_labels23407 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_id_in_labels23436 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_int32_in_labels23465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_320_in_tyArgs023546 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100004L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_tyArgs1_in_tyArgs023548 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_322_in_tyArgs023550 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_tyArgs2_in_tyArgs123629 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_tyArgs223680 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_tyArgs223684 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_tyArgs223686 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_sigArgs1_in_sigArgs023767 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sigArg_in_sigArgs123817 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_sigArgs123821 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArg_in_sigArgs123823 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_264_in_sigArg23876 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_paramAttr_in_sigArg23905 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_sigArg23907 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_marshalClause_in_sigArg23909 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_paramAttr_in_sigArg23938 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_sigArg23940 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_marshalClause_in_sigArg23942 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_sigArg23944 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_className23994 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_className23996 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_className23998 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_slashedName_in_className24000 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_className24029 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_mdtoken_in_className24031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_className24033 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_slashedName_in_className24035 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_className24064 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_260_in_className24066 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_className24068 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_slashedName_in_className24070 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_className24099 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_290_in_className24101 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_className24103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_className24105 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_slashedName_in_className24107 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slashedName_in_className24136 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mdtoken_in_className24165 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_t_in_className24194 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_308_in_className24223 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_267_in_className24252 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_294_in_className24281 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_dottedName_in_slashedName24328 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_317_in_slashedName24332 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_slashedName24334 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_className_in_typeSpec24385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_typeSpec24414 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typeSpec24416 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_typeSpec24418 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_typeSpec24447 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_290_in_typeSpec24449 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_typeSpec24451 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_typeSpec24453 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_typeSpec24482 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_344_in_nativeType24561 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_nativeType24563 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_nativeType24565 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_nativeType24567 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_nativeType24569 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_nativeType24571 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_nativeType24573 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_nativeType24575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_nativeType24577 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_nativeType24579 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_344_in_nativeType24583 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_nativeType24585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_nativeType24587 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_nativeType24589 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_nativeType24591 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_nativeType24593 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_366_in_nativeType24597 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_466_in_nativeType24599 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_nativeType24601 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_nativeType24603 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_nativeType24605 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_366_in_nativeType24609 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_331_in_nativeType24611 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_nativeType24613 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_nativeType24615 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_nativeType24617 = new BitSet(new long[]{0x0000A00000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000010L,0x0406400087901208L,0x00000100088F05F8L,0x000004847C0A8004L});
	public static final BitSet FOLLOW_nativeType_in_nativeType24619 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_487_in_nativeType24623 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_343_in_nativeType24627 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_465_in_nativeType24631 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_490_in_nativeType24635 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_340_in_nativeType24639 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_391_in_nativeType24643 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_388_in_nativeType24647 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_389_in_nativeType24651 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_390_in_nativeType24655 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_369_in_nativeType24659 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_370_in_nativeType24663 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_351_in_nativeType24667 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_482_in_nativeType24671 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_391_in_nativeType24673 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_482_in_nativeType24677 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_388_in_nativeType24679 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_482_in_nativeType24683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_389_in_nativeType24685 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_482_in_nativeType24689 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_390_in_nativeType24691 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_478_in_nativeType24695 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_475_in_nativeType24699 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_476_in_nativeType24703 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_477_in_nativeType24707 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_346_in_nativeType24711 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_345_in_nativeType24715 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_BSTR_in_nativeType24719 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_400_in_nativeType24723 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_403_in_nativeType24727 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_402_in_nativeType24731 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_424_in_nativeType24735 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_394_in_nativeType24739 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000014L,0x0000000000000008L});
	public static final BitSet FOLLOW_iidParamIndex_in_nativeType24742 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_378_in_nativeType24746 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000014L,0x0000000000000008L});
	public static final BitSet FOLLOW_iidParamIndex_in_nativeType24748 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_463_in_nativeType24752 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_392_in_nativeType24756 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000014L,0x0000000000000008L});
	public static final BitSet FOLLOW_iidParamIndex_in_nativeType24758 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_450_in_nativeType24762 = new BitSet(new long[]{0x0210200001800000L,0x0000000000000001L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0506040086900008L,0x02000020000904F8L,0x0000058C7C001E04L});
	public static final BitSet FOLLOW_variantType_in_nativeType24764 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_450_in_nativeType24768 = new BitSet(new long[]{0x0210200001800000L,0x0000000000000001L,0x0000000000000000L,0x0000000000000000L,0x0000000000000052L,0x0506040086900008L,0x02000020000904F8L,0x0000058C7C001E04L});
	public static final BitSet FOLLOW_variantType_in_nativeType24770 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_nativeType24772 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_nativeType24774 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_387_in_nativeType24778 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_482_in_nativeType24782 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_387_in_nativeType24784 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_474_in_nativeType24788 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_411_in_nativeType24792 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_463_in_nativeType24794 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_BYVALSTR_in_nativeType24798 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_329_in_nativeType24802 = new BitSet(new long[]{0x0000200000000000L});
	public static final BitSet FOLLOW_BSTR_in_nativeType24804 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_467_in_nativeType24808 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_487_in_nativeType24812 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_340_in_nativeType24814 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_407_in_nativeType24818 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_332_in_nativeType24822 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_330_in_nativeType24824 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_401_in_nativeType24828 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_typedef_ts_in_nativeType24832 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_260_in_nativeType24836 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_nativeType24840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_nativeType24842 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_nativeType24846 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_nativeType24848 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_nativeType24850 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_nativeType24854 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_nativeType24856 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_261_in_nativeType24858 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_nativeType24860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_nativeType24862 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_nativeType24866 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_261_in_nativeType24868 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_nativeType24870 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_nativeType24872 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000008L});
	public static final BitSet FOLLOW_258_in_iidParamIndex24971 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_379_in_iidParamIndex24973 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_iidParamIndex24975 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_iidParamIndex24977 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_iidParamIndex24979 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_421_in_variantType25054 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_487_in_variantType25058 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_343_in_variantType25062 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_490_in_variantType25066 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_340_in_variantType25070 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_391_in_variantType25074 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_388_in_variantType25078 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_389_in_variantType25082 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_390_in_variantType25086 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_369_in_variantType25090 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_370_in_variantType25094 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_482_in_variantType25098 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_391_in_variantType25100 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_482_in_variantType25104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_388_in_variantType25106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_482_in_variantType25110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_389_in_variantType25112 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_482_in_variantType25116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_390_in_variantType25118 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_478_in_variantType25122 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_475_in_variantType25126 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_476_in_variantType25130 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_477_in_variantType25134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_260_in_variantType25138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_346_in_variantType25142 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_345_in_variantType25146 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_BSTR_in_variantType25150 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_400_in_variantType25154 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_403_in_variantType25158 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_394_in_variantType25162 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_378_in_variantType25166 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_450_in_variantType25170 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_387_in_variantType25174 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_482_in_variantType25178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_387_in_variantType25180 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_474_in_variantType25184 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_351_in_variantType25188 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_376_in_variantType25192 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_CARRAY_in_variantType25196 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_483_in_variantType25200 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_441_in_variantType25204 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_362_in_variantType25208 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_BLOB_in_variantType25212 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_459_in_variantType25216 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_457_in_variantType25220 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_460_in_variantType25224 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_458_in_variantType25228 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_BLOB_OBJECT_in_variantType25232 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_CF_in_variantType25236 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_CLSID_in_variantType25240 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_323_in_variantType25245 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_variantType25247 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_488_in_variantType25251 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_257_in_variantType25255 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000000000000008L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_CLASS_in_type25345 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000000000400000L});
	public static final BitSet FOLLOW_className_in_type25347 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_423_in_type25351 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_484_in_type25355 = new BitSet(new long[]{0x8000000000000000L});
	public static final BitSet FOLLOW_CLASS_in_type25357 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000000000400000L});
	public static final BitSet FOLLOW_className_in_type25359 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_485_in_type25363 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000800L,0x0000000000000008L,0x0000000000400000L});
	public static final BitSet FOLLOW_className_in_type25365 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_methodSpec_in_type25369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_type25371 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_type25373 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_260_in_type25375 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_type25377 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_type25379 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_type25381 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_256_in_type25385 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_256_in_type25387 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_type25389 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_256_in_type25393 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_type25395 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_256_in_type25399 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_256_in_type25401 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_type25403 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_256_in_type25407 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_type25409 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_473_in_type25413 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_490_in_type25417 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_410_in_type25421 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_387_in_type25423 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_410_in_type25427 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_482_in_type25429 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_387_in_type25431 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_410_in_type25435 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_474_in_type25437 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_410_in_type25441 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_368_in_type25443 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_simpleType_in_type25447 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_264_in_type25451 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_type25453 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_323_in_type25457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_type25459 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_323_in_type25463 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000140L});
	public static final BitSet FOLLOW_bounds1_in_type25465 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_type25467 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_257_in_type25499 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_260_in_type25503 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_432_in_type25507 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_409_in_type25511 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_type25513 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_type25515 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_type25517 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_408_in_type25521 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_type25523 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_type25525 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_type25527 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_320_in_type25531 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100004L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_tyArgs1_in_type25533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_322_in_type25535 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000012L,0x0000000000000009L,0x0001000003000000L});
	public static final BitSet FOLLOW_CHAR_in_simpleType25608 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_462_in_simpleType25637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_340_in_simpleType25667 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_391_in_simpleType25696 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_388_in_simpleType25725 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_389_in_simpleType25754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_390_in_simpleType25783 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_369_in_simpleType25812 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_370_in_simpleType25841 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_simpleType25870 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_391_in_simpleType25872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_simpleType25901 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_388_in_simpleType25903 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_simpleType25932 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_389_in_simpleType25934 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_482_in_simpleType25963 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_390_in_simpleType25965 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_478_in_simpleType25994 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_475_in_simpleType26023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_476_in_simpleType26052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_477_in_simpleType26081 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_ts_in_simpleType26110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bound_in_bounds126185 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_bounds126189 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000140L});
	public static final BitSet FOLLOW_bound_in_bounds126191 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_264_in_bound26274 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_int32_in_bound26303 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_int32_in_bound26333 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_264_in_bound26335 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_bound26337 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_int32_in_bound26369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_264_in_bound26371 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_298_in_secDecl26448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_secDecl26450 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_secDecl26452 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_secDecl26454 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_nameValPairs_in_secDecl26456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_secDecl26458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_298_in_secDecl26487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_secDecl26489 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_secDecl26491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_secDecl26493 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_secDecl26495 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006020000100000L,0x00800080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_customBlobDescr_in_secDecl26497 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_secDecl26499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_298_in_secDecl26528 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_secDecl26530 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_secDecl26532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_psetHead_in_secDecl26561 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_secDecl26563 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_secDecl26565 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_299_in_secDecl26594 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_secDecl26596 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_secDecl26598 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_299_in_secDecl26627 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_secDecl26629 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_secDecl26631 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_secDecl26633 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000084347A004000L});
	public static final BitSet FOLLOW_secAttrSetBlob_in_secDecl26635 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_secDecl26637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secAttrBlob_in_secAttrSetBlob26733 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secAttrBlob_in_secAttrSetBlob26762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_secAttrSetBlob26764 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_secAttrSetBlob_in_secAttrSetBlob26766 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSpec_in_secAttrBlob26836 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_secAttrBlob26838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_secAttrBlob26840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0080000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_customBlobNVPairs_in_secAttrBlob26842 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_secAttrBlob26844 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CLASS_in_secAttrBlob26920 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_secAttrBlob26922 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_secAttrBlob26924 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_secAttrBlob26926 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0080000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_customBlobNVPairs_in_secAttrBlob26928 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_secAttrBlob26930 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_299_in_psetHead27026 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_psetHead27028 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_psetHead27030 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_psetHead27032 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_299_in_psetHead27061 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_psetHead27063 = new BitSet(new long[]{0x0000400000000000L});
	public static final BitSet FOLLOW_BYTEARRAY_in_psetHead27065 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_psetHead27067 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_nameValPair_in_nameValPairs27112 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_nameValPair_in_nameValPairs27141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_nameValPairs27143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_nameValPairs_in_nameValPairs27145 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_compQstring_in_nameValPair27191 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_nameValPair27193 = new BitSet(new long[]{0x0000000000000000L,0x0120080000000000L,0x0000000000000000L,0x0000000002002000L,0x0050004000000800L,0x0000000800000008L,0x0000000000400020L,0x0000000000800000L});
	public static final BitSet FOLLOW_caValue_in_nameValPair27195 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_truefalse_in_caValue27322 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_int32_in_caValue27351 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_389_in_caValue27380 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_caValue27382 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_caValue27384 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_caValue27386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_compQstring_in_caValue27415 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_caValue27444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_caValue27446 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_391_in_caValue27448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_caValue27450 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_caValue27452 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_caValue27454 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_caValue27483 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_caValue27485 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_388_in_caValue27487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_caValue27489 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_caValue27491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_caValue27493 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_caValue27522 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_caValue27524 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_389_in_caValue27526 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_caValue27528 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_caValue27530 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_caValue27532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_caValue27561 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_caValue27563 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_caValue27565 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_caValue27567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_285_in_esHead28098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28191 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28193 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_extSourceSpec28195 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28224 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28255 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28257 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_extSourceSpec28259 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28261 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_extSourceSpec28263 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28292 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28294 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_extSourceSpec28296 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28298 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28327 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28329 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_extSourceSpec28331 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28333 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_extSourceSpec28335 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_extSourceSpec28339 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28368 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28370 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_extSourceSpec28372 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28374 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_extSourceSpec28376 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28378 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28407 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_extSourceSpec28411 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28413 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_extSourceSpec28415 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28417 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_extSourceSpec28419 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28448 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28450 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_extSourceSpec28452 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28454 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_extSourceSpec28456 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28487 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28489 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_extSourceSpec28491 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28493 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_extSourceSpec28495 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28497 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_extSourceSpec28499 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28501 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SQSTRING_in_extSourceSpec28503 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28532 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28534 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_extSourceSpec28536 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28538 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_extSourceSpec28540 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28542 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_262_in_extSourceSpec28544 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28546 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_esHead_in_extSourceSpec28575 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_extSourceSpec28577 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_QSTRING_in_extSourceSpec28579 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_279_in_fileDecl28655 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_fileAttr_in_fileDecl28657 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_fileDecl28659 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004080000L});
	public static final BitSet FOLLOW_fileEntry_in_fileDecl28661 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_hashHead_in_fileDecl28663 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_fileDecl28665 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_fileDecl28667 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_fileEntry_in_fileDecl28669 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_279_in_fileDecl28698 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_fileAttr_in_fileDecl28700 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_fileDecl28702 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_fileEntry_in_fileDecl28704 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_415_in_fileAttr28758 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_275_in_fileEntry28837 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_282_in_hashHead28886 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_hashHead28888 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_hashHead28890 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_266_in_assemblyHead28935 = new BitSet(new long[]{0x2000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_asmAttr_in_assemblyHead28937 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_assemblyHead28939 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_447_in_asmAttr28994 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_396_in_asmAttr28998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_397_in_asmAttr29000 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_CIL_in_asmAttr29004 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_493_in_asmAttr29008 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_377_in_asmAttr29012 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_328_in_asmAttr29016 = new BitSet(new long[]{0x2000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_assemblyDecl_in_assemblyDecls29067 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x01402C0044010000L});
	public static final BitSet FOLLOW_282_in_assemblyDecl29113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_326_in_assemblyDecl29115 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_assemblyDecl29117 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secDecl_in_assemblyDecl29146 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_asmOrRefDecl_in_assemblyDecl29174 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_int32_in_intOrWildcard29241 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_260_in_intOrWildcard29270 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_publicKeyHead_in_asmOrRefDecl29339 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_asmOrRefDecl29341 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_asmOrRefDecl29343 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_312_in_asmOrRefDecl29372 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_intOrWildcard_in_asmOrRefDecl29374 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_asmOrRefDecl29376 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_intOrWildcard_in_asmOrRefDecl29378 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_asmOrRefDecl29380 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_intOrWildcard_in_asmOrRefDecl29382 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_asmOrRefDecl29384 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_intOrWildcard_in_asmOrRefDecl29386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_286_in_asmOrRefDecl29415 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_asmOrRefDecl29417 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_localeHead_in_asmOrRefDecl29446 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_asmOrRefDecl29448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_asmOrRefDecl29450 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_asmOrRefDecl29479 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_301_in_publicKeyHead29522 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_publicKeyHead29524 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_publicKeyHead29526 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_302_in_publicKeyTokenHead29565 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_publicKeyTokenHead29567 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_publicKeyTokenHead29569 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_286_in_localeHead29616 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_localeHead29618 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_localeHead29620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_266_in_assemblyRefHead29662 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_354_in_assemblyRefHead29664 = new BitSet(new long[]{0x2000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_asmAttr_in_assemblyRefHead29666 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_assemblyRefHead29668 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_266_in_assemblyRefHead29697 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_354_in_assemblyRefHead29699 = new BitSet(new long[]{0x2000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_asmAttr_in_assemblyRefHead29701 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_assemblyRefHead29703 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_assemblyRefHead29705 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_assemblyRefHead29707 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assemblyRefDecl_in_assemblyRefDecls29753 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0140600044010000L,0x0000000000010000L});
	public static final BitSet FOLLOW_hashHead_in_assemblyRefDecl29796 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_assemblyRefDecl29798 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_assemblyRefDecl29800 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_asmOrRefDecl_in_assemblyRefDecl29829 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_publicKeyTokenHead_in_assemblyRefDecl29857 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_assemblyRefDecl29859 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_assemblyRefDecl29861 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_336_in_assemblyRefDecl29890 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_269_in_exptypeHead29936 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_354_in_exptypeHead29938 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_exptAttr_in_exptypeHead29940 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_exptypeHead29942 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_277_in_exportHead29990 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_exptAttr_in_exportHead29992 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_exportHead29994 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_437_in_exptAttr30052 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_440_in_exptAttr30056 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_371_in_exptAttr30060 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_411_in_exptAttr30064 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_440_in_exptAttr30066 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_411_in_exptAttr30070 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_437_in_exptAttr30072 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_411_in_exptAttr30076 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_357_in_exptAttr30078 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_411_in_exptAttr30082 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_333_in_exptAttr30084 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_411_in_exptAttr30088 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_356_in_exptAttr30090 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_411_in_exptAttr30094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_358_in_exptAttr30096 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0120000008000000L});
	public static final BitSet FOLLOW_exptypeDecl_in_exptypeDecls30148 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000812400L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_279_in_exptypeDecl30195 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_exptypeDecl30197 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_269_in_exptypeDecl30226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_354_in_exptypeDecl30228 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_slashedName_in_exptypeDecl30230 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_266_in_exptypeDecl30259 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_354_in_exptypeDecl30261 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_exptypeDecl30263 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_406_in_exptypeDecl30292 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_exptypeDecl30294 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_exptypeDecl30296 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_exptypeDecl30298 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_269_in_exptypeDecl30327 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_exptypeDecl30330 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_exptypeDecl30359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_291_in_manifestResHead30400 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0120000000000000L});
	public static final BitSet FOLLOW_manresAttr_in_manifestResHead30402 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_manifestResHead30404 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_291_in_manifestResHead30433 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0120000000000000L});
	public static final BitSet FOLLOW_manresAttr_in_manifestResHead30435 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_manifestResHead30437 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_manifestResHead30439 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_manifestResHead30441 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_manifestResDecl_in_manifestResDecls30545 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000810400L});
	public static final BitSet FOLLOW_279_in_manifestResDecl30588 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_manifestResDecl30590 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_335_in_manifestResDecl30592 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_manifestResDecl30594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_266_in_manifestResDecl30623 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_354_in_manifestResDecl30625 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_manifestResDecl30627 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_manifestResDecl30656 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_classHead_in_synpred2_CIL6025 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_synpred2_CIL6027 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00421F0230732000L,0x0000000000000000L,0x0000400000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_classDecls_in_synpred2_CIL6029 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_synpred2_CIL6031 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fileDecl_in_synpred10_CIL6269 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assemblyHead_in_synpred11_CIL6297 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_synpred11_CIL6299 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x01402C0044010000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_assemblyDecls_in_synpred11_CIL6301 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_synpred11_CIL6303 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assemblyRefHead_in_synpred12_CIL6332 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_synpred12_CIL6334 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0140600044010000L,0x0000000000010000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_assemblyRefDecls_in_synpred12_CIL6336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_synpred12_CIL6338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exptypeHead_in_synpred13_CIL6367 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_synpred13_CIL6369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000812400L,0x0000000000000000L,0x0000000000400000L,0x0000800000000000L});
	public static final BitSet FOLLOW_exptypeDecls_in_synpred13_CIL6371 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_synpred13_CIL6373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_customAttrDecl_in_synpred17_CIL6493 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_279_in_synpred20_CIL6583 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_327_in_synpred20_CIL6585 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred20_CIL6587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedefDecl_in_synpred24_CIL6706 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred32_CIL7231 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred32_CIL7233 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_ts_in_synpred36_CIL7746 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_t_in_synpred37_CIL7775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_m_in_synpred38_CIL7804 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_synpred39_CIL7880 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_synpred39_CIL7882 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_synpred40_CIL7911 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_synpred40_CIL7913 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_synpred40_CIL7915 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_synpred40_CIL7917 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_synpred41_CIL7946 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_synpred41_CIL7948 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_synpred41_CIL7950 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_synpred41_CIL7952 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006020000100000L,0x00800080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_customBlobDescr_in_synpred41_CIL7954 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_synpred41_CIL7956 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_synpred42_CIL8026 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred42_CIL8028 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006020000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_ownerType_in_synpred42_CIL8030 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred42_CIL8032 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_synpred42_CIL8034 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_synpred43_CIL8063 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred43_CIL8065 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006020000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_ownerType_in_synpred43_CIL8067 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred43_CIL8069 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_synpred43_CIL8071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_synpred43_CIL8073 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_synpred43_CIL8075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_272_in_synpred44_CIL8104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred44_CIL8106 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006020000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_ownerType_in_synpred44_CIL8108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred44_CIL8110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000108200000L,0x0000000000400004L,0x0000004100000000L});
	public static final BitSet FOLLOW_customType_in_synpred44_CIL8112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_synpred44_CIL8114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_synpred44_CIL8116 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006020000100000L,0x00800080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_customBlobDescr_in_synpred44_CIL8118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_synpred44_CIL8120 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSpec_in_synpred45_CIL8375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typarAttribs_in_synpred100_CIL10581 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_tyBound_in_synpred100_CIL10583 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred100_CIL10585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_typarsRest_in_synpred100_CIL10587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_296_in_synpred115_CIL11378 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred115_CIL11380 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred115_CIL11382 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred115_CIL11384 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_492_in_synpred115_CIL11386 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_synpred115_CIL11388 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred115_CIL11390 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred115_CIL11392 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred115_CIL11394 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred115_CIL11396 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred115_CIL11398 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred115_CIL11400 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred115_CIL11402 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_296_in_synpred116_CIL11432 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_407_in_synpred116_CIL11434 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_synpred116_CIL11436 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred116_CIL11438 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred116_CIL11440 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred116_CIL11442 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred116_CIL11444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArity_in_synpred116_CIL11446 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred116_CIL11448 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred116_CIL11450 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred116_CIL11452 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_492_in_synpred116_CIL11454 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_407_in_synpred116_CIL11456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_synpred116_CIL11458 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred116_CIL11460 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred116_CIL11462 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred116_CIL11464 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred116_CIL11466 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArity_in_synpred116_CIL11468 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred116_CIL11470 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred116_CIL11472 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred116_CIL11474 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_430_in_synpred118_CIL11531 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_472_in_synpred118_CIL11533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_synpred118_CIL11535 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred118_CIL11537 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred118_CIL11539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callConv_in_synpred137_CIL12179 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred137_CIL12181 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred137_CIL12183 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred137_CIL12185 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred137_CIL12187 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_tyArgs0_in_synpred137_CIL12189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred137_CIL12191 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred137_CIL12193 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred137_CIL12195 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callConv_in_synpred138_CIL12224 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred138_CIL12226 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred138_CIL12228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred138_CIL12230 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred138_CIL12232 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArityNotEmpty_in_synpred138_CIL12234 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred138_CIL12236 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred138_CIL12238 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred138_CIL12240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callConv_in_synpred139_CIL12269 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred139_CIL12271 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred139_CIL12273 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_tyArgs0_in_synpred139_CIL12275 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred139_CIL12277 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred139_CIL12279 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred139_CIL12281 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_callConv_in_synpred140_CIL12310 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred140_CIL12312 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred140_CIL12314 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArityNotEmpty_in_synpred140_CIL12316 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred140_CIL12318 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred140_CIL12320 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred140_CIL12322 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typedef_m_in_synpred142_CIL12380 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_361_in_synpred153_CIL13067 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred153_CIL13069 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred153_CIL13071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred153_CIL13073 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred153_CIL13075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_361_in_synpred154_CIL13104 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred154_CIL13106 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred154_CIL13108 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_361_in_synpred155_CIL13137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_typedef_f_in_synpred155_CIL13139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_361_in_synpred156_CIL13168 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_typedef_mr_in_synpred156_CIL13170 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_276_in_synpred157_CIL13273 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004041L});
	public static final BitSet FOLLOW_eventAttr_in_synpred157_CIL13275 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred157_CIL13277 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred157_CIL13279 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_localsHead_in_synpred236_CIL15130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred236_CIL15132 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred236_CIL15134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred236_CIL15136 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_localsHead_in_synpred237_CIL15165 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_384_in_synpred237_CIL15167 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred237_CIL15169 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred237_CIL15171 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred237_CIL15173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_277_in_synpred247_CIL15459 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_synpred247_CIL15461 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred247_CIL15463 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred247_CIL15465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_277_in_synpred248_CIL15494 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_synpred248_CIL15496 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred248_CIL15498 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred248_CIL15500 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_332_in_synpred248_CIL15502 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_synpred248_CIL15504 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_296_in_synpred250_CIL15568 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred250_CIL15570 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred250_CIL15572 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred250_CIL15574 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_296_in_synpred251_CIL15604 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_407_in_synpred251_CIL15606 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000108200000L,0x0000000000000004L,0x0000004100000000L});
	public static final BitSet FOLLOW_callConv_in_synpred251_CIL15608 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred251_CIL15610 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred251_CIL15612 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred251_CIL15614 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000009000L});
	public static final BitSet FOLLOW_methodName_in_synpred251_CIL15616 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000001L});
	public static final BitSet FOLLOW_genArity_in_synpred251_CIL15618 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred251_CIL15620 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000109L,0x0006000000100008L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_sigArgs0_in_synpred251_CIL15622 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred251_CIL15624 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_430_in_synpred253_CIL15681 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_472_in_synpred253_CIL15683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_323_in_synpred253_CIL15685 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred253_CIL15687 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred253_CIL15689 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_430_in_synpred254_CIL15718 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_472_in_synpred254_CIL15720 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred254_CIL15722 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sehClause_in_synpred255_CIL15983 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000290000000000L});
	public static final BitSet FOLLOW_sehClauses_in_synpred255_CIL15985 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_var_in_synpred549_CIL22579 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred549_CIL22581 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_var_in_synpred550_CIL22610 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_synpred550_CIL22612 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_r_in_synpred553_CIL22703 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
	public static final BitSet FOLLOW_float64_in_synpred553_CIL22705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_r_in_synpred554_CIL22734 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int64_in_synpred554_CIL22736 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_r_head_in_synpred555_CIL22765 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_synpred555_CIL22767 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred555_CIL22769 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_brtarget_in_synpred556_CIL22798 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred556_CIL22800 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_brtarget_in_synpred557_CIL22829 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_id_in_synpred557_CIL22831 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_synpred559_CIL22891 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred559_CIL22893 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred559_CIL22895 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_319_in_synpred559_CIL22897 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred559_CIL22899 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_synpred560_CIL22928 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred560_CIL22930 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred560_CIL22932 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_synpred561_CIL22961 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_mdtoken_in_synpred561_CIL22963 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_synpred562_CIL22992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_typedef_f_in_synpred562_CIL22994 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_field_in_synpred563_CIL23023 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_typedef_mr_in_synpred563_CIL23025 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_string_in_synpred565_CIL23085 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_synpred565_CIL23087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_string_in_synpred566_CIL23116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_329_in_synpred566_CIL23118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred566_CIL23120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_synpred566_CIL23122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred566_CIL23124 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_instr_string_in_synpred567_CIL23153 = new BitSet(new long[]{0x0000400000000000L});
	public static final BitSet FOLLOW_bytearrayhead_in_synpred567_CIL23155 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_synpred567_CIL23157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred567_CIL23159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_264_in_synpred579_CIL23876 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_paramAttr_in_synpred580_CIL23905 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100000L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_type_in_synpred580_CIL23907 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_marshalClause_in_synpred580_CIL23909 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_synpred591_CIL24385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred592_CIL24414 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred592_CIL24416 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred592_CIL24418 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred593_CIL24447 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_290_in_synpred593_CIL24449 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred593_CIL24451 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred593_CIL24453 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_260_in_synpred643_CIL24836 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred644_CIL24840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred644_CIL24842 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred645_CIL24846 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred645_CIL24848 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred645_CIL24850 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred646_CIL24854 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred646_CIL24856 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_261_in_synpred646_CIL24858 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred646_CIL24860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred646_CIL24862 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred647_CIL24866 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_261_in_synpred647_CIL24868 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred647_CIL24870 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred647_CIL24872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_260_in_synpred669_CIL25138 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred694_CIL25245 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred694_CIL25247 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred713_CIL25457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred713_CIL25459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_323_in_synpred714_CIL25463 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000140L});
	public static final BitSet FOLLOW_bounds1_in_synpred714_CIL25465 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_324_in_synpred714_CIL25467 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_257_in_synpred715_CIL25499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_260_in_synpred716_CIL25503 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_432_in_synpred717_CIL25507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_409_in_synpred718_CIL25511 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred718_CIL25513 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred718_CIL25515 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred718_CIL25517 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_408_in_synpred719_CIL25521 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred719_CIL25523 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred719_CIL25525 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred719_CIL25527 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_320_in_synpred720_CIL25531 = new BitSet(new long[]{0x9000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000101L,0x0006000000100004L,0x00000080048000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_tyArgs1_in_synpred720_CIL25533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_322_in_synpred720_CIL25535 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_298_in_synpred743_CIL26448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_synpred743_CIL26450 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred743_CIL26452 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred743_CIL26454 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_nameValPairs_in_synpred743_CIL26456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred743_CIL26458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_298_in_synpred744_CIL26487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_synpred744_CIL26489 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred744_CIL26491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_synpred744_CIL26493 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_synpred744_CIL26495 = new BitSet(new long[]{0x1000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0006020000100000L,0x00800080000000F0L,0x0000000479004000L});
	public static final BitSet FOLLOW_customBlobDescr_in_synpred744_CIL26497 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_synpred744_CIL26499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_298_in_synpred745_CIL26528 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_synpred745_CIL26530 = new BitSet(new long[]{0x9000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0050004000000901L,0x0006000000100008L,0x0000008004C000F0L,0x000004347A004000L});
	public static final BitSet FOLLOW_typeSpec_in_synpred745_CIL26532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_psetHead_in_synpred746_CIL26561 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_synpred746_CIL26563 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred746_CIL26565 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_299_in_synpred747_CIL26594 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x8000000030004000L,0x1C0C800700004000L});
	public static final BitSet FOLLOW_secAction_in_synpred747_CIL26596 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_compQstring_in_synpred747_CIL26598 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secAttrBlob_in_synpred749_CIL26733 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSpec_in_synpred750_CIL26836 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_321_in_synpred750_CIL26838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_494_in_synpred750_CIL26840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0080000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_customBlobNVPairs_in_synpred750_CIL26842 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_495_in_synpred750_CIL26844 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_nameValPair_in_synpred752_CIL27112 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_synpred758_CIL27444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred758_CIL27446 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_391_in_synpred758_CIL27448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_synpred758_CIL27450 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred758_CIL27452 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred758_CIL27454 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_synpred759_CIL27483 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred759_CIL27485 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_388_in_synpred759_CIL27487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_synpred759_CIL27489 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred759_CIL27491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred759_CIL27493 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_className_in_synpred760_CIL27522 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_258_in_synpred760_CIL27524 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_389_in_synpred760_CIL27526 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_318_in_synpred760_CIL27528 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_int32_in_synpred760_CIL27530 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred760_CIL27532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_279_in_synpred785_CIL28655 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_fileAttr_in_synpred785_CIL28657 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred785_CIL28659 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004080000L});
	public static final BitSet FOLLOW_fileEntry_in_synpred785_CIL28661 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_hashHead_in_synpred785_CIL28663 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_bytes_in_synpred785_CIL28665 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_259_in_synpred785_CIL28667 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_fileEntry_in_synpred785_CIL28669 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_266_in_synpred802_CIL29662 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_354_in_synpred802_CIL29664 = new BitSet(new long[]{0x2000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0200000000000100L,0x8000000000001000L,0x0000200000000000L});
	public static final BitSet FOLLOW_asmAttr_in_synpred802_CIL29666 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred802_CIL29668 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_291_in_synpred822_CIL30400 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0120000000000000L});
	public static final BitSet FOLLOW_manresAttr_in_synpred822_CIL30402 = new BitSet(new long[]{0x0000000000000000L,0x0020080000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_dottedName_in_synpred822_CIL30404 = new BitSet(new long[]{0x0000000000000002L});
}
